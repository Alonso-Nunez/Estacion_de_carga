

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Apr 19 20:04:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Version 2.40
    55                           ; Generated 17/11/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4550 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataCOMRAM
    91   001894                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _var
    95   001894  30                 	db	48
    96                           
    97                           ;initializer for _MensajeRx
    98   001895  78                 	db	120
    99   001896  78                 	db	120
   100   001897  0A                 	db	10
   101   001898  00                 	db	0
   102                           
   103                           	psect	idataBANK0
   104   00188C                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _MensajeTx
   108   00188C  78                 	db	120
   109   00188D  78                 	db	120
   110   00188E  0A                 	db	10
   111   00188F  00                 	db	0
   112                           
   113                           ;initializer for _MensajeSobrante
   114   001890  78                 	db	120
   115   001891  78                 	db	120
   116   001892  0A                 	db	10
   117   001893  00                 	db	0
   118   000000                     _TXREG	set	4013
   119   000000                     _ADCON0	set	4034
   120   000000                     _ADCON0bits	set	4034
   121   000000                     _TXSTAbits	set	4012
   122   000000                     _PORTD	set	3971
   123   000000                     _LATDbits	set	3980
   124   000000                     _TRISA	set	3986
   125   000000                     _PIR1bits	set	3998
   126   000000                     _PIR2bits	set	4001
   127   000000                     _RCSTA	set	4011
   128   000000                     _TXSTA	set	4012
   129   000000                     _RCREG	set	4014
   130   000000                     _INTCONbits	set	4082
   131   000000                     _IPR1bits	set	3999
   132   000000                     _SPBRG	set	4015
   133   000000                     _CMCON	set	4020
   134   000000                     _ADCON1	set	4033
   135   000000                     _ADRESL	set	4035
   136   000000                     _ADRESH	set	4036
   137   000000                     _RCONbits	set	4048
   138   000000                     _PIE1bits	set	3997
   139   000000                     _TRISE	set	3990
   140   000000                     _TRISD	set	3989
   141   000000                     _TRISC	set	3988
   142   000000                     _TRISB	set	3987
   143   000000                     _BAUDCON	set	4024
   144   000000                     _ADCON2	set	4032
   145   000000                     _LATCbits	set	3979
   146                           
   147                           	psect	smallconst
   148   000800                     __psmallconst:
   149                           	callstack 0
   150   000800  00                 	db	0
   151   000801                     STR_1:
   152   000801  20                 	db	32
   153   000802  49                 	db	73	;'I'
   154   000803  4E                 	db	78	;'N'
   155   000804  53                 	db	83	;'S'
   156   000805  3D                 	db	61	;'='
   157   000806  00                 	db	0
   158   000807                     STR_2:
   159   000807  25                 	db	37
   160   000808  34                 	db	52	;'4'
   161   000809  69                 	db	105	;'i'
   162   00080A  00                 	db	0
   163   00080B  00                 	db	0	; dummy byte at the end
   164   000000                     
   165                           ; #config settings
   166                           
   167                           	psect	cinit
   168   00141A                     __pcinit:
   169                           	callstack 0
   170   00141A                     start_initialization:
   171                           	callstack 0
   172   00141A                     __initialization:
   173                           	callstack 0
   174                           
   175                           ; Initialize objects allocated to BANK0 (8 bytes)
   176                           ; load TBLPTR registers with __pidataBANK0
   177   00141A  0E8C               	movlw	low __pidataBANK0
   178   00141C  6EF6               	movwf	tblptrl,c
   179   00141E  0E18               	movlw	high __pidataBANK0
   180   001420  6EF7               	movwf	tblptrh,c
   181   001422  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   182   001424  6EF8               	movwf	tblptru,c
   183   001426  EE00  F0B6         	lfsr	0,__pdataBANK0
   184   00142A  EE10 F008          	lfsr	1,8
   185   00142E                     copy_data0:
   186   00142E  0009               	tblrd		*+
   187   001430  CFF5 FFEE          	movff	tablat,postinc0
   188   001434  50E5               	movf	postdec1,w,c
   189   001436  50E1               	movf	fsr1l,w,c
   190   001438  E1FA               	bnz	copy_data0
   191                           
   192                           ; Initialize objects allocated to COMRAM (5 bytes)
   193                           ; load TBLPTR registers with __pidataCOMRAM
   194   00143A  0E94               	movlw	low __pidataCOMRAM
   195   00143C  6EF6               	movwf	tblptrl,c
   196   00143E  0E18               	movlw	high __pidataCOMRAM
   197   001440  6EF7               	movwf	tblptrh,c
   198   001442  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   199   001444  6EF8               	movwf	tblptru,c
   200   001446  EE00  F047         	lfsr	0,__pdataCOMRAM
   201   00144A  EE10 F005          	lfsr	1,5
   202   00144E                     copy_data1:
   203   00144E  0009               	tblrd		*+
   204   001450  CFF5 FFEE          	movff	tablat,postinc0
   205   001454  50E5               	movf	postdec1,w,c
   206   001456  50E1               	movf	fsr1l,w,c
   207   001458  E1FA               	bnz	copy_data1
   208                           
   209                           ; Clear objects allocated to BANK0 (37 bytes)
   210   00145A  EE00  F091         	lfsr	0,__pbssBANK0
   211   00145E  0E25               	movlw	37
   212   001460                     clear_0:
   213   001460  6AEE               	clrf	postinc0,c
   214   001462  06E8               	decf	wreg,f,c
   215   001464  E1FD               	bnz	clear_0
   216                           
   217                           ; Clear objects allocated to COMRAM (12 bytes)
   218   001466  EE00  F03B         	lfsr	0,__pbssCOMRAM
   219   00146A  0E0C               	movlw	12
   220   00146C                     clear_1:
   221   00146C  6AEE               	clrf	postinc0,c
   222   00146E  06E8               	decf	wreg,f,c
   223   001470  E1FD               	bnz	clear_1
   224   001472                     end_of_initialization:
   225                           	callstack 0
   226   001472                     __end_of__initialization:
   227                           	callstack 0
   228   001472  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229   001474  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230   001476  0E00               	movlw	low (__Lmediumconst shr (0+16))
   231   001478  6EF8               	movwf	tblptru,c
   232   00147A  0100               	movlb	0
   233   00147C  EF06  F004         	goto	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMRAM
   236   00003B                     __pbssCOMRAM:
   237                           	callstack 0
   238   00003B                     _width:
   239                           	callstack 0
   240   00003B                     	ds	2
   241   00003D                     _prec:
   242                           	callstack 0
   243   00003D                     	ds	2
   244   00003F                     _ValBIN:
   245                           	callstack 0
   246   00003F                     	ds	2
   247   000041                     _flags:
   248                           	callstack 0
   249   000041                     	ds	1
   250   000042                     _num:
   251                           	callstack 0
   252   000042                     	ds	1
   253   000043                     _Instrumento:
   254                           	callstack 0
   255   000043                     	ds	1
   256   000044                     _Num_Caracteres:
   257                           	callstack 0
   258   000044                     	ds	1
   259   000045                     _BanderaRx:
   260                           	callstack 0
   261   000045                     	ds	1
   262   000046                     _BufferLleno:
   263                           	callstack 0
   264   000046                     	ds	1
   265                           
   266                           	psect	dataCOMRAM
   267   000047                     __pdataCOMRAM:
   268                           	callstack 0
   269   000047                     _var:
   270                           	callstack 0
   271   000047                     	ds	1
   272   000048                     _MensajeRx:
   273                           	callstack 0
   274   000048                     	ds	4
   275                           
   276                           	psect	bssBANK0
   277   000091                     __pbssBANK0:
   278                           	callstack 0
   279   000091                     _BanderaADC:
   280                           	callstack 0
   281   000091                     	ds	1
   282   000092                     _ByteInf:
   283                           	callstack 0
   284   000092                     	ds	1
   285   000093                     _ByteSup:
   286                           	callstack 0
   287   000093                     	ds	1
   288   000094                     _FinRx:
   289                           	callstack 0
   290   000094                     	ds	1
   291   000095                     _TxUSART:
   292                           	callstack 0
   293   000095                     	ds	1
   294   000096                     _dbuf:
   295                           	callstack 0
   296   000096                     	ds	32
   297                           
   298                           	psect	dataBANK0
   299   0000B6                     __pdataBANK0:
   300                           	callstack 0
   301   0000B6                     _MensajeTx:
   302                           	callstack 0
   303   0000B6                     	ds	4
   304   0000BA                     _MensajeSobrante:
   305                           	callstack 0
   306   0000BA                     	ds	4
   307                           
   308                           	psect	cstackBANK0
   309   000060                     __pcstackBANK0:
   310                           	callstack 0
   311   000060                     vfpfcnvrt@fp:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x0
   315   000060                     	ds	2
   316   000062                     vfpfcnvrt@fmt:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x2
   320   000062                     	ds	2
   321   000064                     vfpfcnvrt@ap:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x4
   325   000064                     	ds	2
   326   000066                     ??_vfpfcnvrt:
   327                           
   328                           ; 1 bytes @ 0x6
   329   000066                     	ds	2
   330   000068                     vfpfcnvrt@convarg:
   331                           	callstack 0
   332                           
   333                           ; 4 bytes @ 0x8
   334   000068                     	ds	4
   335   00006C                     vfpfcnvrt@cp:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0xC
   339   00006C                     	ds	2
   340   00006E                     ?_vfprintf:
   341                           	callstack 0
   342   00006E                     vfprintf@fp:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0xE
   346   00006E                     	ds	2
   347   000070                     vfprintf@fmt:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x10
   351   000070                     	ds	2
   352   000072                     vfprintf@ap:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x12
   356   000072                     	ds	2
   357   000074                     vfprintf@cfmt:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x14
   361   000074                     	ds	2
   362   000076                     ?_sprintf:
   363                           	callstack 0
   364   000076                     sprintf@s:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x16
   368   000076                     	ds	2
   369   000078                     sprintf@fmt:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x18
   373   000078                     	ds	4
   374   00007C                     sprintf@ap:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x1C
   378   00007C                     	ds	2
   379   00007E                     sprintf@f:
   380                           	callstack 0
   381                           
   382                           ; 12 bytes @ 0x1E
   383   00007E                     	ds	12
   384   00008A                     Tx_USART@palabra:
   385                           	callstack 0
   386                           
   387                           ; 5 bytes @ 0x2A
   388   00008A                     	ds	5
   389   00008F                     ??_main:
   390                           
   391                           ; 1 bytes @ 0x2F
   392   00008F                     	ds	2
   393                           
   394                           	psect	cstackCOMRAM
   395   000001                     __pcstackCOMRAM:
   396                           	callstack 0
   397   000001                     i2Lcd_Port@a:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x0
   401   000001                     	ds	1
   402   000002                     ??i2_Lcd_Cmd:
   403   000002                     i2lcd_write_char@temp:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x1
   407   000002                     	ds	1
   408   000003                     i2Lcd_Cmd@a:
   409                           	callstack 0
   410   000003                     i2lcd_write_char@y:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x2
   414   000003                     	ds	1
   415   000004                     i2lcd_gotoxy@b:
   416                           	callstack 0
   417   000004                     i2lcd_write_char@a:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x3
   421   000004                     	ds	1
   422   000005                     i2lcd_gotoxy@a:
   423                           	callstack 0
   424   000005                     i2lcd_putc@a:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x4
   428   000005                     	ds	1
   429   000006                     i2lcd_gotoxy@z:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x5
   433   000006                     	ds	1
   434   000007                     ??i2_lcd_putc:
   435   000007                     i2lcd_gotoxy@y:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x6
   439   000007                     	ds	1
   440   000008                     i2lcd_gotoxy@temp:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x7
   444   000008                     	ds	1
   445   000009                     i2lcd_putc@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x8
   449   000009                     	ds	2
   450   00000B                     ??_VectorInterrupcion:
   451                           
   452                           ; 1 bytes @ 0xA
   453   00000B                     	ds	8
   454   000013                     ?___wmul:
   455                           	callstack 0
   456   000013                     ?___awdiv:
   457                           	callstack 0
   458   000013                     ?___awmod:
   459                           	callstack 0
   460   000013                     Lcd_Port@a:
   461                           	callstack 0
   462   000013                     ___wmul@multiplier:
   463                           	callstack 0
   464   000013                     ___awdiv@dividend:
   465                           	callstack 0
   466   000013                     ___awmod@dividend:
   467                           	callstack 0
   468   000013                     fputc@c:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x12
   472   000013                     	ds	1
   473   000014                     ??_Lcd_Cmd:
   474   000014                     lcd_write_char@temp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x13
   478   000014                     	ds	1
   479   000015                     Lcd_Cmd@a:
   480                           	callstack 0
   481   000015                     lcd_write_char@y:
   482                           	callstack 0
   483   000015                     ___wmul@multiplicand:
   484                           	callstack 0
   485   000015                     ___awdiv@divisor:
   486                           	callstack 0
   487   000015                     ___awmod@divisor:
   488                           	callstack 0
   489   000015                     fputc@fp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x14
   493   000015                     	ds	1
   494   000016                     ??_lcd_init:
   495   000016                     lcd_gotoxy@b:
   496                           	callstack 0
   497   000016                     lcd_write_char@a:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x15
   501   000016                     	ds	1
   502   000017                     ??_fputc:
   503   000017                     lcd_gotoxy@a:
   504                           	callstack 0
   505   000017                     ___awdiv@counter:
   506                           	callstack 0
   507   000017                     ___awmod@counter:
   508                           	callstack 0
   509   000017                     lcd_putc@a:
   510                           	callstack 0
   511   000017                     ___wmul@product:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x16
   515   000017                     	ds	1
   516   000018                     lcd_gotoxy@z:
   517                           	callstack 0
   518   000018                     ___awdiv@sign:
   519                           	callstack 0
   520   000018                     ___awmod@sign:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x17
   524   000018                     	ds	1
   525   000019                     ??_lcd_putc:
   526   000019                     ?_abs:
   527                           	callstack 0
   528   000019                     ?_read_prec_or_width:
   529                           	callstack 0
   530   000019                     lcd_gotoxy@y:
   531                           	callstack 0
   532   000019                     ___awdiv@quotient:
   533                           	callstack 0
   534   000019                     read_prec_or_width@fmt:
   535                           	callstack 0
   536   000019                     abs@a:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x18
   540   000019                     	ds	1
   541   00001A                     lcd_gotoxy@temp:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x19
   545   00001A                     	ds	1
   546   00001B                     ??_abs:
   547   00001B                     lcd_putc@i:
   548                           	callstack 0
   549   00001B                     read_prec_or_width@ap:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x1A
   553   00001B                     	ds	1
   554   00001C                     fputs@s:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x1B
   558   00001C                     	ds	1
   559   00001D                     ??_read_prec_or_width:
   560                           
   561                           ; 1 bytes @ 0x1C
   562   00001D                     	ds	1
   563   00001E                     fputs@fp:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x1D
   567   00001E                     	ds	1
   568   00001F                     read_prec_or_width@c:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x1E
   572   00001F                     	ds	1
   573   000020                     fputs@c:
   574                           	callstack 0
   575   000020                     read_prec_or_width@n:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x1F
   579   000020                     	ds	1
   580   000021                     fputs@i:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x20
   584   000021                     	ds	2
   585   000023                     pad@fp:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x22
   589   000023                     	ds	2
   590   000025                     pad@buf:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x24
   594   000025                     	ds	2
   595   000027                     pad@p:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x26
   599   000027                     	ds	2
   600   000029                     ??_pad:
   601                           
   602                           ; 1 bytes @ 0x28
   603   000029                     	ds	1
   604   00002A                     pad@i:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x29
   608   00002A                     	ds	2
   609   00002C                     pad@w:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x2B
   613   00002C                     	ds	2
   614   00002E                     dtoa@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x2D
   618   00002E                     	ds	2
   619   000030                     dtoa@d:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x2F
   623   000030                     	ds	2
   624   000032                     _dtoa$1163:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x31
   628   000032                     	ds	2
   629   000034                     dtoa@p:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x33
   633   000034                     	ds	2
   634   000036                     dtoa@w:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x35
   638   000036                     	ds	2
   639   000038                     dtoa@s:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x37
   643   000038                     	ds	1
   644   000039                     dtoa@i:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x38
   648   000039                     	ds	2
   649   00003B                     
   650                           ; 1 bytes @ 0x3A
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 368 in file "main.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   670 ;;      Params:         0       0       0       0       0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0       0       0       0       0
   672 ;;      Temps:          0       2       0       0       0       0       0       0       0
   673 ;;      Totals:         0       2       0       0       0       0       0       0       0
   674 ;;Total ram usage:        2 bytes
   675 ;; Hardware stack levels required when called: 13
   676 ;; This function calls:
   677 ;;		_ConfigADC
   678 ;;		_ConfigPIC
   679 ;;		_ConfigUSART
   680 ;;		_Tx_USART
   681 ;;		_lcd_init
   682 ;; This function is called by:
   683 ;;		Startup code after reset
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text0
   688   00080C                     __ptext0:
   689                           	callstack 0
   690   00080C                     _main:
   691                           	callstack 18
   692   00080C                     
   693                           ;main.c: 369:     ConfigPIC();
   694   00080C  EC03  F00C         	call	_ConfigPIC	;wreg free
   695                           
   696                           ;main.c: 370:     ConfigADC();
   697   000810  EC34  F00C         	call	_ConfigADC	;wreg free
   698                           
   699                           ;main.c: 371:     ConfigUSART();
   700   000814  ECE0  F00B         	call	_ConfigUSART	;wreg free
   701                           
   702                           ;main.c: 372:     lcd_init();
   703   000818  EC9E  F009         	call	_lcd_init	;wreg free
   704   00081C                     
   705                           ;main.c: 373:     LATCbits.LATC0 = 0;
   706   00081C  908B               	bcf	139,0,c	;volatile
   707   00081E                     l2552:
   708                           
   709                           ;main.c: 377:         BanderaRx = 0;
   710   00081E  0E00               	movlw	0
   711   000820  6E45               	movwf	_BanderaRx^0,c
   712   000822                     
   713                           ;main.c: 378:         Num_Caracteres = 2;
   714   000822  0E02               	movlw	2
   715   000824  6E44               	movwf	_Num_Caracteres^0,c
   716   000826                     
   717                           ;main.c: 379:         FinRx = 0;
   718   000826  0E00               	movlw	0
   719   000828  0100               	movlb	0	; () banked
   720   00082A  6F94               	movwf	_FinRx& (0+255),b
   721   00082C                     
   722                           ; BSR set to: 0
   723                           ;main.c: 380:         BufferLleno = 0;
   724   00082C  0E00               	movlw	0
   725   00082E  6E46               	movwf	_BufferLleno^0,c
   726   000830                     l2560:
   727                           
   728                           ; BSR set to: 0
   729                           ;main.c: 382:         while (FinRx == 0) {
   730   000830  5194               	movf	_FinRx& (0+255),w,b
   731   000832  B4D8               	btfsc	status,2,c
   732   000834  EF1E  F004         	goto	u2101
   733   000838  EF20  F004         	goto	u2100
   734   00083C                     u2101:
   735   00083C  EF18  F004         	goto	l2560
   736   000840                     u2100:
   737   000840                     
   738                           ; BSR set to: 0
   739                           ;main.c: 385:         if (FinRx == 1) {
   740   000840  0594               	decf	_FinRx& (0+255),w,b
   741   000842  A4D8               	btfss	status,2,c
   742   000844  EF26  F004         	goto	u2111
   743   000848  EF28  F004         	goto	u2110
   744   00084C                     u2111:
   745   00084C  EF8D  F004         	goto	l2592
   746   000850                     u2110:
   747   000850                     
   748                           ; BSR set to: 0
   749                           ;main.c: 386:             FinRx = 0;
   750   000850  0E00               	movlw	0
   751   000852  6F94               	movwf	_FinRx& (0+255),b
   752                           
   753                           ;main.c: 387:             Instrumento = 0;
   754   000854  0E00               	movlw	0
   755   000856  6E43               	movwf	_Instrumento^0,c
   756   000858                     
   757                           ; BSR set to: 0
   758                           ;main.c: 388:             if ((MensajeRx[0] == 'P') && (MensajeRx[1] == 'V')) {
   759   000858  0E50               	movlw	80
   760   00085A  1848               	xorwf	_MensajeRx^0,w,c
   761   00085C  A4D8               	btfss	status,2,c
   762   00085E  EF33  F004         	goto	u2121
   763   000862  EF35  F004         	goto	u2120
   764   000866                     u2121:
   765   000866  EF40  F004         	goto	l2572
   766   00086A                     u2120:
   767   00086A                     
   768                           ; BSR set to: 0
   769   00086A  0E56               	movlw	86
   770   00086C  1849               	xorwf	(_MensajeRx+1)^0,w,c
   771   00086E  A4D8               	btfss	status,2,c
   772   000870  EF3C  F004         	goto	u2131
   773   000874  EF3E  F004         	goto	u2130
   774   000878                     u2131:
   775   000878  EF40  F004         	goto	l2572
   776   00087C                     u2130:
   777   00087C                     
   778                           ; BSR set to: 0
   779                           ;main.c: 389:                 Instrumento = 'V';
   780   00087C  0E56               	movlw	86
   781   00087E  6E43               	movwf	_Instrumento^0,c
   782   000880                     l2572:
   783                           
   784                           ; BSR set to: 0
   785                           ;main.c: 391:             if ((MensajeRx[0] == 'P') && (MensajeRx[1] == 'A')) {
   786   000880  0E50               	movlw	80
   787   000882  1848               	xorwf	_MensajeRx^0,w,c
   788   000884  A4D8               	btfss	status,2,c
   789   000886  EF47  F004         	goto	u2141
   790   00088A  EF49  F004         	goto	u2140
   791   00088E                     u2141:
   792   00088E  EF54  F004         	goto	l2578
   793   000892                     u2140:
   794   000892                     
   795                           ; BSR set to: 0
   796   000892  0E41               	movlw	65
   797   000894  1849               	xorwf	(_MensajeRx+1)^0,w,c
   798   000896  A4D8               	btfss	status,2,c
   799   000898  EF50  F004         	goto	u2151
   800   00089C  EF52  F004         	goto	u2150
   801   0008A0                     u2151:
   802   0008A0  EF54  F004         	goto	l2578
   803   0008A4                     u2150:
   804   0008A4                     
   805                           ; BSR set to: 0
   806                           ;main.c: 392:                 Instrumento = 'A';
   807   0008A4  0E41               	movlw	65
   808   0008A6  6E43               	movwf	_Instrumento^0,c
   809   0008A8                     l2578:
   810                           
   811                           ; BSR set to: 0
   812                           ;main.c: 394:             if ((MensajeRx[0] == 'P') && (MensajeRx[1] == 'T')) {
   813   0008A8  0E50               	movlw	80
   814   0008AA  1848               	xorwf	_MensajeRx^0,w,c
   815   0008AC  A4D8               	btfss	status,2,c
   816   0008AE  EF5B  F004         	goto	u2161
   817   0008B2  EF5D  F004         	goto	u2160
   818   0008B6                     u2161:
   819   0008B6  EF68  F004         	goto	l2584
   820   0008BA                     u2160:
   821   0008BA                     
   822                           ; BSR set to: 0
   823   0008BA  0E54               	movlw	84
   824   0008BC  1849               	xorwf	(_MensajeRx+1)^0,w,c
   825   0008BE  A4D8               	btfss	status,2,c
   826   0008C0  EF64  F004         	goto	u2171
   827   0008C4  EF66  F004         	goto	u2170
   828   0008C8                     u2171:
   829   0008C8  EF68  F004         	goto	l2584
   830   0008CC                     u2170:
   831   0008CC                     
   832                           ; BSR set to: 0
   833                           ;main.c: 395:                 Instrumento = 'T';
   834   0008CC  0E54               	movlw	84
   835   0008CE  6E43               	movwf	_Instrumento^0,c
   836   0008D0                     l2584:
   837                           
   838                           ; BSR set to: 0
   839                           ;main.c: 397:             if ((MensajeRx[0] == 'H') && (MensajeRx[1] == 'I')) {
   840   0008D0  0E48               	movlw	72
   841   0008D2  1848               	xorwf	_MensajeRx^0,w,c
   842   0008D4  A4D8               	btfss	status,2,c
   843   0008D6  EF6F  F004         	goto	u2181
   844   0008DA  EF71  F004         	goto	u2180
   845   0008DE                     u2181:
   846   0008DE  EF8D  F004         	goto	l2592
   847   0008E2                     u2180:
   848   0008E2                     
   849                           ; BSR set to: 0
   850   0008E2  0E49               	movlw	73
   851   0008E4  1849               	xorwf	(_MensajeRx+1)^0,w,c
   852   0008E6  A4D8               	btfss	status,2,c
   853   0008E8  EF78  F004         	goto	u2191
   854   0008EC  EF7A  F004         	goto	u2190
   855   0008F0                     u2191:
   856   0008F0  EF8D  F004         	goto	l2592
   857   0008F4                     u2190:
   858   0008F4                     
   859                           ; BSR set to: 0
   860                           ;main.c: 398:                 Instrumento = 'H';
   861   0008F4  0E48               	movlw	72
   862   0008F6  6E43               	movwf	_Instrumento^0,c
   863   0008F8  EF8D  F004         	goto	l2592
   864   0008FC                     l179:
   865                           
   866                           ; BSR set to: 0
   867                           ;main.c: 403:                 ADCON0bits.CHS2 = 0;
   868   0008FC  98C2               	bcf	194,4,c	;volatile
   869                           
   870                           ;main.c: 404:                 ADCON0bits.CHS1 = 0;
   871   0008FE  96C2               	bcf	194,3,c	;volatile
   872                           
   873                           ;main.c: 405:                 ADCON0bits.CHS0 = 0;
   874   000900  94C2               	bcf	194,2,c	;volatile
   875                           
   876                           ;main.c: 406:                 break;
   877   000902  EFA6  F004         	goto	l2594
   878   000906                     l181:
   879                           
   880                           ; BSR set to: 0
   881                           ;main.c: 408:                 ADCON0bits.CHS2 = 0;
   882   000906  98C2               	bcf	194,4,c	;volatile
   883                           
   884                           ;main.c: 409:                 ADCON0bits.CHS1 = 0;
   885   000908  96C2               	bcf	194,3,c	;volatile
   886                           
   887                           ;main.c: 410:                 ADCON0bits.CHS0 = 1;
   888   00090A  84C2               	bsf	194,2,c	;volatile
   889                           
   890                           ;main.c: 411:                 break;
   891   00090C  EFA6  F004         	goto	l2594
   892   000910                     l182:
   893                           
   894                           ; BSR set to: 0
   895                           ;main.c: 413:                 ADCON0bits.CHS2 = 0;
   896   000910  98C2               	bcf	194,4,c	;volatile
   897                           
   898                           ;main.c: 414:                 ADCON0bits.CHS1 = 1;
   899   000912  86C2               	bsf	194,3,c	;volatile
   900                           
   901                           ;main.c: 415:                 ADCON0bits.CHS0 = 0;
   902   000914  94C2               	bcf	194,2,c	;volatile
   903                           
   904                           ;main.c: 416:                 break;
   905   000916  EFA6  F004         	goto	l2594
   906   00091A                     l2592:
   907                           
   908                           ; BSR set to: 0
   909   00091A  5043               	movf	_Instrumento^0,w,c
   910   00091C  6F8F               	movwf	??_main& (0+255),b
   911   00091E  6B90               	clrf	(??_main+1)& (0+255),b
   912                           
   913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   914                           ; Switch size 1, requested type "simple"
   915                           ; Number of cases is 1, Range of values is 0 to 0
   916                           ; switch strategies available:
   917                           ; Name         Instructions Cycles
   918                           ; simple_byte            4     3 (average)
   919                           ;	Chosen strategy is simple_byte
   920   000920  5190               	movf	(??_main+1)& (0+255),w,b
   921   000922  0A00               	xorlw	0	; case 0
   922   000924  B4D8               	btfsc	status,2,c
   923   000926  EF97  F004         	goto	l2672
   924   00092A  EFA6  F004         	goto	l2594
   925   00092E                     l2672:
   926                           
   927                           ; BSR set to: 0
   928                           ; Switch size 1, requested type "simple"
   929                           ; Number of cases is 3, Range of values is 65 to 86
   930                           ; switch strategies available:
   931                           ; Name         Instructions Cycles
   932                           ; simple_byte           10     6 (average)
   933                           ;	Chosen strategy is simple_byte
   934   00092E  518F               	movf	??_main& (0+255),w,b
   935   000930  0A41               	xorlw	65	; case 65
   936   000932  B4D8               	btfsc	status,2,c
   937   000934  EF7E  F004         	goto	l179
   938   000938  0A15               	xorlw	21	; case 84
   939   00093A  B4D8               	btfsc	status,2,c
   940   00093C  EF88  F004         	goto	l182
   941   000940  0A02               	xorlw	2	; case 86
   942   000942  B4D8               	btfsc	status,2,c
   943   000944  EF83  F004         	goto	l181
   944   000948  EFA6  F004         	goto	l2594
   945   00094C                     l2594:
   946                           
   947                           ; BSR set to: 0
   948                           ;main.c: 418:         if (Instrumento == 0) {
   949   00094C  5043               	movf	_Instrumento^0,w,c
   950   00094E  A4D8               	btfss	status,2,c
   951   000950  EFAC  F004         	goto	u2201
   952   000954  EFAE  F004         	goto	u2200
   953   000958                     u2201:
   954   000958  EFB4  F004         	goto	l2600
   955   00095C                     u2200:
   956   00095C                     
   957                           ; BSR set to: 0
   958                           ;main.c: 419:             ByteSup = 'E';
   959   00095C  0E45               	movlw	69
   960   00095E  6F93               	movwf	_ByteSup& (0+255),b
   961                           
   962                           ;main.c: 420:             ByteInf = 'R';
   963   000960  0E52               	movlw	82
   964   000962  6F92               	movwf	_ByteInf& (0+255),b
   965   000964                     
   966                           ; BSR set to: 0
   967                           ;main.c: 421:             Tx_USART();
   968   000964  ECD7  F009         	call	_Tx_USART	;wreg free
   969   000968                     l2600:
   970                           
   971                           ;main.c: 423:         if (Instrumento != 0) {
   972   000968  5043               	movf	_Instrumento^0,w,c
   973   00096A  B4D8               	btfsc	status,2,c
   974   00096C  EFBA  F004         	goto	u2211
   975   000970  EFBC  F004         	goto	u2210
   976   000974                     u2211:
   977   000974  EF0F  F004         	goto	l2552
   978   000978                     u2210:
   979   000978                     
   980                           ;main.c: 424:             if (Instrumento == 'H') {
   981   000978  0E48               	movlw	72
   982   00097A  1843               	xorwf	_Instrumento^0,w,c
   983   00097C  A4D8               	btfss	status,2,c
   984   00097E  EFC3  F004         	goto	u2221
   985   000982  EFC5  F004         	goto	u2220
   986   000986                     u2221:
   987   000986  EF25  F005         	goto	l2634
   988   00098A                     u2220:
   989   00098A                     
   990                           ;main.c: 425:                 ByteSup = 'O';
   991   00098A  0E4F               	movlw	79
   992   00098C  0100               	movlb	0	; () banked
   993   00098E  6F93               	movwf	_ByteSup& (0+255),b
   994                           
   995                           ;main.c: 426:                 ByteInf = 'K';
   996   000990  0E4B               	movlw	75
   997   000992  6F92               	movwf	_ByteInf& (0+255),b
   998   000994                     
   999                           ; BSR set to: 0
  1000                           ;main.c: 427:                 Tx_USART();
  1001   000994  ECD7  F009         	call	_Tx_USART	;wreg free
  1002   000998                     
  1003                           ;main.c: 428:                 BanderaADC = 0;
  1004   000998  0E00               	movlw	0
  1005   00099A  0100               	movlb	0	; () banked
  1006   00099C  6F91               	movwf	_BanderaADC& (0+255),b
  1007   00099E  EF25  F005         	goto	l2634
  1008   0009A2                     l2610:
  1009                           
  1010                           ;main.c: 431:                 BanderaRx = 0;
  1011   0009A2  0E00               	movlw	0
  1012   0009A4  6E45               	movwf	_BanderaRx^0,c
  1013                           
  1014                           ;main.c: 432:                 Num_Caracteres = 2;
  1015   0009A6  0E02               	movlw	2
  1016   0009A8  6E44               	movwf	_Num_Caracteres^0,c
  1017                           
  1018                           ;main.c: 433:                 FinRx = 0;
  1019   0009AA  0E00               	movlw	0
  1020   0009AC  0100               	movlb	0	; () banked
  1021   0009AE  6F94               	movwf	_FinRx& (0+255),b
  1022                           
  1023                           ;main.c: 434:                 BufferLleno = 0;
  1024   0009B0  0E00               	movlw	0
  1025   0009B2  6E46               	movwf	_BufferLleno^0,c
  1026                           
  1027                           ;main.c: 435:                 while (FinRx == 0) {
  1028   0009B4  EFFE  F004         	goto	l2622
  1029   0009B8                     l189:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;main.c: 436:                     ADCON0bits.GO_DONE = 1;
  1033   0009B8  82C2               	bsf	194,1,c	;volatile
  1034   0009BA                     l2612:
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;main.c: 437:                     while (BanderaADC == 0) {
  1038   0009BA  5191               	movf	_BanderaADC& (0+255),w,b
  1039   0009BC  B4D8               	btfsc	status,2,c
  1040   0009BE  EFE3  F004         	goto	u2231
  1041   0009C2  EFE5  F004         	goto	u2230
  1042   0009C6                     u2231:
  1043   0009C6  EFDD  F004         	goto	l2612
  1044   0009CA                     u2230:
  1045   0009CA                     
  1046                           ; BSR set to: 0
  1047                           ;main.c: 439:                     if (BanderaADC == 1) {
  1048   0009CA  0591               	decf	_BanderaADC& (0+255),w,b
  1049   0009CC  A4D8               	btfss	status,2,c
  1050   0009CE  EFEB  F004         	goto	u2241
  1051   0009D2  EFED  F004         	goto	u2240
  1052   0009D6                     u2241:
  1053   0009D6  EFF1  F004         	goto	l2620
  1054   0009DA                     u2240:
  1055   0009DA                     
  1056                           ; BSR set to: 0
  1057                           ;main.c: 440:                         BanderaADC = 0;
  1058   0009DA  0E00               	movlw	0
  1059   0009DC  6F91               	movwf	_BanderaADC& (0+255),b
  1060   0009DE                     
  1061                           ; BSR set to: 0
  1062                           ;main.c: 441:                         Tx_USART();
  1063   0009DE  ECD7  F009         	call	_Tx_USART	;wreg free
  1064   0009E2                     l2620:
  1065                           
  1066                           ;main.c: 444:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1067   0009E2  0E06               	movlw	6
  1068   0009E4  0100               	movlb	0	; () banked
  1069   0009E6  6F90               	movwf	(??_main+1)& (0+255),b
  1070   0009E8  0E13               	movlw	19
  1071   0009EA  6F8F               	movwf	??_main& (0+255),b
  1072   0009EC  0EAD               	movlw	173
  1073   0009EE                     u2307:
  1074   0009EE  2EE8               	decfsz	wreg,f,c
  1075   0009F0  D7FE               	bra	u2307
  1076   0009F2  2F8F               	decfsz	??_main& (0+255),f,b
  1077   0009F4  D7FC               	bra	u2307
  1078   0009F6  2F90               	decfsz	(??_main+1)& (0+255),f,b
  1079   0009F8  D7FA               	bra	u2307
  1080   0009FA  D000               	nop2	
  1081   0009FC                     l2622:
  1082                           
  1083                           ;main.c: 435:                 while (FinRx == 0) {
  1084   0009FC  0100               	movlb	0	; () banked
  1085   0009FE  5194               	movf	_FinRx& (0+255),w,b
  1086   000A00  B4D8               	btfsc	status,2,c
  1087   000A02  EF05  F005         	goto	u2251
  1088   000A06  EF07  F005         	goto	u2250
  1089   000A0A                     u2251:
  1090   000A0A  EFDC  F004         	goto	l189
  1091   000A0E                     u2250:
  1092   000A0E                     
  1093                           ; BSR set to: 0
  1094                           ;main.c: 446:                 if (FinRx == 1) {
  1095   000A0E  0594               	decf	_FinRx& (0+255),w,b
  1096   000A10  A4D8               	btfss	status,2,c
  1097   000A12  EF0D  F005         	goto	u2261
  1098   000A16  EF0F  F005         	goto	u2260
  1099   000A1A                     u2261:
  1100   000A1A  EF25  F005         	goto	l2634
  1101   000A1E                     u2260:
  1102   000A1E                     
  1103                           ; BSR set to: 0
  1104                           ;main.c: 447:                     FinRx = 0;
  1105   000A1E  0E00               	movlw	0
  1106   000A20  6F94               	movwf	_FinRx& (0+255),b
  1107   000A22                     
  1108                           ; BSR set to: 0
  1109                           ;main.c: 448:                     if ((MensajeRx[0] == 'P') && (MensajeRx[1] == 'E')) {
  1110   000A22  0E50               	movlw	80
  1111   000A24  1848               	xorwf	_MensajeRx^0,w,c
  1112   000A26  A4D8               	btfss	status,2,c
  1113   000A28  EF18  F005         	goto	u2271
  1114   000A2C  EF1A  F005         	goto	u2270
  1115   000A30                     u2271:
  1116   000A30  EF25  F005         	goto	l2634
  1117   000A34                     u2270:
  1118   000A34                     
  1119                           ; BSR set to: 0
  1120   000A34  0E45               	movlw	69
  1121   000A36  1849               	xorwf	(_MensajeRx+1)^0,w,c
  1122   000A38  A4D8               	btfss	status,2,c
  1123   000A3A  EF21  F005         	goto	u2281
  1124   000A3E  EF23  F005         	goto	u2280
  1125   000A42                     u2281:
  1126   000A42  EF25  F005         	goto	l2634
  1127   000A46                     u2280:
  1128   000A46                     
  1129                           ; BSR set to: 0
  1130                           ;main.c: 449:                         Instrumento = 'H';
  1131   000A46  0E48               	movlw	72
  1132   000A48  6E43               	movwf	_Instrumento^0,c
  1133   000A4A                     l2634:
  1134                           
  1135                           ;main.c: 430:             while (Instrumento != 'H') {
  1136   000A4A  0E48               	movlw	72
  1137   000A4C  1843               	xorwf	_Instrumento^0,w,c
  1138   000A4E  A4D8               	btfss	status,2,c
  1139   000A50  EF2C  F005         	goto	u2291
  1140   000A54  EF2E  F005         	goto	u2290
  1141   000A58                     u2291:
  1142   000A58  EFD1  F004         	goto	l2610
  1143   000A5C                     u2290:
  1144   000A5C  EF0F  F004         	goto	l2552
  1145   000A60  EF07  F000         	goto	start
  1146   000A64                     __end_of_main:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _lcd_init *****************
  1150 ;; Defined at:
  1151 ;;		line 201 in file "main.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1165 ;;      Params:         0       0       0       0       0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1167 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1168 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1169 ;;Total ram usage:        1 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 6
  1172 ;; This function calls:
  1173 ;;		_Lcd_Cmd
  1174 ;;		_Lcd_Port
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text1
  1181   00133C                     __ptext1:
  1182                           	callstack 0
  1183   00133C                     _lcd_init:
  1184                           	callstack 24
  1185   00133C                     
  1186                           ;main.c: 202:     Lcd_Port(0x00);
  1187   00133C  0E00               	movlw	0
  1188   00133E  ECA6  F00A         	call	_Lcd_Port
  1189   001342                     
  1190                           ;main.c: 203:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1191   001342  0E1A               	movlw	26
  1192   001344  6E16               	movwf	??_lcd_init^0,c
  1193   001346  0EF8               	movlw	248
  1194   001348                     u2317:
  1195   001348  2EE8               	decfsz	wreg,f,c
  1196   00134A  D7FE               	bra	u2317
  1197   00134C  2E16               	decfsz	??_lcd_init^0,f,c
  1198   00134E  D7FC               	bra	u2317
  1199   001350  D000               	nop2	
  1200   001352                     
  1201                           ;main.c: 204:     Lcd_Cmd(0x03);
  1202   001352  0E03               	movlw	3
  1203   001354  EC14  F00C         	call	_Lcd_Cmd
  1204   001358                     
  1205                           ;main.c: 205:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1206   001358  0E07               	movlw	7
  1207   00135A  6E16               	movwf	??_lcd_init^0,c
  1208   00135C  0E7D               	movlw	125
  1209   00135E                     u2327:
  1210   00135E  2EE8               	decfsz	wreg,f,c
  1211   001360  D7FE               	bra	u2327
  1212   001362  2E16               	decfsz	??_lcd_init^0,f,c
  1213   001364  D7FC               	bra	u2327
  1214   001366  F000               	nop	
  1215   001368                     
  1216                           ;main.c: 206:     Lcd_Cmd(0x03);
  1217   001368  0E03               	movlw	3
  1218   00136A  EC14  F00C         	call	_Lcd_Cmd
  1219   00136E                     
  1220                           ;main.c: 207:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1221   00136E  0E0F               	movlw	15
  1222   001370  6E16               	movwf	??_lcd_init^0,c
  1223   001372  0E48               	movlw	72
  1224   001374                     u2337:
  1225   001374  2EE8               	decfsz	wreg,f,c
  1226   001376  D7FE               	bra	u2337
  1227   001378  2E16               	decfsz	??_lcd_init^0,f,c
  1228   00137A  D7FC               	bra	u2337
  1229   00137C                     
  1230                           ;main.c: 208:     Lcd_Cmd(0x03);
  1231   00137C  0E03               	movlw	3
  1232   00137E  EC14  F00C         	call	_Lcd_Cmd
  1233   001382                     
  1234                           ;main.c: 210:     Lcd_Cmd(0x02);
  1235   001382  0E02               	movlw	2
  1236   001384  EC14  F00C         	call	_Lcd_Cmd
  1237   001388                     
  1238                           ;main.c: 211:     Lcd_Cmd(0x02);
  1239   001388  0E02               	movlw	2
  1240   00138A  EC14  F00C         	call	_Lcd_Cmd
  1241   00138E                     
  1242                           ;main.c: 212:     Lcd_Cmd(0x08);
  1243   00138E  0E08               	movlw	8
  1244   001390  EC14  F00C         	call	_Lcd_Cmd
  1245   001394                     
  1246                           ;main.c: 213:     Lcd_Cmd(0x00);
  1247   001394  0E00               	movlw	0
  1248   001396  EC14  F00C         	call	_Lcd_Cmd
  1249   00139A                     
  1250                           ;main.c: 214:     Lcd_Cmd(0x0C);
  1251   00139A  0E0C               	movlw	12
  1252   00139C  EC14  F00C         	call	_Lcd_Cmd
  1253   0013A0                     
  1254                           ;main.c: 215:     Lcd_Cmd(0x00);
  1255   0013A0  0E00               	movlw	0
  1256   0013A2  EC14  F00C         	call	_Lcd_Cmd
  1257   0013A6                     
  1258                           ;main.c: 216:     Lcd_Cmd(0x06);
  1259   0013A6  0E06               	movlw	6
  1260   0013A8  EC14  F00C         	call	_Lcd_Cmd
  1261   0013AC  0012               	return		;funcret
  1262   0013AE                     __end_of_lcd_init:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _Tx_USART *****************
  1266 ;; Defined at:
  1267 ;;		line 347 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  palabra         5   42[BANK0 ] unsigned char [5]
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0
  1282 ;;      Locals:         0       5       0       0       0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1284 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1285 ;;Total ram usage:        5 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 12
  1288 ;; This function calls:
  1289 ;;		_Transmite
  1290 ;;		_lcd_gotoxy
  1291 ;;		_lcd_putc
  1292 ;;		_lcd_write_char
  1293 ;;		_sprintf
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text2
  1300   0013AE                     __ptext2:
  1301                           	callstack 0
  1302   0013AE                     _Tx_USART:
  1303                           	callstack 18
  1304   0013AE                     
  1305                           ;main.c: 348:     TxUSART = ByteSup;
  1306   0013AE  C093  F095         	movff	_ByteSup,_TxUSART
  1307   0013B2                     
  1308                           ;main.c: 349:     Transmite();
  1309   0013B2  ECF2  F00B         	call	_Transmite	;wreg free
  1310   0013B6                     
  1311                           ;main.c: 350:     _delay((unsigned long)((500)*(4000000/4000000.0)));
  1312   0013B6  0EA6               	movlw	166
  1313   0013B8                     u2347:
  1314   0013B8  2EE8               	decfsz	wreg,f,c
  1315   0013BA  D7FE               	bra	u2347
  1316   0013BC  D000               	nop2	
  1317   0013BE                     
  1318                           ;main.c: 351:     TxUSART = ByteInf;
  1319   0013BE  C092  F095         	movff	_ByteInf,_TxUSART
  1320   0013C2                     
  1321                           ;main.c: 352:     Transmite();
  1322   0013C2  ECF2  F00B         	call	_Transmite	;wreg free
  1323                           
  1324                           ;main.c: 353:     _delay((unsigned long)((500)*(4000000/4000000.0)));
  1325   0013C6  0EA6               	movlw	166
  1326   0013C8                     u2357:
  1327   0013C8  2EE8               	decfsz	wreg,f,c
  1328   0013CA  D7FE               	bra	u2357
  1329   0013CC  D000               	nop2	
  1330   0013CE                     
  1331                           ;main.c: 355:     lcd_gotoxy(2,1);
  1332   0013CE  0E01               	movlw	1
  1333   0013D0  6E16               	movwf	lcd_gotoxy@b^0,c
  1334   0013D2  0E02               	movlw	2
  1335   0013D4  EC40  F00A         	call	_lcd_gotoxy
  1336   0013D8                     
  1337                           ;main.c: 356:     lcd_write_char(' ');
  1338   0013D8  0E20               	movlw	32
  1339   0013DA  EC95  F00B         	call	_lcd_write_char
  1340   0013DE                     
  1341                           ;main.c: 357:     char palabra[5];;main.c: 358:     sprintf(palabra,"%4i",ValBIN);
  1342   0013DE  0E8A               	movlw	low Tx_USART@palabra
  1343   0013E0  0100               	movlb	0	; () banked
  1344   0013E2  6F76               	movwf	sprintf@s& (0+255),b
  1345   0013E4  0E00               	movlw	high Tx_USART@palabra
  1346   0013E6  6F77               	movwf	(sprintf@s+1)& (0+255),b
  1347   0013E8  0E07               	movlw	low STR_2
  1348   0013EA  6F78               	movwf	sprintf@fmt& (0+255),b
  1349   0013EC  0E08               	movlw	high STR_2
  1350   0013EE  6F79               	movwf	(sprintf@fmt+1)& (0+255),b
  1351   0013F0  C03F  F07A         	movff	_ValBIN,?_sprintf+4
  1352   0013F4  C040  F07B         	movff	_ValBIN+1,?_sprintf+5
  1353   0013F8  EC2B  F00B         	call	_sprintf	;wreg free
  1354   0013FC                     
  1355                           ;main.c: 359:     lcd_putc(palabra);
  1356   0013FC  0E8A               	movlw	low Tx_USART@palabra
  1357   0013FE  6E17               	movwf	lcd_putc@a^0,c
  1358   001400  0E00               	movlw	high Tx_USART@palabra
  1359   001402  6E18               	movwf	(lcd_putc@a+1)^0,c
  1360   001404  EC20  F009         	call	_lcd_putc	;wreg free
  1361   001408                     
  1362                           ;main.c: 361:     TxUSART = (char)ValBIN;
  1363   001408  C03F  F095         	movff	_ValBIN,_TxUSART
  1364   00140C                     
  1365                           ;main.c: 362:     Transmite();
  1366   00140C  ECF2  F00B         	call	_Transmite	;wreg free
  1367   001410                     
  1368                           ;main.c: 363:     _delay((unsigned long)((500)*(4000000/4000000.0)));
  1369   001410  0EA6               	movlw	166
  1370   001412                     u2367:
  1371   001412  2EE8               	decfsz	wreg,f,c
  1372   001414  D7FE               	bra	u2367
  1373   001416  D000               	nop2	
  1374   001418  0012               	return		;funcret
  1375   00141A                     __end_of_Tx_USART:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _sprintf *****************
  1379 ;; Defined at:
  1380 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  s               2   22[BANK0 ] PTR unsigned char 
  1383 ;;		 -> Tx_USART@palabra(5), 
  1384 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  1385 ;;		 -> STR_2(4), 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  f              12   30[BANK0 ] struct _IO_FILE
  1388 ;;  ap              2   28[BANK0 ] PTR void [1]
  1389 ;;		 -> ?_sprintf(2), 
  1390 ;;  ret             2    0        int 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2   22[BANK0 ] int 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1400 ;;      Params:         0       6       0       0       0       0       0       0       0
  1401 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1403 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1404 ;;Total ram usage:       20 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 11
  1407 ;; This function calls:
  1408 ;;		_vfprintf
  1409 ;; This function is called by:
  1410 ;;		_Tx_USART
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text3
  1415   001656                     __ptext3:
  1416                           	callstack 0
  1417   001656                     _sprintf:
  1418                           	callstack 18
  1419   001656  0E7A               	movlw	low (?_sprintf+4)
  1420   001658  0100               	movlb	0	; () banked
  1421   00165A  6F7C               	movwf	sprintf@ap& (0+255),b
  1422   00165C  0E00               	movlw	high (?_sprintf+4)
  1423   00165E  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  1424   001660  C076  F07E         	movff	sprintf@s,sprintf@f
  1425   001664  C077  F07F         	movff	sprintf@s+1,sprintf@f+1
  1426   001668                     
  1427                           ; BSR set to: 0
  1428   001668  0E00               	movlw	0
  1429   00166A  6F82               	movwf	(sprintf@f+4)& (0+255),b
  1430   00166C  0E00               	movlw	0
  1431   00166E  6F81               	movwf	(sprintf@f+3)& (0+255),b
  1432   001670                     
  1433                           ; BSR set to: 0
  1434   001670  0E00               	movlw	0
  1435   001672  6F89               	movwf	(sprintf@f+11)& (0+255),b
  1436   001674  0E00               	movlw	0
  1437   001676  6F88               	movwf	(sprintf@f+10)& (0+255),b
  1438   001678                     
  1439                           ; BSR set to: 0
  1440   001678  0E7E               	movlw	low sprintf@f
  1441   00167A  6F6E               	movwf	vfprintf@fp& (0+255),b
  1442   00167C  0E00               	movlw	high sprintf@f
  1443   00167E  6F6F               	movwf	(vfprintf@fp+1)& (0+255),b
  1444   001680  C078  F070         	movff	sprintf@fmt,vfprintf@fmt
  1445   001684  C079  F071         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1446   001688  0E7C               	movlw	low sprintf@ap
  1447   00168A  6F72               	movwf	vfprintf@ap& (0+255),b
  1448   00168C  0E00               	movlw	high sprintf@ap
  1449   00168E  6F73               	movwf	(vfprintf@ap+1)& (0+255),b
  1450   001690  EC02  F00B         	call	_vfprintf	;wreg free
  1451   001694  0100               	movlb	0	; () banked
  1452   001696  5181               	movf	(sprintf@f+3)& (0+255),w,b
  1453   001698  2576               	addwf	sprintf@s& (0+255),w,b
  1454   00169A  6ED9               	movwf	fsr2l,c
  1455   00169C  5182               	movf	(sprintf@f+4)& (0+255),w,b
  1456   00169E  2177               	addwfc	(sprintf@s+1)& (0+255),w,b
  1457   0016A0  6EDA               	movwf	fsr2h,c
  1458   0016A2  6ADF               	clrf	indf2,c
  1459   0016A4                     
  1460                           ; BSR set to: 0
  1461   0016A4  0012               	return		;funcret
  1462   0016A6                     __end_of_sprintf:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _vfprintf *****************
  1466 ;; Defined at:
  1467 ;;		line 1546 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
  1470 ;;		 -> sprintf@f(12), 
  1471 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
  1472 ;;		 -> STR_2(4), 
  1473 ;;  ap              2   18[BANK0 ] PTR PTR void 
  1474 ;;		 -> sprintf@ap(2), 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  cfmt            2   20[BANK0 ] PTR unsigned char 
  1477 ;;		 -> STR_2(4), 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  2   14[BANK0 ] int 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1487 ;;      Params:         0       6       0       0       0       0       0       0       0
  1488 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1490 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1491 ;;Total ram usage:        8 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; Hardware stack levels required when called: 10
  1494 ;; This function calls:
  1495 ;;		_vfpfcnvrt
  1496 ;; This function is called by:
  1497 ;;		_sprintf
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text4
  1502   001604                     __ptext4:
  1503                           	callstack 0
  1504   001604                     _vfprintf:
  1505                           	callstack 18
  1506   001604                     
  1507                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1508   001604  C070  F074         	movff	vfprintf@fmt,vfprintf@cfmt
  1509   001608  C071  F075         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1510                           
  1511                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1512   00160C  EF17  F00B         	goto	l2506
  1513   001610                     l2504:
  1514                           
  1515                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1516   001610  C06E  F060         	movff	vfprintf@fp,vfpfcnvrt@fp
  1517   001614  C06F  F061         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1518   001618  0E74               	movlw	low vfprintf@cfmt
  1519   00161A  0100               	movlb	0	; () banked
  1520   00161C  6F62               	movwf	vfpfcnvrt@fmt& (0+255),b
  1521   00161E  0E00               	movlw	high vfprintf@cfmt
  1522   001620  6F63               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1523   001622  C072  F064         	movff	vfprintf@ap,vfpfcnvrt@ap
  1524   001626  C073  F065         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1525   00162A  ECFC  F005         	call	_vfpfcnvrt	;wreg free
  1526   00162E                     l2506:
  1527                           
  1528                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1529   00162E  C074  FFF6         	movff	vfprintf@cfmt,tblptrl
  1530   001632  C075  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1531   001636                     	if	0	;tblptru may be non-zero
  1532   001636                     	endif
  1533   001636                     	if	0	;tblptru may be non-zero
  1534   001636                     	endif
  1535   001636  0008               	tblrd		*
  1536   001638  50F5               	movf	tablat,w,c
  1537   00163A  0900               	iorlw	0
  1538   00163C  A4D8               	btfss	status,2,c
  1539   00163E  EF23  F00B         	goto	u2091
  1540   001642  EF25  F00B         	goto	u2090
  1541   001646                     u2091:
  1542   001646  EF08  F00B         	goto	l2504
  1543   00164A                     u2090:
  1544   00164A                     
  1545                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1546   00164A  0E00               	movlw	0
  1547   00164C  0100               	movlb	0	; () banked
  1548   00164E  6F6F               	movwf	(?_vfprintf+1)& (0+255),b
  1549   001650  0E00               	movlw	0
  1550   001652  6F6E               	movwf	?_vfprintf& (0+255),b
  1551   001654                     
  1552                           ; BSR set to: 0
  1553   001654  0012               	return		;funcret
  1554   001656                     __end_of_vfprintf:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _vfpfcnvrt *****************
  1558 ;; Defined at:
  1559 ;;		line 1048 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1562 ;;		 -> sprintf@f(12), 
  1563 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  1564 ;;		 -> vfprintf@cfmt(2), 
  1565 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1566 ;;		 -> sprintf@ap(2), 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  convarg         4    8[BANK0 ] struct .
  1569 ;;  cp              2   12[BANK0 ] PTR unsigned char 
  1570 ;;		 -> STR_2(4), 
  1571 ;;  i               2    0        int 
  1572 ;;  done            2    0        int 
  1573 ;;  c               1    0        unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1583 ;;      Params:         0       6       0       0       0       0       0       0       0
  1584 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1585 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1586 ;;      Totals:         0      14       0       0       0       0       0       0       0
  1587 ;;Total ram usage:       14 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; Hardware stack levels required when called: 9
  1590 ;; This function calls:
  1591 ;;		_dtoa
  1592 ;;		_fputc
  1593 ;;		_read_prec_or_width
  1594 ;; This function is called by:
  1595 ;;		_vfprintf
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text5
  1600   000BF8                     __ptext5:
  1601                           	callstack 0
  1602   000BF8                     _vfpfcnvrt:
  1603                           	callstack 18
  1604   000BF8                     
  1605                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1606   000BF8  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1607   000BFC  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1608   000C00  CFDE FFF6          	movff	postinc2,tblptrl
  1609   000C04  CFDD FFF7          	movff	postdec2,tblptrh
  1610   000C08                     	if	0	;tblptru may be non-zero
  1611   000C08                     	endif
  1612   000C08                     	if	0	;tblptru may be non-zero
  1613   000C08                     	endif
  1614   000C08  0008               	tblrd		*
  1615   000C0A  50F5               	movf	tablat,w,c
  1616   000C0C  0A25               	xorlw	37
  1617   000C0E  A4D8               	btfss	status,2,c
  1618   000C10  EF0C  F006         	goto	u2051
  1619   000C14  EF0E  F006         	goto	u2050
  1620   000C18                     u2051:
  1621   000C18  EF93  F006         	goto	l2496
  1622   000C1C                     u2050:
  1623   000C1C                     
  1624                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1625   000C1C  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1626   000C20  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1627   000C24  2ADE               	incf	postinc2,f,c
  1628   000C26  0E00               	movlw	0
  1629   000C28  22DD               	addwfc	postdec2,f,c
  1630   000C2A                     
  1631                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1632   000C2A  0E00               	movlw	0
  1633   000C2C  6E3C               	movwf	(_width+1)^0,c
  1634   000C2E  0E00               	movlw	0
  1635   000C30  6E3B               	movwf	_width^0,c
  1636   000C32  C03B  F041         	movff	_width,_flags
  1637   000C36                     
  1638                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1639   000C36  683D               	setf	_prec^0,c
  1640   000C38  683E               	setf	(_prec+1)^0,c
  1641   000C3A                     
  1642                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1643   000C3A  C062  F019         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1644   000C3E  C063  F01A         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1645   000C42  C064  F01B         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1646   000C46  C065  F01C         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1647   000C4A  ECAE  F007         	call	_read_prec_or_width	;wreg free
  1648   000C4E  C019  F03B         	movff	?_read_prec_or_width,_width
  1649   000C52  C01A  F03C         	movff	?_read_prec_or_width+1,_width+1
  1650   000C56                     
  1651                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1652   000C56  BE3C               	btfsc	(_width+1)^0,7,c
  1653   000C58  EF32  F006         	goto	u2060
  1654   000C5C  EF30  F006         	goto	u2061
  1655   000C60                     u2061:
  1656   000C60  EF37  F006         	goto	l2480
  1657   000C64                     u2060:
  1658   000C64                     
  1659                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1660   000C64  8041               	bsf	_flags^0,0,c
  1661                           
  1662                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1663   000C66  6C3B               	negf	_width^0,c
  1664   000C68  1E3C               	comf	(_width+1)^0,f,c
  1665   000C6A  B0D8               	btfsc	status,0,c
  1666   000C6C  2A3C               	incf	(_width+1)^0,f,c
  1667   000C6E                     l2480:
  1668                           
  1669                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1670   000C6E  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1671   000C72  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1672   000C76  CFDE F06C          	movff	postinc2,vfpfcnvrt@cp
  1673   000C7A  CFDD F06D          	movff	postdec2,vfpfcnvrt@cp+1
  1674   000C7E                     
  1675                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1676   000C7E  C06C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1677   000C82  C06D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1678   000C86                     	if	0	;tblptru may be non-zero
  1679   000C86                     	endif
  1680   000C86                     	if	0	;tblptru may be non-zero
  1681   000C86                     	endif
  1682   000C86  0008               	tblrd		*
  1683   000C88  50F5               	movf	tablat,w,c
  1684   000C8A  0A64               	xorlw	100
  1685   000C8C  B4D8               	btfsc	status,2,c
  1686   000C8E  EF4B  F006         	goto	u2071
  1687   000C92  EF4D  F006         	goto	u2070
  1688   000C96                     u2071:
  1689   000C96  EF5B  F006         	goto	l2486
  1690   000C9A                     u2070:
  1691   000C9A  C06C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1692   000C9E  C06D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1693   000CA2                     	if	0	;tblptru may be non-zero
  1694   000CA2                     	endif
  1695   000CA2                     	if	0	;tblptru may be non-zero
  1696   000CA2                     	endif
  1697   000CA2  0008               	tblrd		*
  1698   000CA4  50F5               	movf	tablat,w,c
  1699   000CA6  0A69               	xorlw	105
  1700   000CA8  A4D8               	btfss	status,2,c
  1701   000CAA  EF59  F006         	goto	u2081
  1702   000CAE  EF5B  F006         	goto	u2080
  1703   000CB2                     u2081:
  1704   000CB2  EF8A  F006         	goto	l2492
  1705   000CB6                     u2080:
  1706   000CB6                     l2486:
  1707                           
  1708                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1709   000CB6  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1710   000CBA  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1711   000CBE  CFDF F066          	movff	indf2,??_vfpfcnvrt
  1712   000CC2  0E02               	movlw	2
  1713   000CC4  26DE               	addwf	postinc2,f,c
  1714   000CC6  CFDF F067          	movff	indf2,??_vfpfcnvrt+1
  1715   000CCA  0E00               	movlw	0
  1716   000CCC  22DD               	addwfc	postdec2,f,c
  1717   000CCE  C066  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1718   000CD2  C067  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1719   000CD6  CFDE F068          	movff	postinc2,vfpfcnvrt@convarg
  1720   000CDA  CFDD F069          	movff	postdec2,vfpfcnvrt@convarg+1
  1721                           
  1722                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1723   000CDE  0E01               	movlw	1
  1724   000CE0  0100               	movlb	0	; () banked
  1725   000CE2  256C               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1726   000CE4  6F66               	movwf	??_vfpfcnvrt& (0+255),b
  1727   000CE6  0E00               	movlw	0
  1728   000CE8  216D               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1729   000CEA  6F67               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1730   000CEC  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1731   000CF0  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1732   000CF4  C066  FFDE         	movff	??_vfpfcnvrt,postinc2
  1733   000CF8  C067  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1734   000CFC                     
  1735                           ; BSR set to: 0
  1736                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1737   000CFC  C060  F02E         	movff	vfpfcnvrt@fp,dtoa@fp
  1738   000D00  C061  F02F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1739   000D04  C068  F030         	movff	vfpfcnvrt@convarg,dtoa@d
  1740   000D08  C069  F031         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1741   000D0C  EC32  F005         	call	_dtoa	;wreg free
  1742   000D10  EFA7  F006         	goto	l944
  1743   000D14                     l2492:
  1744                           
  1745                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1746   000D14  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1747   000D18  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1748   000D1C  2ADE               	incf	postinc2,f,c
  1749   000D1E  0E00               	movlw	0
  1750   000D20  22DD               	addwfc	postdec2,f,c
  1751   000D22  EFA7  F006         	goto	l944
  1752   000D26                     l2496:
  1753                           
  1754                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1755   000D26  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1756   000D2A  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1757   000D2E  CFDE FFF6          	movff	postinc2,tblptrl
  1758   000D32  CFDD FFF7          	movff	postdec2,tblptrh
  1759   000D36                     	if	0	;tblptru may be non-zero
  1760   000D36                     	endif
  1761   000D36                     	if	0	;tblptru may be non-zero
  1762   000D36                     	endif
  1763   000D36  0008               	tblrd		*
  1764   000D38  50F5               	movf	tablat,w,c
  1765   000D3A  6E13               	movwf	fputc@c^0,c
  1766   000D3C  6A14               	clrf	(fputc@c+1)^0,c
  1767   000D3E  C060  F015         	movff	vfpfcnvrt@fp,fputc@fp
  1768   000D42  C061  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1769   000D46  EC49  F007         	call	_fputc	;wreg free
  1770   000D4A  EF8A  F006         	goto	l2492
  1771   000D4E                     l944:
  1772   000D4E  0012               	return		;funcret
  1773   000D50                     __end_of_vfpfcnvrt:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _read_prec_or_width *****************
  1777 ;; Defined at:
  1778 ;;		line 1029 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  fmt             2   24[COMRAM] PTR PTR const unsigned c
  1781 ;;		 -> vfprintf@cfmt(2), 
  1782 ;;  ap              2   26[COMRAM] PTR PTR void [1]
  1783 ;;		 -> sprintf@ap(2), 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  c               1   30[COMRAM] unsigned char 
  1786 ;;  n               2   31[COMRAM] int 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  2   24[COMRAM] int 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1796 ;;      Params:         4       0       0       0       0       0       0       0       0
  1797 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1798 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1799 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        9 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 5
  1803 ;; This function calls:
  1804 ;;		___wmul
  1805 ;; This function is called by:
  1806 ;;		_vfpfcnvrt
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text6
  1811   000F5C                     __ptext6:
  1812                           	callstack 0
  1813   000F5C                     _read_prec_or_width:
  1814                           	callstack 21
  1815   000F5C                     
  1816                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  1817   000F5C  0E00               	movlw	0
  1818   000F5E  6E21               	movwf	(read_prec_or_width@n+1)^0,c
  1819   000F60  0E00               	movlw	0
  1820   000F62  6E20               	movwf	read_prec_or_width@n^0,c
  1821   000F64                     
  1822                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  1823   000F64  C019  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1824   000F68  C01A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1825   000F6C  CFDE FFF6          	movff	postinc2,tblptrl
  1826   000F70  CFDD FFF7          	movff	postdec2,tblptrh
  1827   000F74                     	if	0	;tblptru may be non-zero
  1828   000F74                     	endif
  1829   000F74                     	if	0	;tblptru may be non-zero
  1830   000F74                     	endif
  1831   000F74  0008               	tblrd		*
  1832   000F76  50F5               	movf	tablat,w,c
  1833   000F78  0A2A               	xorlw	42
  1834   000F7A  A4D8               	btfss	status,2,c
  1835   000F7C  EFC2  F007         	goto	u2031
  1836   000F80  EFC4  F007         	goto	u2030
  1837   000F84                     u2031:
  1838   000F84  EFF8  F007         	goto	l2464
  1839   000F88                     u2030:
  1840   000F88                     
  1841                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  1842   000F88  C019  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1843   000F8C  C01A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1844   000F90  2ADE               	incf	postinc2,f,c
  1845   000F92  0E00               	movlw	0
  1846   000F94  22DD               	addwfc	postdec2,f,c
  1847                           
  1848                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1849   000F96  C01B  FFD9         	movff	read_prec_or_width@ap,fsr2l
  1850   000F9A  C01C  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  1851   000F9E  CFDF F01D          	movff	indf2,??_read_prec_or_width
  1852   000FA2  0E02               	movlw	2
  1853   000FA4  26DE               	addwf	postinc2,f,c
  1854   000FA6  CFDF F01E          	movff	indf2,??_read_prec_or_width+1
  1855   000FAA  0E00               	movlw	0
  1856   000FAC  22DD               	addwfc	postdec2,f,c
  1857   000FAE  C01D  FFD9         	movff	??_read_prec_or_width,fsr2l
  1858   000FB2  C01E  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  1859   000FB6  CFDE F020          	movff	postinc2,read_prec_or_width@n
  1860   000FBA  CFDD F021          	movff	postdec2,read_prec_or_width@n+1
  1861                           
  1862                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  1863   000FBE  EF0C  F008         	goto	l932
  1864   000FC2                     l2460:
  1865                           
  1866                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  1867   000FC2  C020  F013         	movff	read_prec_or_width@n,___wmul@multiplier
  1868   000FC6  C021  F014         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1869   000FCA  0E00               	movlw	0
  1870   000FCC  6E16               	movwf	(___wmul@multiplicand+1)^0,c
  1871   000FCE  0E0A               	movlw	10
  1872   000FD0  6E15               	movwf	___wmul@multiplicand^0,c
  1873   000FD2  ECCD  F00B         	call	___wmul	;wreg free
  1874   000FD6  501F               	movf	read_prec_or_width@c^0,w,c
  1875   000FD8  2413               	addwf	?___wmul^0,w,c
  1876   000FDA  6E20               	movwf	read_prec_or_width@n^0,c
  1877   000FDC  0E00               	movlw	0
  1878   000FDE  2014               	addwfc	(?___wmul+1)^0,w,c
  1879   000FE0  6E21               	movwf	(read_prec_or_width@n+1)^0,c
  1880   000FE2                     
  1881                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  1882   000FE2  C019  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1883   000FE6  C01A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1884   000FEA  2ADE               	incf	postinc2,f,c
  1885   000FEC  0E00               	movlw	0
  1886   000FEE  22DD               	addwfc	postdec2,f,c
  1887   000FF0                     l2464:
  1888                           
  1889                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1890   000FF0  C019  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1891   000FF4  C01A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1892   000FF8  CFDE FFF6          	movff	postinc2,tblptrl
  1893   000FFC  CFDD FFF7          	movff	postdec2,tblptrh
  1894   001000                     	if	0	;tblptru may be non-zero
  1895   001000                     	endif
  1896   001000                     	if	0	;tblptru may be non-zero
  1897   001000                     	endif
  1898   001000  0008               	tblrd		*
  1899   001002  50F5               	movf	tablat,w,c
  1900   001004  0FD0               	addlw	208
  1901   001006  6E1F               	movwf	read_prec_or_width@c^0,c
  1902   001008  0E09               	movlw	9
  1903   00100A  641F               	cpfsgt	read_prec_or_width@c^0,c
  1904   00100C  EF0A  F008         	goto	u2041
  1905   001010  EF0C  F008         	goto	u2040
  1906   001014                     u2041:
  1907   001014  EFE1  F007         	goto	l2460
  1908   001018                     u2040:
  1909   001018                     l932:
  1910                           
  1911                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  1912   001018  C020  F019         	movff	read_prec_or_width@n,?_read_prec_or_width
  1913   00101C  C021  F01A         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1914   001020  0012               	return		;funcret
  1915   001022                     __end_of_read_prec_or_width:
  1916                           	callstack 0
  1917                           
  1918 ;; *************** function ___wmul *****************
  1919 ;; Defined at:
  1920 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  multiplier      2   18[COMRAM] unsigned int 
  1923 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  product         2   22[COMRAM] unsigned int 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2   18[COMRAM] unsigned int 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0, prodl, prodh
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1935 ;;      Params:         4       0       0       0       0       0       0       0       0
  1936 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1938 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1939 ;;Total ram usage:        6 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 4
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_read_prec_or_width
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text7
  1950   00179A                     __ptext7:
  1951                           	callstack 0
  1952   00179A                     ___wmul:
  1953                           	callstack 21
  1954   00179A  5013               	movf	___wmul@multiplier^0,w,c
  1955   00179C  0215               	mulwf	___wmul@multiplicand^0,c
  1956   00179E  CFF3 F017          	movff	prodl,___wmul@product
  1957   0017A2  CFF4 F018          	movff	prodh,___wmul@product+1
  1958   0017A6  5013               	movf	___wmul@multiplier^0,w,c
  1959   0017A8  0216               	mulwf	(___wmul@multiplicand+1)^0,c
  1960   0017AA  50F3               	movf	243,w,c
  1961   0017AC  2618               	addwf	(___wmul@product+1)^0,f,c
  1962   0017AE  5014               	movf	(___wmul@multiplier+1)^0,w,c
  1963   0017B0  0215               	mulwf	___wmul@multiplicand^0,c
  1964   0017B2  50F3               	movf	243,w,c
  1965   0017B4  2618               	addwf	(___wmul@product+1)^0,f,c
  1966   0017B6  C017  F013         	movff	___wmul@product,?___wmul
  1967   0017BA  C018  F014         	movff	___wmul@product+1,?___wmul+1
  1968   0017BE  0012               	return		;funcret
  1969   0017C0                     __end_of___wmul:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _dtoa *****************
  1973 ;; Defined at:
  1974 ;;		line 470 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  1977 ;;		 -> sprintf@f(12), 
  1978 ;;  d               2   47[COMRAM] int 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  i               2   56[COMRAM] int 
  1981 ;;  w               2   53[COMRAM] int 
  1982 ;;  p               2   51[COMRAM] int 
  1983 ;;  s               1   55[COMRAM] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1993 ;;      Params:         4       0       0       0       0       0       0       0       0
  1994 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1996 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1997 ;;Total ram usage:       13 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 8
  2000 ;; This function calls:
  2001 ;;		___awdiv
  2002 ;;		___awmod
  2003 ;;		_abs
  2004 ;;		_pad
  2005 ;; This function is called by:
  2006 ;;		_vfpfcnvrt
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text8
  2011   000A64                     __ptext8:
  2012                           	callstack 0
  2013   000A64                     _dtoa:
  2014                           	callstack 18
  2015   000A64                     
  2016                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2017   000A64  BE31               	btfsc	(dtoa@d+1)^0,7,c
  2018   000A66  EF37  F005         	goto	u1931
  2019   000A6A  EF3A  F005         	goto	u1930
  2020   000A6E                     u1931:
  2021   000A6E  0E01               	movlw	1
  2022   000A70  EF3B  F005         	goto	u1940
  2023   000A74                     u1930:
  2024   000A74  0E00               	movlw	0
  2025   000A76                     u1940:
  2026   000A76  6E38               	movwf	dtoa@s^0,c
  2027   000A78                     
  2028                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2029   000A78  5038               	movf	dtoa@s^0,w,c
  2030   000A7A  B4D8               	btfsc	status,2,c
  2031   000A7C  EF42  F005         	goto	u1951
  2032   000A80  EF44  F005         	goto	u1950
  2033   000A84                     u1951:
  2034   000A84  EF48  F005         	goto	l2410
  2035   000A88                     u1950:
  2036   000A88                     
  2037                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2038   000A88  6C30               	negf	dtoa@d^0,c
  2039   000A8A  1E31               	comf	(dtoa@d+1)^0,f,c
  2040   000A8C  B0D8               	btfsc	status,0,c
  2041   000A8E  2A31               	incf	(dtoa@d+1)^0,f,c
  2042   000A90                     l2410:
  2043                           
  2044                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2045   000A90  BE3E               	btfsc	(_prec+1)^0,7,c
  2046   000A92  EF4F  F005         	goto	u1960
  2047   000A96  EF4D  F005         	goto	u1961
  2048   000A9A                     u1961:
  2049   000A9A  EF55  F005         	goto	l914
  2050   000A9E                     u1960:
  2051   000A9E  0E00               	movlw	0
  2052   000AA0  6E35               	movwf	(dtoa@p+1)^0,c
  2053   000AA2  0E01               	movlw	1
  2054   000AA4  6E34               	movwf	dtoa@p^0,c
  2055   000AA6  EF59  F005         	goto	l916
  2056   000AAA                     l914:
  2057   000AAA  C03D  F034         	movff	_prec,dtoa@p
  2058   000AAE  C03E  F035         	movff	_prec+1,dtoa@p+1
  2059   000AB2                     l916:
  2060                           
  2061                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2062   000AB2  C03B  F036         	movff	_width,dtoa@w
  2063   000AB6  C03C  F037         	movff	_width+1,dtoa@w+1
  2064   000ABA                     
  2065                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2066   000ABA  5038               	movf	dtoa@s^0,w,c
  2067   000ABC  B4D8               	btfsc	status,2,c
  2068   000ABE  EF63  F005         	goto	u1971
  2069   000AC2  EF65  F005         	goto	u1970
  2070   000AC6                     u1971:
  2071   000AC6  EF7C  F005         	goto	l917
  2072   000ACA                     u1970:
  2073   000ACA                     
  2074                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;D:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2075   000ACA  0636               	decf	dtoa@w^0,f,c
  2076   000ACC  A0D8               	btfss	status,0,c
  2077   000ACE  0637               	decf	(dtoa@w+1)^0,f,c
  2078   000AD0                     
  2079                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2080   000AD0  5038               	movf	dtoa@s^0,w,c
  2081   000AD2  A4D8               	btfss	status,2,c
  2082   000AD4  EF6E  F005         	goto	u1981
  2083   000AD8  EF70  F005         	goto	u1980
  2084   000ADC                     u1981:
  2085   000ADC  EF76  F005         	goto	l2422
  2086   000AE0                     u1980:
  2087   000AE0  0E00               	movlw	0
  2088   000AE2  6E33               	movwf	(_dtoa$1163+1)^0,c
  2089   000AE4  0E2B               	movlw	43
  2090   000AE6  6E32               	movwf	_dtoa$1163^0,c
  2091   000AE8  EF7A  F005         	goto	l2424
  2092   000AEC                     l2422:
  2093   000AEC  0E00               	movlw	0
  2094   000AEE  6E33               	movwf	(_dtoa$1163+1)^0,c
  2095   000AF0  0E2D               	movlw	45
  2096   000AF2  6E32               	movwf	_dtoa$1163^0,c
  2097   000AF4                     l2424:
  2098   000AF4  C032  F038         	movff	_dtoa$1163,dtoa@s
  2099   000AF8                     l917:
  2100                           
  2101                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2102   000AF8  0E00               	movlw	0
  2103   000AFA  6E3A               	movwf	(dtoa@i+1)^0,c
  2104   000AFC  0E1F               	movlw	31
  2105   000AFE  6E39               	movwf	dtoa@i^0,c
  2106   000B00                     
  2107                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2108   000B00  0E00               	movlw	0
  2109   000B02  0100               	movlb	0	; () banked
  2110   000B04  6FB5               	movwf	(_dbuf+31)& (0+255),b
  2111                           
  2112                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2113   000B06  EFB5  F005         	goto	l2438
  2114   000B0A                     l2428:
  2115                           
  2116                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;D:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2117   000B0A  0639               	decf	dtoa@i^0,f,c
  2118   000B0C  A0D8               	btfss	status,0,c
  2119   000B0E  063A               	decf	(dtoa@i+1)^0,f,c
  2120   000B10                     
  2121                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2122   000B10  0E96               	movlw	low _dbuf
  2123   000B12  2439               	addwf	dtoa@i^0,w,c
  2124   000B14  6ED9               	movwf	fsr2l,c
  2125   000B16  0E00               	movlw	high _dbuf
  2126   000B18  203A               	addwfc	(dtoa@i+1)^0,w,c
  2127   000B1A  6EDA               	movwf	fsr2h,c
  2128   000B1C  C030  F013         	movff	dtoa@d,___awmod@dividend
  2129   000B20  C031  F014         	movff	dtoa@d+1,___awmod@dividend+1
  2130   000B24  0E00               	movlw	0
  2131   000B26  6E16               	movwf	(___awmod@divisor+1)^0,c
  2132   000B28  0E0A               	movlw	10
  2133   000B2A  6E15               	movwf	___awmod@divisor^0,c
  2134   000B2C  EC73  F008         	call	___awmod	;wreg free
  2135   000B30  C013  F019         	movff	?___awmod,abs@a
  2136   000B34  C014  F01A         	movff	?___awmod+1,abs@a+1
  2137   000B38  EC75  F00B         	call	_abs	;wreg free
  2138   000B3C  5019               	movf	?_abs^0,w,c
  2139   000B3E  0F30               	addlw	48
  2140   000B40  6EDF               	movwf	indf2,c
  2141   000B42                     
  2142                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2143   000B42  0634               	decf	dtoa@p^0,f,c
  2144   000B44  A0D8               	btfss	status,0,c
  2145   000B46  0635               	decf	(dtoa@p+1)^0,f,c
  2146   000B48                     
  2147                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2148   000B48  0636               	decf	dtoa@w^0,f,c
  2149   000B4A  A0D8               	btfss	status,0,c
  2150   000B4C  0637               	decf	(dtoa@w+1)^0,f,c
  2151   000B4E                     
  2152                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2153   000B4E  C030  F013         	movff	dtoa@d,___awdiv@dividend
  2154   000B52  C031  F014         	movff	dtoa@d+1,___awdiv@dividend+1
  2155   000B56  0E00               	movlw	0
  2156   000B58  6E16               	movwf	(___awdiv@divisor+1)^0,c
  2157   000B5A  0E0A               	movlw	10
  2158   000B5C  6E15               	movwf	___awdiv@divisor^0,c
  2159   000B5E  EC11  F008         	call	___awdiv	;wreg free
  2160   000B62  C013  F030         	movff	?___awdiv,dtoa@d
  2161   000B66  C014  F031         	movff	?___awdiv+1,dtoa@d+1
  2162   000B6A                     l2438:
  2163                           
  2164                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2165   000B6A  BE3A               	btfsc	(dtoa@i+1)^0,7,c
  2166   000B6C  EFC0  F005         	goto	u1991
  2167   000B70  503A               	movf	(dtoa@i+1)^0,w,c
  2168   000B72  E108               	bnz	u1990
  2169   000B74  0439               	decf	dtoa@i^0,w,c
  2170   000B76  A0D8               	btfss	status,0,c
  2171   000B78  EFC0  F005         	goto	u1991
  2172   000B7C  EFC2  F005         	goto	u1990
  2173   000B80                     u1991:
  2174   000B80  EFD8  F005         	goto	l2444
  2175   000B84                     u1990:
  2176   000B84  5030               	movf	dtoa@d^0,w,c
  2177   000B86  1031               	iorwf	(dtoa@d+1)^0,w,c
  2178   000B88  A4D8               	btfss	status,2,c
  2179   000B8A  EFC9  F005         	goto	u2001
  2180   000B8E  EFCB  F005         	goto	u2000
  2181   000B92                     u2001:
  2182   000B92  EF85  F005         	goto	l2428
  2183   000B96                     u2000:
  2184   000B96  BE35               	btfsc	(dtoa@p+1)^0,7,c
  2185   000B98  EFD8  F005         	goto	u2010
  2186   000B9C  5035               	movf	(dtoa@p+1)^0,w,c
  2187   000B9E  E106               	bnz	u2011
  2188   000BA0  0434               	decf	dtoa@p^0,w,c
  2189   000BA2  B0D8               	btfsc	status,0,c
  2190   000BA4  EFD6  F005         	goto	u2011
  2191   000BA8  EFD8  F005         	goto	u2010
  2192   000BAC                     u2011:
  2193   000BAC  EF85  F005         	goto	l2428
  2194   000BB0                     u2010:
  2195   000BB0                     l2444:
  2196                           
  2197                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2198   000BB0  5038               	movf	dtoa@s^0,w,c
  2199   000BB2  B4D8               	btfsc	status,2,c
  2200   000BB4  EFDE  F005         	goto	u2021
  2201   000BB8  EFE0  F005         	goto	u2020
  2202   000BBC                     u2021:
  2203   000BBC  EFEB  F005         	goto	l2450
  2204   000BC0                     u2020:
  2205   000BC0                     
  2206                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2207   000BC0  0639               	decf	dtoa@i^0,f,c
  2208   000BC2  A0D8               	btfss	status,0,c
  2209   000BC4  063A               	decf	(dtoa@i+1)^0,f,c
  2210   000BC6                     
  2211                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2212   000BC6  0E96               	movlw	low _dbuf
  2213   000BC8  2439               	addwf	dtoa@i^0,w,c
  2214   000BCA  6ED9               	movwf	fsr2l,c
  2215   000BCC  0E00               	movlw	high _dbuf
  2216   000BCE  203A               	addwfc	(dtoa@i+1)^0,w,c
  2217   000BD0  6EDA               	movwf	fsr2h,c
  2218   000BD2  C038  FFDF         	movff	dtoa@s,indf2
  2219   000BD6                     l2450:
  2220                           
  2221                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2222   000BD6  C02E  F023         	movff	dtoa@fp,pad@fp
  2223   000BDA  C02F  F024         	movff	dtoa@fp+1,pad@fp+1
  2224   000BDE  0E96               	movlw	low _dbuf
  2225   000BE0  2439               	addwf	dtoa@i^0,w,c
  2226   000BE2  6E25               	movwf	pad@buf^0,c
  2227   000BE4  0E00               	movlw	high _dbuf
  2228   000BE6  203A               	addwfc	(dtoa@i+1)^0,w,c
  2229   000BE8  6E26               	movwf	(pad@buf+1)^0,c
  2230   000BEA  C036  F027         	movff	dtoa@w,pad@p
  2231   000BEE  C037  F028         	movff	dtoa@w+1,pad@p+1
  2232   000BF2  ECCB  F008         	call	_pad	;wreg free
  2233   000BF6  0012               	return		;funcret
  2234   000BF8                     __end_of_dtoa:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function _pad *****************
  2238 ;; Defined at:
  2239 ;;		line 152 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  2242 ;;		 -> sprintf@f(12), 
  2243 ;;  buf             2   36[COMRAM] PTR unsigned char 
  2244 ;;		 -> dbuf(32), 
  2245 ;;  p               2   38[COMRAM] int 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  w               2   43[COMRAM] int 
  2248 ;;  i               2   41[COMRAM] int 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2258 ;;      Params:         6       0       0       0       0       0       0       0       0
  2259 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2260 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2261 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2262 ;;Total ram usage:       11 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 7
  2265 ;; This function calls:
  2266 ;;		_fputc
  2267 ;;		_fputs
  2268 ;; This function is called by:
  2269 ;;		_dtoa
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text9
  2274   001196                     __ptext9:
  2275                           	callstack 0
  2276   001196                     _pad:
  2277                           	callstack 18
  2278   001196                     
  2279                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2280   001196  A041               	btfss	_flags^0,0,c
  2281   001198  EFD0  F008         	goto	u1881
  2282   00119C  EFD2  F008         	goto	u1880
  2283   0011A0                     u1881:
  2284   0011A0  EFDC  F008         	goto	l2386
  2285   0011A4                     u1880:
  2286   0011A4                     
  2287                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2288   0011A4  C025  F01C         	movff	pad@buf,fputs@s
  2289   0011A8  C026  F01D         	movff	pad@buf+1,fputs@s+1
  2290   0011AC  C023  F01E         	movff	pad@fp,fputs@fp
  2291   0011B0  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  2292   0011B4  EC53  F00B         	call	_fputs	;wreg free
  2293   0011B8                     l2386:
  2294                           
  2295                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2296   0011B8  BE28               	btfsc	(pad@p+1)^0,7,c
  2297   0011BA  EFE1  F008         	goto	u1891
  2298   0011BE  EFE3  F008         	goto	u1890
  2299   0011C2                     u1891:
  2300   0011C2  EFE9  F008         	goto	l2390
  2301   0011C6                     u1890:
  2302   0011C6  C027  F02C         	movff	pad@p,pad@w
  2303   0011CA  C028  F02D         	movff	pad@p+1,pad@w+1
  2304   0011CE  EFED  F008         	goto	l904
  2305   0011D2                     l2390:
  2306   0011D2  0E00               	movlw	0
  2307   0011D4  6E2D               	movwf	(pad@w+1)^0,c
  2308   0011D6  0E00               	movlw	0
  2309   0011D8  6E2C               	movwf	pad@w^0,c
  2310   0011DA                     l904:
  2311                           
  2312                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2313   0011DA  0E00               	movlw	0
  2314   0011DC  6E2B               	movwf	(pad@i+1)^0,c
  2315   0011DE  0E00               	movlw	0
  2316   0011E0  6E2A               	movwf	pad@i^0,c
  2317                           
  2318                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2319   0011E2  EFFF  F008         	goto	l2396
  2320   0011E6                     l2392:
  2321                           
  2322                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2323   0011E6  0E00               	movlw	0
  2324   0011E8  6E14               	movwf	(fputc@c+1)^0,c
  2325   0011EA  0E20               	movlw	32
  2326   0011EC  6E13               	movwf	fputc@c^0,c
  2327   0011EE  C023  F015         	movff	pad@fp,fputc@fp
  2328   0011F2  C024  F016         	movff	pad@fp+1,fputc@fp+1
  2329   0011F6  EC49  F007         	call	_fputc	;wreg free
  2330   0011FA                     
  2331                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2332   0011FA  4A2A               	infsnz	pad@i^0,f,c
  2333   0011FC  2A2B               	incf	(pad@i+1)^0,f,c
  2334   0011FE                     l2396:
  2335                           
  2336                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2337   0011FE  502C               	movf	pad@w^0,w,c
  2338   001200  5C2A               	subwf	pad@i^0,w,c
  2339   001202  502B               	movf	(pad@i+1)^0,w,c
  2340   001204  0A80               	xorlw	128
  2341   001206  6E29               	movwf	??_pad^0,c
  2342   001208  502D               	movf	(pad@w+1)^0,w,c
  2343   00120A  0A80               	xorlw	128
  2344   00120C  5829               	subwfb	??_pad^0,w,c
  2345   00120E  A0D8               	btfss	status,0,c
  2346   001210  EF0C  F009         	goto	u1901
  2347   001214  EF0E  F009         	goto	u1900
  2348   001218                     u1901:
  2349   001218  EFF3  F008         	goto	l2392
  2350   00121C                     u1900:
  2351   00121C                     
  2352                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2353   00121C  B041               	btfsc	_flags^0,0,c
  2354   00121E  EF13  F009         	goto	u1911
  2355   001222  EF15  F009         	goto	u1910
  2356   001226                     u1911:
  2357   001226  EF1F  F009         	goto	l909
  2358   00122A                     u1910:
  2359   00122A                     
  2360                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2361   00122A  C025  F01C         	movff	pad@buf,fputs@s
  2362   00122E  C026  F01D         	movff	pad@buf+1,fputs@s+1
  2363   001232  C023  F01E         	movff	pad@fp,fputs@fp
  2364   001236  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  2365   00123A  EC53  F00B         	call	_fputs	;wreg free
  2366   00123E                     l909:
  2367   00123E  0012               	return		;funcret
  2368   001240                     __end_of_pad:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _fputs *****************
  2372 ;; Defined at:
  2373 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  s               2   27[COMRAM] PTR const unsigned char 
  2376 ;;		 -> dbuf(32), 
  2377 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2378 ;;		 -> sprintf@f(12), 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  i               2   32[COMRAM] int 
  2381 ;;  c               1   31[COMRAM] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2   27[COMRAM] int 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2391 ;;      Params:         4       0       0       0       0       0       0       0       0
  2392 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2394 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2395 ;;Total ram usage:        7 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 6
  2398 ;; This function calls:
  2399 ;;		_fputc
  2400 ;; This function is called by:
  2401 ;;		_pad
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text10
  2406   0016A6                     __ptext10:
  2407                           	callstack 0
  2408   0016A6                     _fputs:
  2409                           	callstack 18
  2410   0016A6  0E00               	movlw	0
  2411   0016A8  6E22               	movwf	(fputs@i+1)^0,c
  2412   0016AA  0E00               	movlw	0
  2413   0016AC  6E21               	movwf	fputs@i^0,c
  2414   0016AE  EF64  F00B         	goto	l2294
  2415   0016B2                     l2290:
  2416   0016B2  C020  F013         	movff	fputs@c,fputc@c
  2417   0016B6  6A14               	clrf	(fputc@c+1)^0,c
  2418   0016B8  C01E  F015         	movff	fputs@fp,fputc@fp
  2419   0016BC  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  2420   0016C0  EC49  F007         	call	_fputc	;wreg free
  2421   0016C4  4A21               	infsnz	fputs@i^0,f,c
  2422   0016C6  2A22               	incf	(fputs@i+1)^0,f,c
  2423   0016C8                     l2294:
  2424   0016C8  5021               	movf	fputs@i^0,w,c
  2425   0016CA  241C               	addwf	fputs@s^0,w,c
  2426   0016CC  6ED9               	movwf	fsr2l,c
  2427   0016CE  5022               	movf	(fputs@i+1)^0,w,c
  2428   0016D0  201D               	addwfc	(fputs@s+1)^0,w,c
  2429   0016D2  6EDA               	movwf	fsr2h,c
  2430   0016D4  50DF               	movf	indf2,w,c
  2431   0016D6  6E20               	movwf	fputs@c^0,c
  2432   0016D8  5020               	movf	fputs@c^0,w,c
  2433   0016DA  A4D8               	btfss	status,2,c
  2434   0016DC  EF72  F00B         	goto	u1751
  2435   0016E0  EF74  F00B         	goto	u1750
  2436   0016E4                     u1751:
  2437   0016E4  EF59  F00B         	goto	l2290
  2438   0016E8                     u1750:
  2439   0016E8  0012               	return		;funcret
  2440   0016EA                     __end_of_fputs:
  2441                           	callstack 0
  2442                           
  2443 ;; *************** function _fputc *****************
  2444 ;; Defined at:
  2445 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  c               2   18[COMRAM] int 
  2448 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2449 ;;		 -> sprintf@f(12), 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2   18[COMRAM] int 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2461 ;;      Params:         4       0       0       0       0       0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2463 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2464 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2465 ;;Total ram usage:        9 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 5
  2468 ;; This function calls:
  2469 ;;		_putch
  2470 ;; This function is called by:
  2471 ;;		_pad
  2472 ;;		_vfpfcnvrt
  2473 ;;		_fputs
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text11
  2478   000E92                     __ptext11:
  2479                           	callstack 0
  2480   000E92                     _fputc:
  2481                           	callstack 21
  2482   000E92  5015               	movf	fputc@fp^0,w,c
  2483   000E94  1016               	iorwf	(fputc@fp+1)^0,w,c
  2484   000E96  B4D8               	btfsc	status,2,c
  2485   000E98  EF50  F007         	goto	u1711
  2486   000E9C  EF52  F007         	goto	u1710
  2487   000EA0                     u1711:
  2488   000EA0  EF5B  F007         	goto	l2278
  2489   000EA4                     u1710:
  2490   000EA4  5015               	movf	fputc@fp^0,w,c
  2491   000EA6  1016               	iorwf	(fputc@fp+1)^0,w,c
  2492   000EA8  A4D8               	btfss	status,2,c
  2493   000EAA  EF59  F007         	goto	u1721
  2494   000EAE  EF5B  F007         	goto	u1720
  2495   000EB2                     u1721:
  2496   000EB2  EF60  F007         	goto	l2280
  2497   000EB6                     u1720:
  2498   000EB6                     l2278:
  2499   000EB6  5013               	movf	fputc@c^0,w,c
  2500   000EB8  EC4D  F00C         	call	_putch
  2501   000EBC  EFAD  F007         	goto	l969
  2502   000EC0                     l2280:
  2503   000EC0  EE20 F00A          	lfsr	2,10
  2504   000EC4  5015               	movf	fputc@fp^0,w,c
  2505   000EC6  26D9               	addwf	fsr2l,f,c
  2506   000EC8  5016               	movf	(fputc@fp+1)^0,w,c
  2507   000ECA  22DA               	addwfc	fsr2h,f,c
  2508   000ECC  50DE               	movf	postinc2,w,c
  2509   000ECE  10DE               	iorwf	postinc2,w,c
  2510   000ED0  B4D8               	btfsc	status,2,c
  2511   000ED2  EF6D  F007         	goto	u1731
  2512   000ED6  EF6F  F007         	goto	u1730
  2513   000EDA                     u1731:
  2514   000EDA  EF8A  F007         	goto	l2284
  2515   000EDE                     u1730:
  2516   000EDE  EE20 F00A          	lfsr	2,10
  2517   000EE2  5015               	movf	fputc@fp^0,w,c
  2518   000EE4  26D9               	addwf	fsr2l,f,c
  2519   000EE6  5016               	movf	(fputc@fp+1)^0,w,c
  2520   000EE8  22DA               	addwfc	fsr2h,f,c
  2521   000EEA  EE10 F003          	lfsr	1,3
  2522   000EEE  5015               	movf	fputc@fp^0,w,c
  2523   000EF0  26E1               	addwf	fsr1l,f,c
  2524   000EF2  5016               	movf	(fputc@fp+1)^0,w,c
  2525   000EF4  22E2               	addwfc	fsr1h,f,c
  2526   000EF6  50DE               	movf	postinc2,w,c
  2527   000EF8  5CE6               	subwf	postinc1,w,c
  2528   000EFA  50E6               	movf	postinc1,w,c
  2529   000EFC  0A80               	xorlw	128
  2530   000EFE  6E1B               	movwf	(??_fputc+4)^0,c
  2531   000F00  50DE               	movf	postinc2,w,c
  2532   000F02  0A80               	xorlw	128
  2533   000F04  581B               	subwfb	(??_fputc+4)^0,w,c
  2534   000F06  B0D8               	btfsc	status,0,c
  2535   000F08  EF88  F007         	goto	u1741
  2536   000F0C  EF8A  F007         	goto	u1740
  2537   000F10                     u1741:
  2538   000F10  EFAD  F007         	goto	l969
  2539   000F14                     u1740:
  2540   000F14                     l2284:
  2541   000F14  EE20 F003          	lfsr	2,3
  2542   000F18  5015               	movf	fputc@fp^0,w,c
  2543   000F1A  26D9               	addwf	fsr2l,f,c
  2544   000F1C  5016               	movf	(fputc@fp+1)^0,w,c
  2545   000F1E  22DA               	addwfc	fsr2h,f,c
  2546   000F20  CFDE F017          	movff	postinc2,??_fputc
  2547   000F24  CFDD F018          	movff	postdec2,??_fputc+1
  2548   000F28  C015  FFD9         	movff	fputc@fp,fsr2l
  2549   000F2C  C016  FFDA         	movff	fputc@fp+1,fsr2h
  2550   000F30  CFDE F019          	movff	postinc2,??_fputc+2
  2551   000F34  CFDD F01A          	movff	postdec2,??_fputc+3
  2552   000F38  5017               	movf	??_fputc^0,w,c
  2553   000F3A  2419               	addwf	(??_fputc+2)^0,w,c
  2554   000F3C  6ED9               	movwf	fsr2l,c
  2555   000F3E  5018               	movf	(??_fputc+1)^0,w,c
  2556   000F40  201A               	addwfc	(??_fputc+3)^0,w,c
  2557   000F42  6EDA               	movwf	fsr2h,c
  2558   000F44  C013  FFDF         	movff	fputc@c,indf2
  2559   000F48  EE20 F003          	lfsr	2,3
  2560   000F4C  5015               	movf	fputc@fp^0,w,c
  2561   000F4E  26D9               	addwf	fsr2l,f,c
  2562   000F50  5016               	movf	(fputc@fp+1)^0,w,c
  2563   000F52  22DA               	addwfc	fsr2h,f,c
  2564   000F54  2ADE               	incf	postinc2,f,c
  2565   000F56  0E00               	movlw	0
  2566   000F58  22DD               	addwfc	postdec2,f,c
  2567   000F5A                     l969:
  2568   000F5A  0012               	return		;funcret
  2569   000F5C                     __end_of_fputc:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _putch *****************
  2573 ;; Defined at:
  2574 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  c               1    wreg     unsigned char 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  c               1    0[COMRAM] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 4
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_fputc
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text12
  2603   00189A                     __ptext12:
  2604                           	callstack 0
  2605   00189A                     _putch:
  2606                           	callstack 21
  2607   00189A  0012               	return		;funcret
  2608   00189C                     __end_of_putch:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _abs *****************
  2612 ;; Defined at:
  2613 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  a               2   24[COMRAM] int 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  2   24[COMRAM] int 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2627 ;;      Params:         2       0       0       0       0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2629 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2630 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2631 ;;Total ram usage:        4 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 4
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_dtoa
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text13
  2642   0016EA                     __ptext13:
  2643                           	callstack 0
  2644   0016EA                     _abs:
  2645                           	callstack 21
  2646   0016EA  BE1A               	btfsc	(abs@a+1)^0,7,c
  2647   0016EC  EF82  F00B         	goto	u1920
  2648   0016F0  501A               	movf	(abs@a+1)^0,w,c
  2649   0016F2  E106               	bnz	u1921
  2650   0016F4  0419               	decf	abs@a^0,w,c
  2651   0016F6  B0D8               	btfsc	status,0,c
  2652   0016F8  EF80  F00B         	goto	u1921
  2653   0016FC  EF82  F00B         	goto	u1920
  2654   001700                     u1921:
  2655   001700  EF90  F00B         	goto	l954
  2656   001704                     u1920:
  2657   001704  C019  F01B         	movff	abs@a,??_abs
  2658   001708  C01A  F01C         	movff	abs@a+1,??_abs+1
  2659   00170C  1E1B               	comf	??_abs^0,f,c
  2660   00170E  1E1C               	comf	(??_abs+1)^0,f,c
  2661   001710  4A1B               	infsnz	??_abs^0,f,c
  2662   001712  2A1C               	incf	(??_abs+1)^0,f,c
  2663   001714  C01B  F019         	movff	??_abs,?_abs
  2664   001718  C01C  F01A         	movff	??_abs+1,?_abs+1
  2665   00171C  EF94  F00B         	goto	l957
  2666   001720                     l954:
  2667   001720  C019  F019         	movff	abs@a,?_abs
  2668   001724  C01A  F01A         	movff	abs@a+1,?_abs+1
  2669   001728                     l957:
  2670   001728  0012               	return		;funcret
  2671   00172A                     __end_of_abs:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function ___awmod *****************
  2675 ;; Defined at:
  2676 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  dividend        2   18[COMRAM] int 
  2679 ;;  divisor         2   20[COMRAM] int 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  sign            1   23[COMRAM] unsigned char 
  2682 ;;  counter         1   22[COMRAM] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  2   18[COMRAM] int 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2692 ;;      Params:         4       0       0       0       0       0       0       0       0
  2693 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2695 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2696 ;;Total ram usage:        6 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 4
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_dtoa
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text14
  2707   0010E6                     __ptext14:
  2708                           	callstack 0
  2709   0010E6                     ___awmod:
  2710                           	callstack 21
  2711   0010E6  0E00               	movlw	0
  2712   0010E8  6E18               	movwf	___awmod@sign^0,c
  2713   0010EA  BE14               	btfsc	(___awmod@dividend+1)^0,7,c
  2714   0010EC  EF7C  F008         	goto	u1820
  2715   0010F0  EF7A  F008         	goto	u1821
  2716   0010F4                     u1821:
  2717   0010F4  EF82  F008         	goto	l2354
  2718   0010F8                     u1820:
  2719   0010F8  6C13               	negf	___awmod@dividend^0,c
  2720   0010FA  1E14               	comf	(___awmod@dividend+1)^0,f,c
  2721   0010FC  B0D8               	btfsc	status,0,c
  2722   0010FE  2A14               	incf	(___awmod@dividend+1)^0,f,c
  2723   001100  0E01               	movlw	1
  2724   001102  6E18               	movwf	___awmod@sign^0,c
  2725   001104                     l2354:
  2726   001104  BE16               	btfsc	(___awmod@divisor+1)^0,7,c
  2727   001106  EF89  F008         	goto	u1830
  2728   00110A  EF87  F008         	goto	u1831
  2729   00110E                     u1831:
  2730   00110E  EF8D  F008         	goto	l2358
  2731   001112                     u1830:
  2732   001112  6C15               	negf	___awmod@divisor^0,c
  2733   001114  1E16               	comf	(___awmod@divisor+1)^0,f,c
  2734   001116  B0D8               	btfsc	status,0,c
  2735   001118  2A16               	incf	(___awmod@divisor+1)^0,f,c
  2736   00111A                     l2358:
  2737   00111A  5015               	movf	___awmod@divisor^0,w,c
  2738   00111C  1016               	iorwf	(___awmod@divisor+1)^0,w,c
  2739   00111E  B4D8               	btfsc	status,2,c
  2740   001120  EF94  F008         	goto	u1841
  2741   001124  EF96  F008         	goto	u1840
  2742   001128                     u1841:
  2743   001128  EFBA  F008         	goto	l2374
  2744   00112C                     u1840:
  2745   00112C  0E01               	movlw	1
  2746   00112E  6E17               	movwf	___awmod@counter^0,c
  2747   001130  EF9E  F008         	goto	l2364
  2748   001134                     l2362:
  2749   001134  90D8               	bcf	status,0,c
  2750   001136  3615               	rlcf	___awmod@divisor^0,f,c
  2751   001138  3616               	rlcf	(___awmod@divisor+1)^0,f,c
  2752   00113A  2A17               	incf	___awmod@counter^0,f,c
  2753   00113C                     l2364:
  2754   00113C  AE16               	btfss	(___awmod@divisor+1)^0,7,c
  2755   00113E  EFA3  F008         	goto	u1851
  2756   001142  EFA5  F008         	goto	u1850
  2757   001146                     u1851:
  2758   001146  EF9A  F008         	goto	l2362
  2759   00114A                     u1850:
  2760   00114A                     l2366:
  2761   00114A  5015               	movf	___awmod@divisor^0,w,c
  2762   00114C  5C13               	subwf	___awmod@dividend^0,w,c
  2763   00114E  5016               	movf	(___awmod@divisor+1)^0,w,c
  2764   001150  5814               	subwfb	(___awmod@dividend+1)^0,w,c
  2765   001152  A0D8               	btfss	status,0,c
  2766   001154  EFAE  F008         	goto	u1861
  2767   001158  EFB0  F008         	goto	u1860
  2768   00115C                     u1861:
  2769   00115C  EFB4  F008         	goto	l2370
  2770   001160                     u1860:
  2771   001160  5015               	movf	___awmod@divisor^0,w,c
  2772   001162  5E13               	subwf	___awmod@dividend^0,f,c
  2773   001164  5016               	movf	(___awmod@divisor+1)^0,w,c
  2774   001166  5A14               	subwfb	(___awmod@dividend+1)^0,f,c
  2775   001168                     l2370:
  2776   001168  90D8               	bcf	status,0,c
  2777   00116A  3216               	rrcf	(___awmod@divisor+1)^0,f,c
  2778   00116C  3215               	rrcf	___awmod@divisor^0,f,c
  2779   00116E  2E17               	decfsz	___awmod@counter^0,f,c
  2780   001170  EFA5  F008         	goto	l2366
  2781   001174                     l2374:
  2782   001174  5018               	movf	___awmod@sign^0,w,c
  2783   001176  B4D8               	btfsc	status,2,c
  2784   001178  EFC0  F008         	goto	u1871
  2785   00117C  EFC2  F008         	goto	u1870
  2786   001180                     u1871:
  2787   001180  EFC6  F008         	goto	l2378
  2788   001184                     u1870:
  2789   001184  6C13               	negf	___awmod@dividend^0,c
  2790   001186  1E14               	comf	(___awmod@dividend+1)^0,f,c
  2791   001188  B0D8               	btfsc	status,0,c
  2792   00118A  2A14               	incf	(___awmod@dividend+1)^0,f,c
  2793   00118C                     l2378:
  2794   00118C  C013  F013         	movff	___awmod@dividend,?___awmod
  2795   001190  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  2796   001194  0012               	return		;funcret
  2797   001196                     __end_of___awmod:
  2798                           	callstack 0
  2799                           
  2800 ;; *************** function ___awdiv *****************
  2801 ;; Defined at:
  2802 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  dividend        2   18[COMRAM] int 
  2805 ;;  divisor         2   20[COMRAM] int 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  quotient        2   24[COMRAM] int 
  2808 ;;  sign            1   23[COMRAM] unsigned char 
  2809 ;;  counter         1   22[COMRAM] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  2   18[COMRAM] int 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2819 ;;      Params:         4       0       0       0       0       0       0       0       0
  2820 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2822 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2823 ;;Total ram usage:        8 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; Hardware stack levels required when called: 4
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_dtoa
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text15
  2834   001022                     __ptext15:
  2835                           	callstack 0
  2836   001022                     ___awdiv:
  2837                           	callstack 21
  2838   001022  0E00               	movlw	0
  2839   001024  6E18               	movwf	___awdiv@sign^0,c
  2840   001026  BE16               	btfsc	(___awdiv@divisor+1)^0,7,c
  2841   001028  EF1A  F008         	goto	u1760
  2842   00102C  EF18  F008         	goto	u1761
  2843   001030                     u1761:
  2844   001030  EF20  F008         	goto	l2310
  2845   001034                     u1760:
  2846   001034  6C15               	negf	___awdiv@divisor^0,c
  2847   001036  1E16               	comf	(___awdiv@divisor+1)^0,f,c
  2848   001038  B0D8               	btfsc	status,0,c
  2849   00103A  2A16               	incf	(___awdiv@divisor+1)^0,f,c
  2850   00103C  0E01               	movlw	1
  2851   00103E  6E18               	movwf	___awdiv@sign^0,c
  2852   001040                     l2310:
  2853   001040  BE14               	btfsc	(___awdiv@dividend+1)^0,7,c
  2854   001042  EF27  F008         	goto	u1770
  2855   001046  EF25  F008         	goto	u1771
  2856   00104A                     u1771:
  2857   00104A  EF2D  F008         	goto	l2316
  2858   00104E                     u1770:
  2859   00104E  6C13               	negf	___awdiv@dividend^0,c
  2860   001050  1E14               	comf	(___awdiv@dividend+1)^0,f,c
  2861   001052  B0D8               	btfsc	status,0,c
  2862   001054  2A14               	incf	(___awdiv@dividend+1)^0,f,c
  2863   001056  0E01               	movlw	1
  2864   001058  1A18               	xorwf	___awdiv@sign^0,f,c
  2865   00105A                     l2316:
  2866   00105A  0E00               	movlw	0
  2867   00105C  6E1A               	movwf	(___awdiv@quotient+1)^0,c
  2868   00105E  0E00               	movlw	0
  2869   001060  6E19               	movwf	___awdiv@quotient^0,c
  2870   001062  5015               	movf	___awdiv@divisor^0,w,c
  2871   001064  1016               	iorwf	(___awdiv@divisor+1)^0,w,c
  2872   001066  B4D8               	btfsc	status,2,c
  2873   001068  EF38  F008         	goto	u1781
  2874   00106C  EF3A  F008         	goto	u1780
  2875   001070                     u1781:
  2876   001070  EF62  F008         	goto	l2338
  2877   001074                     u1780:
  2878   001074  0E01               	movlw	1
  2879   001076  6E17               	movwf	___awdiv@counter^0,c
  2880   001078  EF42  F008         	goto	l2324
  2881   00107C                     l2322:
  2882   00107C  90D8               	bcf	status,0,c
  2883   00107E  3615               	rlcf	___awdiv@divisor^0,f,c
  2884   001080  3616               	rlcf	(___awdiv@divisor+1)^0,f,c
  2885   001082  2A17               	incf	___awdiv@counter^0,f,c
  2886   001084                     l2324:
  2887   001084  AE16               	btfss	(___awdiv@divisor+1)^0,7,c
  2888   001086  EF47  F008         	goto	u1791
  2889   00108A  EF49  F008         	goto	u1790
  2890   00108E                     u1791:
  2891   00108E  EF3E  F008         	goto	l2322
  2892   001092                     u1790:
  2893   001092                     l2326:
  2894   001092  90D8               	bcf	status,0,c
  2895   001094  3619               	rlcf	___awdiv@quotient^0,f,c
  2896   001096  361A               	rlcf	(___awdiv@quotient+1)^0,f,c
  2897   001098  5015               	movf	___awdiv@divisor^0,w,c
  2898   00109A  5C13               	subwf	___awdiv@dividend^0,w,c
  2899   00109C  5016               	movf	(___awdiv@divisor+1)^0,w,c
  2900   00109E  5814               	subwfb	(___awdiv@dividend+1)^0,w,c
  2901   0010A0  A0D8               	btfss	status,0,c
  2902   0010A2  EF55  F008         	goto	u1801
  2903   0010A6  EF57  F008         	goto	u1800
  2904   0010AA                     u1801:
  2905   0010AA  EF5C  F008         	goto	l2334
  2906   0010AE                     u1800:
  2907   0010AE  5015               	movf	___awdiv@divisor^0,w,c
  2908   0010B0  5E13               	subwf	___awdiv@dividend^0,f,c
  2909   0010B2  5016               	movf	(___awdiv@divisor+1)^0,w,c
  2910   0010B4  5A14               	subwfb	(___awdiv@dividend+1)^0,f,c
  2911   0010B6  8019               	bsf	___awdiv@quotient^0,0,c
  2912   0010B8                     l2334:
  2913   0010B8  90D8               	bcf	status,0,c
  2914   0010BA  3216               	rrcf	(___awdiv@divisor+1)^0,f,c
  2915   0010BC  3215               	rrcf	___awdiv@divisor^0,f,c
  2916   0010BE  2E17               	decfsz	___awdiv@counter^0,f,c
  2917   0010C0  EF49  F008         	goto	l2326
  2918   0010C4                     l2338:
  2919   0010C4  5018               	movf	___awdiv@sign^0,w,c
  2920   0010C6  B4D8               	btfsc	status,2,c
  2921   0010C8  EF68  F008         	goto	u1811
  2922   0010CC  EF6A  F008         	goto	u1810
  2923   0010D0                     u1811:
  2924   0010D0  EF6E  F008         	goto	l2342
  2925   0010D4                     u1810:
  2926   0010D4  6C19               	negf	___awdiv@quotient^0,c
  2927   0010D6  1E1A               	comf	(___awdiv@quotient+1)^0,f,c
  2928   0010D8  B0D8               	btfsc	status,0,c
  2929   0010DA  2A1A               	incf	(___awdiv@quotient+1)^0,f,c
  2930   0010DC                     l2342:
  2931   0010DC  C019  F013         	movff	___awdiv@quotient,?___awdiv
  2932   0010E0  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  2933   0010E4  0012               	return		;funcret
  2934   0010E6                     __end_of___awdiv:
  2935                           	callstack 0
  2936                           
  2937 ;; *************** function _lcd_putc *****************
  2938 ;; Defined at:
  2939 ;;		line 232 in file "main.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  a               2   22[COMRAM] PTR unsigned char 
  2942 ;;		 -> Tx_USART@palabra(5), STR_1(6), MensajeRx(4), 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  i               2   26[COMRAM] int 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2954 ;;      Params:         2       0       0       0       0       0       0       0       0
  2955 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2956 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2957 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2958 ;;Total ram usage:        6 bytes
  2959 ;; Hardware stack levels used: 1
  2960 ;; Hardware stack levels required when called: 6
  2961 ;; This function calls:
  2962 ;;		_lcd_write_char
  2963 ;; This function is called by:
  2964 ;;		_Tx_USART
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text16
  2969   001240                     __ptext16:
  2970                           	callstack 0
  2971   001240                     _lcd_putc:
  2972                           	callstack 23
  2973   001240                     
  2974                           ;main.c: 233:     int i;;main.c: 234:     for (i = 0; a[i] != '\0'; i++)
  2975   001240  0E00               	movlw	0
  2976   001242  6E1C               	movwf	(lcd_putc@i+1)^0,c
  2977   001244  0E00               	movlw	0
  2978   001246  6E1B               	movwf	lcd_putc@i^0,c
  2979   001248  EF40  F009         	goto	l1936
  2980   00124C                     l1932:
  2981                           
  2982                           ;main.c: 235:         lcd_write_char(a[i]);
  2983   00124C  501B               	movf	lcd_putc@i^0,w,c
  2984   00124E  2417               	addwf	lcd_putc@a^0,w,c
  2985   001250  6E19               	movwf	??_lcd_putc^0,c
  2986   001252  501C               	movf	(lcd_putc@i+1)^0,w,c
  2987   001254  2018               	addwfc	(lcd_putc@a+1)^0,w,c
  2988   001256  6E1A               	movwf	(??_lcd_putc+1)^0,c
  2989   001258  C019  FFF6         	movff	??_lcd_putc,tblptrl
  2990   00125C  C01A  FFF7         	movff	??_lcd_putc+1,tblptrh
  2991   001260  6AF8               	clrf	tblptru,c
  2992   001262  0E07               	movlw	(high __ramtop+-1)
  2993   001264  64F7               	cpfsgt	tblptrh,c
  2994   001266  D003               	bra	u1357
  2995   001268  0008               	tblrd		*
  2996   00126A  50F5               	movf	tablat,w,c
  2997   00126C  D005               	bra	u1350
  2998   00126E                     u1357:
  2999   00126E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3000   001272  CFF7 FFE2          	movff	tblptrh,fsr1h
  3001   001276  50E7               	movf	indf1,w,c
  3002   001278                     u1350:
  3003   001278  EC95  F00B         	call	_lcd_write_char
  3004   00127C  4A1B               	infsnz	lcd_putc@i^0,f,c
  3005   00127E  2A1C               	incf	(lcd_putc@i+1)^0,f,c
  3006   001280                     l1936:
  3007   001280  501B               	movf	lcd_putc@i^0,w,c
  3008   001282  2417               	addwf	lcd_putc@a^0,w,c
  3009   001284  6E19               	movwf	??_lcd_putc^0,c
  3010   001286  501C               	movf	(lcd_putc@i+1)^0,w,c
  3011   001288  2018               	addwfc	(lcd_putc@a+1)^0,w,c
  3012   00128A  6E1A               	movwf	(??_lcd_putc+1)^0,c
  3013   00128C  C019  FFF6         	movff	??_lcd_putc,tblptrl
  3014   001290  C01A  FFF7         	movff	??_lcd_putc+1,tblptrh
  3015   001294  6AF8               	clrf	tblptru,c
  3016   001296  0E07               	movlw	(high __ramtop+-1)
  3017   001298  64F7               	cpfsgt	tblptrh,c
  3018   00129A  D003               	bra	u1367
  3019   00129C  0008               	tblrd		*
  3020   00129E  50F5               	movf	tablat,w,c
  3021   0012A0  D005               	bra	u1360
  3022   0012A2                     u1367:
  3023   0012A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3024   0012A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3025   0012AA  50E7               	movf	indf1,w,c
  3026   0012AC                     u1360:
  3027   0012AC  0900               	iorlw	0
  3028   0012AE  A4D8               	btfss	status,2,c
  3029   0012B0  EF5C  F009         	goto	u1371
  3030   0012B4  EF5E  F009         	goto	u1370
  3031   0012B8                     u1371:
  3032   0012B8  EF26  F009         	goto	l1932
  3033   0012BC                     u1370:
  3034   0012BC  0012               	return		;funcret
  3035   0012BE                     __end_of_lcd_putc:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _lcd_write_char *****************
  3039 ;; Defined at:
  3040 ;;		line 218 in file "main.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  a               1    wreg     unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  a               1   21[COMRAM] unsigned char 
  3045 ;;  y               1   20[COMRAM] unsigned char 
  3046 ;;  temp            1   19[COMRAM] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3056 ;;      Params:         0       0       0       0       0       0       0       0       0
  3057 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3059 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        3 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 5
  3063 ;; This function calls:
  3064 ;;		_Lcd_Port
  3065 ;; This function is called by:
  3066 ;;		_lcd_putc
  3067 ;;		_Tx_USART
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text17
  3072   00172A                     __ptext17:
  3073                           	callstack 0
  3074   00172A                     _lcd_write_char:
  3075                           	callstack 24
  3076                           
  3077                           ;incstack = 0
  3078                           ;lcd_write_char@a stored from wreg
  3079   00172A  6E16               	movwf	lcd_write_char@a^0,c
  3080   00172C                     
  3081                           ;main.c: 219:     char temp, y;;main.c: 220:     temp = a & 0x0F;
  3082   00172C  5016               	movf	lcd_write_char@a^0,w,c
  3083   00172E  0B0F               	andlw	15
  3084   001730  6E14               	movwf	lcd_write_char@temp^0,c
  3085                           
  3086                           ;main.c: 221:     y = a & 0xF0;
  3087   001732  5016               	movf	lcd_write_char@a^0,w,c
  3088   001734  0BF0               	andlw	240
  3089   001736  6E15               	movwf	lcd_write_char@y^0,c
  3090   001738                     
  3091                           ;main.c: 222:     LATDbits.LATD2 = 1;
  3092   001738  848C               	bsf	140,2,c	;volatile
  3093   00173A                     
  3094                           ;main.c: 223:     Lcd_Port(y >> 4);
  3095   00173A  3815               	swapf	lcd_write_char@y^0,w,c
  3096   00173C  0B0F               	andlw	15
  3097   00173E  ECA6  F00A         	call	_Lcd_Port
  3098   001742                     
  3099                           ;main.c: 224:     LATDbits.LATD3 = 1;
  3100   001742  868C               	bsf	140,3,c	;volatile
  3101   001744                     
  3102                           ;main.c: 225:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3103   001744  0E0D               	movlw	13
  3104   001746                     u2377:
  3105   001746  2EE8               	decfsz	wreg,f,c
  3106   001748  D7FE               	bra	u2377
  3107   00174A  F000               	nop	
  3108   00174C                     
  3109                           ;main.c: 226:     LATDbits.LATD3 = 0;
  3110   00174C  968C               	bcf	140,3,c	;volatile
  3111   00174E                     
  3112                           ;main.c: 227:     Lcd_Port(temp);
  3113   00174E  5014               	movf	lcd_write_char@temp^0,w,c
  3114   001750  ECA6  F00A         	call	_Lcd_Port
  3115   001754                     
  3116                           ;main.c: 228:     LATDbits.LATD3 = 1;
  3117   001754  868C               	bsf	140,3,c	;volatile
  3118   001756                     
  3119                           ;main.c: 229:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3120   001756  0E0D               	movlw	13
  3121   001758                     u2387:
  3122   001758  2EE8               	decfsz	wreg,f,c
  3123   00175A  D7FE               	bra	u2387
  3124   00175C  F000               	nop	
  3125   00175E                     
  3126                           ;main.c: 230:     LATDbits.LATD3 = 0;
  3127   00175E  968C               	bcf	140,3,c	;volatile
  3128   001760  0012               	return		;funcret
  3129   001762                     __end_of_lcd_write_char:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _lcd_gotoxy *****************
  3133 ;; Defined at:
  3134 ;;		line 185 in file "main.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  a               1    wreg     unsigned char 
  3137 ;;  b               1   21[COMRAM] unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  a               1   22[COMRAM] unsigned char 
  3140 ;;  temp            1   25[COMRAM] unsigned char 
  3141 ;;  y               1   24[COMRAM] unsigned char 
  3142 ;;  z               1   23[COMRAM] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3152 ;;      Params:         1       0       0       0       0       0       0       0       0
  3153 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3155 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3156 ;;Total ram usage:        5 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 6
  3159 ;; This function calls:
  3160 ;;		_Lcd_Cmd
  3161 ;; This function is called by:
  3162 ;;		_Tx_USART
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text18
  3167   001480                     __ptext18:
  3168                           	callstack 0
  3169   001480                     _lcd_gotoxy:
  3170                           	callstack 23
  3171                           
  3172                           ;incstack = 0
  3173                           ;lcd_gotoxy@a stored from wreg
  3174   001480  6E17               	movwf	lcd_gotoxy@a^0,c
  3175   001482                     
  3176                           ;main.c: 186:     char temp, z, y;;main.c: 187:     if (a == 1) {
  3177   001482  0417               	decf	lcd_gotoxy@a^0,w,c
  3178   001484  A4D8               	btfss	status,2,c
  3179   001486  EF47  F00A         	goto	u1331
  3180   00148A  EF49  F00A         	goto	u1330
  3181   00148E                     u1331:
  3182   00148E  EF5A  F00A         	goto	l1922
  3183   001492                     u1330:
  3184   001492                     
  3185                           ;main.c: 188:         temp = 0x80 + b - 1;
  3186   001492  5016               	movf	lcd_gotoxy@b^0,w,c
  3187   001494  0F7F               	addlw	127
  3188   001496  6E1A               	movwf	lcd_gotoxy@temp^0,c
  3189                           
  3190                           ;main.c: 189:         z = temp >> 4;
  3191   001498  381A               	swapf	lcd_gotoxy@temp^0,w,c
  3192   00149A  0B0F               	andlw	15
  3193   00149C  6E18               	movwf	lcd_gotoxy@z^0,c
  3194                           
  3195                           ;main.c: 190:         y = temp & 0x0F;
  3196   00149E  501A               	movf	lcd_gotoxy@temp^0,w,c
  3197   0014A0  0B0F               	andlw	15
  3198   0014A2  6E19               	movwf	lcd_gotoxy@y^0,c
  3199   0014A4                     
  3200                           ;main.c: 191:         Lcd_Cmd(z);
  3201   0014A4  5018               	movf	lcd_gotoxy@z^0,w,c
  3202   0014A6  EC14  F00C         	call	_Lcd_Cmd
  3203   0014AA                     
  3204                           ;main.c: 192:         Lcd_Cmd(y);
  3205   0014AA  5019               	movf	lcd_gotoxy@y^0,w,c
  3206   0014AC  EC14  F00C         	call	_Lcd_Cmd
  3207                           
  3208                           ;main.c: 193:     } else if (a == 2) {
  3209   0014B0  EF72  F00A         	goto	l113
  3210   0014B4                     l1922:
  3211   0014B4  0E02               	movlw	2
  3212   0014B6  1817               	xorwf	lcd_gotoxy@a^0,w,c
  3213   0014B8  A4D8               	btfss	status,2,c
  3214   0014BA  EF61  F00A         	goto	u1341
  3215   0014BE  EF63  F00A         	goto	u1340
  3216   0014C2                     u1341:
  3217   0014C2  EF72  F00A         	goto	l113
  3218   0014C6                     u1340:
  3219   0014C6                     
  3220                           ;main.c: 194:         temp = 0xC0 + b - 1;
  3221   0014C6  5016               	movf	lcd_gotoxy@b^0,w,c
  3222   0014C8  0FBF               	addlw	191
  3223   0014CA  6E1A               	movwf	lcd_gotoxy@temp^0,c
  3224                           
  3225                           ;main.c: 195:         z = temp >> 4;
  3226   0014CC  381A               	swapf	lcd_gotoxy@temp^0,w,c
  3227   0014CE  0B0F               	andlw	15
  3228   0014D0  6E18               	movwf	lcd_gotoxy@z^0,c
  3229                           
  3230                           ;main.c: 196:         y = temp & 0x0F;
  3231   0014D2  501A               	movf	lcd_gotoxy@temp^0,w,c
  3232   0014D4  0B0F               	andlw	15
  3233   0014D6  6E19               	movwf	lcd_gotoxy@y^0,c
  3234   0014D8                     
  3235                           ;main.c: 197:         Lcd_Cmd(z);
  3236   0014D8  5018               	movf	lcd_gotoxy@z^0,w,c
  3237   0014DA  EC14  F00C         	call	_Lcd_Cmd
  3238   0014DE                     
  3239                           ;main.c: 198:         Lcd_Cmd(y);
  3240   0014DE  5019               	movf	lcd_gotoxy@y^0,w,c
  3241   0014E0  EC14  F00C         	call	_Lcd_Cmd
  3242   0014E4                     l113:
  3243   0014E4  0012               	return		;funcret
  3244   0014E6                     __end_of_lcd_gotoxy:
  3245                           	callstack 0
  3246                           
  3247 ;; *************** function _Lcd_Cmd *****************
  3248 ;; Defined at:
  3249 ;;		line 174 in file "main.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  a               1    wreg     unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  a               1   20[COMRAM] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3263 ;;      Params:         0       0       0       0       0       0       0       0       0
  3264 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3265 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3266 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3267 ;;Total ram usage:        2 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; Hardware stack levels required when called: 5
  3270 ;; This function calls:
  3271 ;;		_Lcd_Port
  3272 ;; This function is called by:
  3273 ;;		_lcd_gotoxy
  3274 ;;		_lcd_init
  3275 ;;		_lcd_shift_right
  3276 ;;		_lcd_shift_left
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text19
  3281   001828                     __ptext19:
  3282                           	callstack 0
  3283   001828                     _Lcd_Cmd:
  3284                           	callstack 24
  3285                           
  3286                           ;incstack = 0
  3287                           ;Lcd_Cmd@a stored from wreg
  3288   001828  6E15               	movwf	Lcd_Cmd@a^0,c
  3289   00182A                     
  3290                           ;main.c: 175:     LATDbits.LATD2 = 0;
  3291   00182A  948C               	bcf	140,2,c	;volatile
  3292   00182C                     
  3293                           ;main.c: 176:     Lcd_Port(a);
  3294   00182C  5015               	movf	Lcd_Cmd@a^0,w,c
  3295   00182E  ECA6  F00A         	call	_Lcd_Port
  3296   001832                     
  3297                           ;main.c: 177:     LATDbits.LATD3 = 1;
  3298   001832  868C               	bsf	140,3,c	;volatile
  3299   001834                     
  3300                           ;main.c: 178:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3301   001834  0E06               	movlw	6
  3302   001836  6E14               	movwf	??_Lcd_Cmd^0,c
  3303   001838  0E30               	movlw	48
  3304   00183A                     u2397:
  3305   00183A  2EE8               	decfsz	wreg,f,c
  3306   00183C  D7FE               	bra	u2397
  3307   00183E  2E14               	decfsz	??_Lcd_Cmd^0,f,c
  3308   001840  D7FC               	bra	u2397
  3309   001842  D000               	nop2	
  3310   001844                     
  3311                           ;main.c: 179:     LATDbits.LATD3 = 0;
  3312   001844  968C               	bcf	140,3,c	;volatile
  3313   001846  0012               	return		;funcret
  3314   001848                     __end_of_Lcd_Cmd:
  3315                           	callstack 0
  3316                           
  3317 ;; *************** function _Lcd_Port *****************
  3318 ;; Defined at:
  3319 ;;		line 153 in file "main.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  a               1    wreg     unsigned char 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  a               1   18[COMRAM] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0
  3334 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3336 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3337 ;;Total ram usage:        1 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 4
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_Lcd_Cmd
  3344 ;;		_lcd_init
  3345 ;;		_lcd_write_char
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text20
  3350   00154C                     __ptext20:
  3351                           	callstack 0
  3352   00154C                     _Lcd_Port:
  3353                           	callstack 25
  3354                           
  3355                           ;incstack = 0
  3356                           ;Lcd_Port@a stored from wreg
  3357   00154C  6E13               	movwf	Lcd_Port@a^0,c
  3358   00154E                     
  3359                           ;main.c: 154:     if (a & 1)
  3360   00154E  A013               	btfss	Lcd_Port@a^0,0,c
  3361   001550  EFAC  F00A         	goto	u1201
  3362   001554  EFAE  F00A         	goto	u1200
  3363   001558                     u1201:
  3364   001558  EFB1  F00A         	goto	l93
  3365   00155C                     u1200:
  3366   00155C                     
  3367                           ;main.c: 155:         LATDbits.LATD4 = 1;
  3368   00155C  888C               	bsf	140,4,c	;volatile
  3369   00155E  EFB2  F00A         	goto	l1810
  3370   001562                     l93:
  3371                           
  3372                           ;main.c: 157:         LATDbits.LATD4 = 0;
  3373   001562  988C               	bcf	140,4,c	;volatile
  3374   001564                     l1810:
  3375                           
  3376                           ;main.c: 159:     if (a & 2)
  3377   001564  A213               	btfss	Lcd_Port@a^0,1,c
  3378   001566  EFB7  F00A         	goto	u1211
  3379   00156A  EFB9  F00A         	goto	u1210
  3380   00156E                     u1211:
  3381   00156E  EFBC  F00A         	goto	l95
  3382   001572                     u1210:
  3383   001572                     
  3384                           ;main.c: 160:         LATDbits.LATD5 = 1;
  3385   001572  8A8C               	bsf	140,5,c	;volatile
  3386   001574  EFBD  F00A         	goto	l1814
  3387   001578                     l95:
  3388                           
  3389                           ;main.c: 162:         LATDbits.LATD5 = 0;
  3390   001578  9A8C               	bcf	140,5,c	;volatile
  3391   00157A                     l1814:
  3392                           
  3393                           ;main.c: 164:     if (a & 4)
  3394   00157A  A413               	btfss	Lcd_Port@a^0,2,c
  3395   00157C  EFC2  F00A         	goto	u1221
  3396   001580  EFC4  F00A         	goto	u1220
  3397   001584                     u1221:
  3398   001584  EFC7  F00A         	goto	l97
  3399   001588                     u1220:
  3400   001588                     
  3401                           ;main.c: 165:         LATDbits.LATD6 = 1;
  3402   001588  8C8C               	bsf	140,6,c	;volatile
  3403   00158A  EFC8  F00A         	goto	l1818
  3404   00158E                     l97:
  3405                           
  3406                           ;main.c: 167:         LATDbits.LATD6 = 0;
  3407   00158E  9C8C               	bcf	140,6,c	;volatile
  3408   001590                     l1818:
  3409                           
  3410                           ;main.c: 169:     if (a & 8)
  3411   001590  A613               	btfss	Lcd_Port@a^0,3,c
  3412   001592  EFCD  F00A         	goto	u1231
  3413   001596  EFCF  F00A         	goto	u1230
  3414   00159A                     u1231:
  3415   00159A  EFD2  F00A         	goto	l99
  3416   00159E                     u1230:
  3417   00159E                     
  3418                           ;main.c: 170:         LATDbits.LATD7 = 1;
  3419   00159E  8E8C               	bsf	140,7,c	;volatile
  3420   0015A0  EFD3  F00A         	goto	l101
  3421   0015A4                     l99:
  3422                           
  3423                           ;main.c: 172:         LATDbits.LATD7 = 0;
  3424   0015A4  9E8C               	bcf	140,7,c	;volatile
  3425   0015A6                     l101:
  3426   0015A6  0012               	return		;funcret
  3427   0015A8                     __end_of_Lcd_Port:
  3428                           	callstack 0
  3429                           
  3430 ;; *************** function _Transmite *****************
  3431 ;; Defined at:
  3432 ;;		line 337 in file "main.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		None
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3446 ;;      Params:         0       0       0       0       0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3449 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used: 1
  3452 ;; Hardware stack levels required when called: 4
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_Tx_USART
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text21
  3461   0017E4                     __ptext21:
  3462                           	callstack 0
  3463   0017E4                     _Transmite:
  3464                           	callstack 25
  3465   0017E4                     
  3466                           ;main.c: 341:     TXREG = TxUSART;
  3467   0017E4  C095  FFAD         	movff	_TxUSART,4013	;volatile
  3468   0017E8                     l155:
  3469   0017E8  A89E               	btfss	158,4,c	;volatile
  3470   0017EA  EFF9  F00B         	goto	u1381
  3471   0017EE  EFFB  F00B         	goto	u1380
  3472   0017F2                     u1381:
  3473   0017F2  EFF4  F00B         	goto	l155
  3474   0017F6                     u1380:
  3475   0017F6                     l158:
  3476   0017F6  A2AC               	btfss	172,1,c	;volatile
  3477   0017F8  EF00  F00C         	goto	u1391
  3478   0017FC  EF02  F00C         	goto	u1390
  3479   001800                     u1391:
  3480   001800  EFFB  F00B         	goto	l158
  3481   001804                     u1390:
  3482   001804  0012               	return		;funcret
  3483   001806                     __end_of_Transmite:
  3484                           	callstack 0
  3485                           
  3486 ;; *************** function _ConfigUSART *****************
  3487 ;; Defined at:
  3488 ;;		line 315 in file "main.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3502 ;;      Params:         0       0       0       0       0       0       0       0       0
  3503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3505 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3506 ;;Total ram usage:        0 bytes
  3507 ;; Hardware stack levels used: 1
  3508 ;; Hardware stack levels required when called: 4
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_main
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text22
  3517   0017C0                     __ptext22:
  3518                           	callstack 0
  3519   0017C0                     _ConfigUSART:
  3520                           	callstack 26
  3521   0017C0                     
  3522                           ;main.c: 317:     TXSTA = 0B00100110;
  3523   0017C0  0E26               	movlw	38
  3524   0017C2  6EAC               	movwf	172,c	;volatile
  3525                           
  3526                           ;main.c: 321:     RCSTA = 0B10010000;
  3527   0017C4  0E90               	movlw	144
  3528   0017C6  6EAB               	movwf	171,c	;volatile
  3529                           
  3530                           ;main.c: 324:     BAUDCON = 0B00000010;
  3531   0017C8  0E02               	movlw	2
  3532   0017CA  6EB8               	movwf	184,c	;volatile
  3533                           
  3534                           ;main.c: 326:     SPBRG = 25;
  3535   0017CC  0E19               	movlw	25
  3536   0017CE  6EAF               	movwf	175,c	;volatile
  3537   0017D0                     
  3538                           ;main.c: 327:     PIE1bits.TXIE = 0;
  3539   0017D0  989D               	bcf	157,4,c	;volatile
  3540   0017D2                     
  3541                           ;main.c: 328:     IPR1bits.RCIP = 1;
  3542   0017D2  8A9F               	bsf	159,5,c	;volatile
  3543   0017D4                     
  3544                           ;main.c: 329:     PIR1bits.TXIF = 0;
  3545   0017D4  989E               	bcf	158,4,c	;volatile
  3546   0017D6                     
  3547                           ;main.c: 330:     PIR1bits.RCIF = 0;
  3548   0017D6  9A9E               	bcf	158,5,c	;volatile
  3549   0017D8                     
  3550                           ;main.c: 331:     PIE1bits.RCIE = 1;
  3551   0017D8  8A9D               	bsf	157,5,c	;volatile
  3552   0017DA                     
  3553                           ;main.c: 332:     INTCONbits.GIE_GIEH = 1;
  3554   0017DA  8EF2               	bsf	242,7,c	;volatile
  3555   0017DC                     
  3556                           ;main.c: 333:     INTCONbits.PEIE_GIEL = 1;
  3557   0017DC  8CF2               	bsf	242,6,c	;volatile
  3558                           
  3559                           ;main.c: 334:     RCREG = 0;
  3560   0017DE  0E00               	movlw	0
  3561   0017E0  6EAE               	movwf	174,c	;volatile
  3562   0017E2  0012               	return		;funcret
  3563   0017E4                     __end_of_ConfigUSART:
  3564                           	callstack 0
  3565                           
  3566 ;; *************** function _ConfigPIC *****************
  3567 ;; Defined at:
  3568 ;;		line 293 in file "main.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3582 ;;      Params:         0       0       0       0       0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3585 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3586 ;;Total ram usage:        0 bytes
  3587 ;; Hardware stack levels used: 1
  3588 ;; Hardware stack levels required when called: 4
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text23
  3597   001806                     __ptext23:
  3598                           	callstack 0
  3599   001806                     _ConfigPIC:
  3600                           	callstack 26
  3601   001806                     
  3602                           ;main.c: 294:     TRISA = 0B00111111;
  3603   001806  0E3F               	movlw	63
  3604   001808  6E92               	movwf	146,c	;volatile
  3605                           
  3606                           ;main.c: 295:     TRISB = 0x00;
  3607   00180A  0E00               	movlw	0
  3608   00180C  6E93               	movwf	147,c	;volatile
  3609                           
  3610                           ;main.c: 296:     TRISC = 0B10000000;
  3611   00180E  0E80               	movlw	128
  3612   001810  6E94               	movwf	148,c	;volatile
  3613                           
  3614                           ;main.c: 297:     TRISD = 0X00;
  3615   001812  0E00               	movlw	0
  3616   001814  6E95               	movwf	149,c	;volatile
  3617   001816                     
  3618                           ;main.c: 298:     TRISE = 0XFF;
  3619   001816  6896               	setf	150,c	;volatile
  3620   001818                     
  3621                           ;main.c: 299:     RCONbits.IPEN = 1;
  3622   001818  8ED0               	bsf	208,7,c	;volatile
  3623                           
  3624                           ;main.c: 300:     ADCON1 = 0x0F;
  3625   00181A  0E0F               	movlw	15
  3626   00181C  6EC1               	movwf	193,c	;volatile
  3627                           
  3628                           ;main.c: 301:     CMCON = 0x07;
  3629   00181E  0E07               	movlw	7
  3630   001820  6EB4               	movwf	180,c	;volatile
  3631                           
  3632                           ;main.c: 302:     PORTD = 0;
  3633   001822  0E00               	movlw	0
  3634   001824  6E83               	movwf	131,c	;volatile
  3635   001826  0012               	return		;funcret
  3636   001828                     __end_of_ConfigPIC:
  3637                           	callstack 0
  3638                           
  3639 ;; *************** function _ConfigADC *****************
  3640 ;; Defined at:
  3641 ;;		line 305 in file "main.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3658 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used: 1
  3661 ;; Hardware stack levels required when called: 4
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text24
  3670   001868                     __ptext24:
  3671                           	callstack 0
  3672   001868                     _ConfigADC:
  3673                           	callstack 26
  3674   001868                     
  3675                           ;main.c: 306:     ADCON0 = 0B00000001;
  3676   001868  0E01               	movlw	1
  3677   00186A  6EC2               	movwf	194,c	;volatile
  3678                           
  3679                           ;main.c: 307:     ADCON1 = 0B00000000;
  3680   00186C  0E00               	movlw	0
  3681   00186E  6EC1               	movwf	193,c	;volatile
  3682                           
  3683                           ;main.c: 308:     ADCON2 = 0B10100001;
  3684   001870  0EA1               	movlw	161
  3685   001872  6EC0               	movwf	192,c	;volatile
  3686   001874                     
  3687                           ;main.c: 309:     PIE1bits.ADIE = 1;
  3688   001874  8C9D               	bsf	157,6,c	;volatile
  3689   001876                     
  3690                           ;main.c: 310:     PIR1bits.ADIF = 0;
  3691   001876  9C9E               	bcf	158,6,c	;volatile
  3692   001878                     
  3693                           ;main.c: 311:     INTCONbits.GIE_GIEH = 1;
  3694   001878  8EF2               	bsf	242,7,c	;volatile
  3695   00187A                     
  3696                           ;main.c: 312:     INTCONbits.PEIE_GIEL = 1;
  3697   00187A  8CF2               	bsf	242,6,c	;volatile
  3698   00187C  0012               	return		;funcret
  3699   00187E                     __end_of_ConfigADC:
  3700                           	callstack 0
  3701                           
  3702 ;; *************** function _VectorInterrupcion *****************
  3703 ;; Defined at:
  3704 ;;		line 246 in file "main.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3720 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3721 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3722 ;;Total ram usage:        8 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 3
  3725 ;; This function calls:
  3726 ;;		_lcd_clear
  3727 ;;		i2_lcd_gotoxy
  3728 ;;		i2_lcd_putc
  3729 ;;		i2_lcd_write_char
  3730 ;; This function is called by:
  3731 ;;		Interrupt level 2
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	intcode
  3736   000008                     __pintcode:
  3737                           	callstack 0
  3738   000008                     _VectorInterrupcion:
  3739                           	callstack 18
  3740                           
  3741                           ;incstack = 0
  3742   000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3743   00000A  EDA8  F006         	call	int_func,f	;refresh shadow registers
  3744                           
  3745                           	psect	intcode_body
  3746   000D50                     __pintcode_body:
  3747                           	callstack 18
  3748   000D50                     int_func:
  3749                           	callstack 18
  3750   000D50  0006               	pop		; remove dummy address from shadow register refresh
  3751   000D52  CFE1 F00B          	movff	fsr1l,??_VectorInterrupcion
  3752   000D56  CFE2 F00C          	movff	fsr1h,??_VectorInterrupcion+1
  3753   000D5A  CFD9 F00D          	movff	fsr2l,??_VectorInterrupcion+2
  3754   000D5E  CFDA F00E          	movff	fsr2h,??_VectorInterrupcion+3
  3755   000D62  CFF6 F00F          	movff	tblptrl,??_VectorInterrupcion+4
  3756   000D66  CFF7 F010          	movff	tblptrh,??_VectorInterrupcion+5
  3757   000D6A  CFF8 F011          	movff	tblptru,??_VectorInterrupcion+6
  3758   000D6E  CFF5 F012          	movff	tablat,??_VectorInterrupcion+7
  3759   000D72                     
  3760                           ;main.c: 247:     if (PIR2bits.EEIF == 1) {
  3761   000D72  A8A1               	btfss	161,4,c	;volatile
  3762   000D74  EFBE  F006         	goto	i2u145_41
  3763   000D78  EFC0  F006         	goto	i2u145_40
  3764   000D7C                     i2u145_41:
  3765   000D7C  EFC1  F006         	goto	i2l136
  3766   000D80                     i2u145_40:
  3767   000D80                     
  3768                           ;main.c: 248:         PIR2bits.EEIF = 0;
  3769   000D80  98A1               	bcf	161,4,c	;volatile
  3770   000D82                     i2l136:
  3771                           
  3772                           ;main.c: 250:     if (PIR1bits.RCIF == 1){
  3773   000D82  AA9E               	btfss	158,5,c	;volatile
  3774   000D84  EFC6  F006         	goto	i2u146_41
  3775   000D88  EFC8  F006         	goto	i2u146_40
  3776   000D8C                     i2u146_41:
  3777   000D8C  EF1A  F007         	goto	i2l2136
  3778   000D90                     i2u146_40:
  3779   000D90                     
  3780                           ;main.c: 251:         INTCONbits.GIE_GIEH = 0;
  3781   000D90  9EF2               	bcf	242,7,c	;volatile
  3782   000D92                     
  3783                           ;main.c: 252:         if (BufferLleno == 1) {
  3784   000D92  0446               	decf	_BufferLleno^0,w,c
  3785   000D94  A4D8               	btfss	status,2,c
  3786   000D96  EFCF  F006         	goto	i2u147_41
  3787   000D9A  EFD1  F006         	goto	i2u147_40
  3788   000D9E                     i2u147_41:
  3789   000D9E  EFE8  F006         	goto	i2l2112
  3790   000DA2                     i2u147_40:
  3791   000DA2                     
  3792                           ;main.c: 253:             MensajeSobrante[BanderaRx] = RCREG;
  3793   000DA2  0EBA               	movlw	low _MensajeSobrante
  3794   000DA4  2445               	addwf	_BanderaRx^0,w,c
  3795   000DA6  6ED9               	movwf	fsr2l,c
  3796   000DA8  6ADA               	clrf	fsr2h,c
  3797   000DAA  0E00               	movlw	high _MensajeSobrante
  3798   000DAC  22DA               	addwfc	fsr2h,f,c
  3799   000DAE  CFAE FFDF          	movff	4014,indf2	;volatile
  3800   000DB2                     
  3801                           ;main.c: 254:             BanderaRx = BanderaRx + 1;
  3802   000DB2  2845               	incf	_BanderaRx^0,w,c
  3803   000DB4  6E45               	movwf	_BanderaRx^0,c
  3804   000DB6                     
  3805                           ;main.c: 255:             if (BanderaRx == 2) {
  3806   000DB6  0E02               	movlw	2
  3807   000DB8  1845               	xorwf	_BanderaRx^0,w,c
  3808   000DBA  A4D8               	btfss	status,2,c
  3809   000DBC  EFE2  F006         	goto	i2u148_41
  3810   000DC0  EFE4  F006         	goto	i2u148_40
  3811   000DC4                     i2u148_41:
  3812   000DC4  EF18  F007         	goto	i2l2132
  3813   000DC8                     i2u148_40:
  3814   000DC8                     
  3815                           ;main.c: 256:                 BanderaRx = 0;
  3816   000DC8  0E00               	movlw	0
  3817   000DCA  6E45               	movwf	_BanderaRx^0,c
  3818   000DCC  EF18  F007         	goto	i2l2132
  3819   000DD0                     i2l2112:
  3820                           
  3821                           ;main.c: 259:             MensajeRx[BanderaRx] = RCREG;
  3822   000DD0  0E48               	movlw	low _MensajeRx
  3823   000DD2  2445               	addwf	_BanderaRx^0,w,c
  3824   000DD4  6ED9               	movwf	fsr2l,c
  3825   000DD6  6ADA               	clrf	fsr2h,c
  3826   000DD8  0E00               	movlw	high _MensajeRx
  3827   000DDA  22DA               	addwfc	fsr2h,f,c
  3828   000DDC  CFAE FFDF          	movff	4014,indf2	;volatile
  3829   000DE0                     
  3830                           ;main.c: 261:             lcd_clear();
  3831   000DE0  EC3F  F00C         	call	_lcd_clear	;wreg free
  3832   000DE4                     
  3833                           ;main.c: 262:             lcd_gotoxy(1,1);
  3834   000DE4  0E01               	movlw	1
  3835   000DE6  6E04               	movwf	i2lcd_gotoxy@b^0,c
  3836   000DE8  0E01               	movlw	1
  3837   000DEA  EC73  F00A         	call	i2_lcd_gotoxy
  3838   000DEE                     
  3839                           ;main.c: 263:             lcd_putc(MensajeRx);
  3840   000DEE  0E48               	movlw	low _MensajeRx
  3841   000DF0  6E05               	movwf	i2lcd_putc@a^0,c
  3842   000DF2  0E00               	movlw	high _MensajeRx
  3843   000DF4  6E06               	movwf	(i2lcd_putc@a+1)^0,c
  3844   000DF6  EC5F  F009         	call	i2_lcd_putc	;wreg free
  3845   000DFA                     
  3846                           ;main.c: 264:             lcd_putc(" INS=");
  3847   000DFA  0E01               	movlw	low STR_1
  3848   000DFC  6E05               	movwf	i2lcd_putc@a^0,c
  3849   000DFE  0E08               	movlw	high STR_1
  3850   000E00  6E06               	movwf	(i2lcd_putc@a+1)^0,c
  3851   000E02  EC5F  F009         	call	i2_lcd_putc	;wreg free
  3852   000E06                     
  3853                           ;main.c: 265:             lcd_write_char(Instrumento);
  3854   000E06  5043               	movf	_Instrumento^0,w,c
  3855   000E08  ECB1  F00B         	call	i2_lcd_write_char
  3856   000E0C                     
  3857                           ;main.c: 266:             num++;
  3858   000E0C  2A42               	incf	_num^0,f,c
  3859   000E0E                     
  3860                           ;main.c: 268:             BanderaRx++;
  3861   000E0E  2A45               	incf	_BanderaRx^0,f,c
  3862   000E10                     
  3863                           ;main.c: 269:             if (BanderaRx == Num_Caracteres) {
  3864   000E10  5044               	movf	_Num_Caracteres^0,w,c
  3865   000E12  1845               	xorwf	_BanderaRx^0,w,c
  3866   000E14  A4D8               	btfss	status,2,c
  3867   000E16  EF0F  F007         	goto	i2u149_41
  3868   000E1A  EF11  F007         	goto	i2u149_40
  3869   000E1E                     i2u149_41:
  3870   000E1E  EF18  F007         	goto	i2l2132
  3871   000E22                     i2u149_40:
  3872   000E22                     
  3873                           ;main.c: 270:                 BanderaRx = 0;
  3874   000E22  0E00               	movlw	0
  3875   000E24  6E45               	movwf	_BanderaRx^0,c
  3876                           
  3877                           ;main.c: 271:                 FinRx = 1;
  3878   000E26  0E01               	movlw	1
  3879   000E28  0100               	movlb	0	; () banked
  3880   000E2A  6F94               	movwf	_FinRx& (0+255),b
  3881                           
  3882                           ;main.c: 272:                 BufferLleno = 1;
  3883   000E2C  0E01               	movlw	1
  3884   000E2E  6E46               	movwf	_BufferLleno^0,c
  3885   000E30                     i2l2132:
  3886                           
  3887                           ;main.c: 275:         PIR1bits.RCIF = 0;
  3888   000E30  9A9E               	bcf	158,5,c	;volatile
  3889   000E32                     
  3890                           ;main.c: 276:         INTCONbits.GIE_GIEH = 1;
  3891   000E32  8EF2               	bsf	242,7,c	;volatile
  3892   000E34                     i2l2136:
  3893                           
  3894                           ;main.c: 278:     if (PIR1bits.ADIF == 1){
  3895   000E34  AC9E               	btfss	158,6,c	;volatile
  3896   000E36  EF1F  F007         	goto	i2u150_41
  3897   000E3A  EF21  F007         	goto	i2u150_40
  3898   000E3E                     i2u150_41:
  3899   000E3E  EF37  F007         	goto	i2l143
  3900   000E42                     i2u150_40:
  3901   000E42                     
  3902                           ;main.c: 279:         INTCONbits.GIE_GIEH = 0;
  3903   000E42  9EF2               	bcf	242,7,c	;volatile
  3904                           
  3905                           ;main.c: 281:         ByteSup = ADRESH;
  3906   000E44  CFC4 F093          	movff	4036,_ByteSup	;volatile
  3907                           
  3908                           ;main.c: 282:         ByteInf = ADRESL;
  3909   000E48  CFC3 F092          	movff	4035,_ByteInf	;volatile
  3910                           
  3911                           ;main.c: 283:         ValBIN = ADRESH;
  3912   000E4C  CFC4 F03F          	movff	4036,_ValBIN	;volatile
  3913   000E50  6A40               	clrf	(_ValBIN+1)^0,c
  3914   000E52                     
  3915                           ;main.c: 284:         ValBIN = ValBIN << 8;
  3916   000E52  503F               	movf	_ValBIN^0,w,c
  3917   000E54  6E40               	movwf	(_ValBIN+1)^0,c
  3918   000E56  6A3F               	clrf	_ValBIN^0,c
  3919   000E58                     
  3920                           ;main.c: 285:         ValBIN = ValBIN + ADRESL;
  3921   000E58  50C3               	movf	195,w,c	;volatile
  3922   000E5A  243F               	addwf	_ValBIN^0,w,c
  3923   000E5C  6E3F               	movwf	_ValBIN^0,c
  3924   000E5E  0E00               	movlw	0
  3925   000E60  2040               	addwfc	(_ValBIN+1)^0,w,c
  3926   000E62  6E40               	movwf	(_ValBIN+1)^0,c
  3927   000E64                     
  3928                           ;main.c: 286:         BanderaADC = 1;
  3929   000E64  0E01               	movlw	1
  3930   000E66  0100               	movlb	0	; () banked
  3931   000E68  6F91               	movwf	_BanderaADC& (0+255),b
  3932   000E6A                     
  3933                           ; BSR set to: 0
  3934                           ;main.c: 288:         INTCONbits.GIE_GIEH = 1;
  3935   000E6A  8EF2               	bsf	242,7,c	;volatile
  3936   000E6C                     
  3937                           ; BSR set to: 0
  3938                           ;main.c: 289:         PIR1bits.ADIF = 0;
  3939   000E6C  9C9E               	bcf	158,6,c	;volatile
  3940   000E6E                     i2l143:
  3941   000E6E  C012  FFF5         	movff	??_VectorInterrupcion+7,tablat
  3942   000E72  C011  FFF8         	movff	??_VectorInterrupcion+6,tblptru
  3943   000E76  C010  FFF7         	movff	??_VectorInterrupcion+5,tblptrh
  3944   000E7A  C00F  FFF6         	movff	??_VectorInterrupcion+4,tblptrl
  3945   000E7E  C00E  FFDA         	movff	??_VectorInterrupcion+3,fsr2h
  3946   000E82  C00D  FFD9         	movff	??_VectorInterrupcion+2,fsr2l
  3947   000E86  C00C  FFE2         	movff	??_VectorInterrupcion+1,fsr1h
  3948   000E8A  C00B  FFE1         	movff	??_VectorInterrupcion,fsr1l
  3949   000E8E  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3950   000E90  0011               	retfie		f
  3951   000E92                     __end_of_VectorInterrupcion:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function i2_lcd_putc *****************
  3955 ;; Defined at:
  3956 ;;		line 232 in file "main.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  a               2    4[COMRAM] PTR unsigned char 
  3959 ;;		 -> Tx_USART@palabra(5), STR_1(6), MensajeRx(4), 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  i               2    8[COMRAM] int 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3971 ;;      Params:         2       0       0       0       0       0       0       0       0
  3972 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3973 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3974 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3975 ;;Total ram usage:        6 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 2
  3978 ;; This function calls:
  3979 ;;		i2_lcd_write_char
  3980 ;; This function is called by:
  3981 ;;		_VectorInterrupcion
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text26
  3986   0012BE                     __ptext26:
  3987                           	callstack 0
  3988   0012BE                     i2_lcd_putc:
  3989                           	callstack 18
  3990   0012BE                     
  3991                           ;main.c: 233:     int i;;main.c: 234:     for (i = 0; a[i] != '\0'; i++)
  3992   0012BE  0E00               	movlw	0
  3993   0012C0  6E0A               	movwf	(i2lcd_putc@i+1)^0,c
  3994   0012C2  0E00               	movlw	0
  3995   0012C4  6E09               	movwf	i2lcd_putc@i^0,c
  3996   0012C6  EF7F  F009         	goto	i2l2090
  3997   0012CA                     i2l2086:
  3998                           
  3999                           ;main.c: 235:         lcd_write_char(a[i]);
  4000   0012CA  5009               	movf	i2lcd_putc@i^0,w,c
  4001   0012CC  2405               	addwf	i2lcd_putc@a^0,w,c
  4002   0012CE  6E07               	movwf	??i2_lcd_putc^0,c
  4003   0012D0  500A               	movf	(i2lcd_putc@i+1)^0,w,c
  4004   0012D2  2006               	addwfc	(i2lcd_putc@a+1)^0,w,c
  4005   0012D4  6E08               	movwf	(??i2_lcd_putc+1)^0,c
  4006   0012D6  C007  FFF6         	movff	??i2_lcd_putc,tblptrl
  4007   0012DA  C008  FFF7         	movff	??i2_lcd_putc+1,tblptrh
  4008   0012DE  6AF8               	clrf	tblptru,c
  4009   0012E0  0E07               	movlw	(high __ramtop+-1)
  4010   0012E2  64F7               	cpfsgt	tblptrh,c
  4011   0012E4  D003               	bra	i2u142_47
  4012   0012E6  0008               	tblrd		*
  4013   0012E8  50F5               	movf	tablat,w,c
  4014   0012EA  D005               	bra	i2u142_40
  4015   0012EC                     i2u142_47:
  4016   0012EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4017   0012F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4018   0012F4  50E7               	movf	indf1,w,c
  4019   0012F6                     i2u142_40:
  4020   0012F6  ECB1  F00B         	call	i2_lcd_write_char
  4021   0012FA  4A09               	infsnz	i2lcd_putc@i^0,f,c
  4022   0012FC  2A0A               	incf	(i2lcd_putc@i+1)^0,f,c
  4023   0012FE                     i2l2090:
  4024   0012FE  5009               	movf	i2lcd_putc@i^0,w,c
  4025   001300  2405               	addwf	i2lcd_putc@a^0,w,c
  4026   001302  6E07               	movwf	??i2_lcd_putc^0,c
  4027   001304  500A               	movf	(i2lcd_putc@i+1)^0,w,c
  4028   001306  2006               	addwfc	(i2lcd_putc@a+1)^0,w,c
  4029   001308  6E08               	movwf	(??i2_lcd_putc+1)^0,c
  4030   00130A  C007  FFF6         	movff	??i2_lcd_putc,tblptrl
  4031   00130E  C008  FFF7         	movff	??i2_lcd_putc+1,tblptrh
  4032   001312  6AF8               	clrf	tblptru,c
  4033   001314  0E07               	movlw	(high __ramtop+-1)
  4034   001316  64F7               	cpfsgt	tblptrh,c
  4035   001318  D003               	bra	i2u143_47
  4036   00131A  0008               	tblrd		*
  4037   00131C  50F5               	movf	tablat,w,c
  4038   00131E  D005               	bra	i2u143_40
  4039   001320                     i2u143_47:
  4040   001320  CFF6 FFE1          	movff	tblptrl,fsr1l
  4041   001324  CFF7 FFE2          	movff	tblptrh,fsr1h
  4042   001328  50E7               	movf	indf1,w,c
  4043   00132A                     i2u143_40:
  4044   00132A  0900               	iorlw	0
  4045   00132C  A4D8               	btfss	status,2,c
  4046   00132E  EF9B  F009         	goto	i2u144_41
  4047   001332  EF9D  F009         	goto	i2u144_40
  4048   001336                     i2u144_41:
  4049   001336  EF65  F009         	goto	i2l2086
  4050   00133A                     i2u144_40:
  4051   00133A  0012               	return		;funcret
  4052   00133C                     __end_ofi2_lcd_putc:
  4053                           	callstack 0
  4054                           
  4055 ;; *************** function i2_lcd_write_char *****************
  4056 ;; Defined at:
  4057 ;;		line 218 in file "main.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  a               1    wreg     unsigned char 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  a               1    3[COMRAM] unsigned char 
  4062 ;;  y               1    2[COMRAM] unsigned char 
  4063 ;;  temp            1    1[COMRAM] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4073 ;;      Params:         0       0       0       0       0       0       0       0       0
  4074 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4076 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4077 ;;Total ram usage:        3 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; Hardware stack levels required when called: 1
  4080 ;; This function calls:
  4081 ;;		i2_Lcd_Port
  4082 ;; This function is called by:
  4083 ;;		_VectorInterrupcion
  4084 ;;		i2_lcd_putc
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text27
  4089   001762                     __ptext27:
  4090                           	callstack 0
  4091   001762                     i2_lcd_write_char:
  4092                           	callstack 19
  4093                           
  4094                           ;incstack = 0
  4095                           ;i2lcd_write_char@a stored from wreg
  4096   001762  6E04               	movwf	i2lcd_write_char@a^0,c
  4097   001764                     
  4098                           ;main.c: 219:     char temp, y;;main.c: 220:     temp = a & 0x0F;
  4099   001764  5004               	movf	i2lcd_write_char@a^0,w,c
  4100   001766  0B0F               	andlw	15
  4101   001768  6E02               	movwf	i2lcd_write_char@temp^0,c
  4102                           
  4103                           ;main.c: 221:     y = a & 0xF0;
  4104   00176A  5004               	movf	i2lcd_write_char@a^0,w,c
  4105   00176C  0BF0               	andlw	240
  4106   00176E  6E03               	movwf	i2lcd_write_char@y^0,c
  4107   001770                     
  4108                           ;main.c: 222:     LATDbits.LATD2 = 1;
  4109   001770  848C               	bsf	140,2,c	;volatile
  4110   001772                     
  4111                           ;main.c: 223:     Lcd_Port(y >> 4);
  4112   001772  3803               	swapf	i2lcd_write_char@y^0,w,c
  4113   001774  0B0F               	andlw	15
  4114   001776  ECD4  F00A         	call	i2_Lcd_Port
  4115   00177A                     
  4116                           ;main.c: 224:     LATDbits.LATD3 = 1;
  4117   00177A  868C               	bsf	140,3,c	;volatile
  4118   00177C                     
  4119                           ;main.c: 225:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4120   00177C  0E0D               	movlw	13
  4121   00177E                     i2u240_47:
  4122   00177E  2EE8               	decfsz	wreg,f,c
  4123   001780  D7FE               	bra	i2u240_47
  4124   001782  F000               	nop	
  4125   001784                     
  4126                           ;main.c: 226:     LATDbits.LATD3 = 0;
  4127   001784  968C               	bcf	140,3,c	;volatile
  4128   001786                     
  4129                           ;main.c: 227:     Lcd_Port(temp);
  4130   001786  5002               	movf	i2lcd_write_char@temp^0,w,c
  4131   001788  ECD4  F00A         	call	i2_Lcd_Port
  4132   00178C                     
  4133                           ;main.c: 228:     LATDbits.LATD3 = 1;
  4134   00178C  868C               	bsf	140,3,c	;volatile
  4135   00178E                     
  4136                           ;main.c: 229:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4137   00178E  0E0D               	movlw	13
  4138   001790                     i2u241_47:
  4139   001790  2EE8               	decfsz	wreg,f,c
  4140   001792  D7FE               	bra	i2u241_47
  4141   001794  F000               	nop	
  4142   001796                     
  4143                           ;main.c: 230:     LATDbits.LATD3 = 0;
  4144   001796  968C               	bcf	140,3,c	;volatile
  4145   001798  0012               	return		;funcret
  4146   00179A                     __end_ofi2_lcd_write_char:
  4147                           	callstack 0
  4148                           
  4149 ;; *************** function i2_lcd_gotoxy *****************
  4150 ;; Defined at:
  4151 ;;		line 185 in file "main.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  a               1    wreg     unsigned char 
  4154 ;;  b               1    3[COMRAM] unsigned char 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  a               1    4[COMRAM] unsigned char 
  4157 ;;  temp            1    7[COMRAM] unsigned char 
  4158 ;;  y               1    6[COMRAM] unsigned char 
  4159 ;;  z               1    5[COMRAM] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4169 ;;      Params:         1       0       0       0       0       0       0       0       0
  4170 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4172 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4173 ;;Total ram usage:        5 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 2
  4176 ;; This function calls:
  4177 ;;		i2_Lcd_Cmd
  4178 ;; This function is called by:
  4179 ;;		_VectorInterrupcion
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text28
  4184   0014E6                     __ptext28:
  4185                           	callstack 0
  4186   0014E6                     i2_lcd_gotoxy:
  4187                           	callstack 18
  4188                           
  4189                           ;incstack = 0
  4190                           ;i2lcd_gotoxy@a stored from wreg
  4191   0014E6  6E05               	movwf	i2lcd_gotoxy@a^0,c
  4192   0014E8                     
  4193                           ;main.c: 186:     char temp, z, y;;main.c: 187:     if (a == 1) {
  4194   0014E8  0405               	decf	i2lcd_gotoxy@a^0,w,c
  4195   0014EA  A4D8               	btfss	status,2,c
  4196   0014EC  EF7A  F00A         	goto	i2u140_41
  4197   0014F0  EF7C  F00A         	goto	i2u140_40
  4198   0014F4                     i2u140_41:
  4199   0014F4  EF8D  F00A         	goto	i2l2076
  4200   0014F8                     i2u140_40:
  4201   0014F8                     
  4202                           ;main.c: 188:         temp = 0x80 + b - 1;
  4203   0014F8  5004               	movf	i2lcd_gotoxy@b^0,w,c
  4204   0014FA  0F7F               	addlw	127
  4205   0014FC  6E08               	movwf	i2lcd_gotoxy@temp^0,c
  4206                           
  4207                           ;main.c: 189:         z = temp >> 4;
  4208   0014FE  3808               	swapf	i2lcd_gotoxy@temp^0,w,c
  4209   001500  0B0F               	andlw	15
  4210   001502  6E06               	movwf	i2lcd_gotoxy@z^0,c
  4211                           
  4212                           ;main.c: 190:         y = temp & 0x0F;
  4213   001504  5008               	movf	i2lcd_gotoxy@temp^0,w,c
  4214   001506  0B0F               	andlw	15
  4215   001508  6E07               	movwf	i2lcd_gotoxy@y^0,c
  4216   00150A                     
  4217                           ;main.c: 191:         Lcd_Cmd(z);
  4218   00150A  5006               	movf	i2lcd_gotoxy@z^0,w,c
  4219   00150C  EC24  F00C         	call	i2_Lcd_Cmd
  4220   001510                     
  4221                           ;main.c: 192:         Lcd_Cmd(y);
  4222   001510  5007               	movf	i2lcd_gotoxy@y^0,w,c
  4223   001512  EC24  F00C         	call	i2_Lcd_Cmd
  4224                           
  4225                           ;main.c: 193:     } else if (a == 2) {
  4226   001516  EFA5  F00A         	goto	i2l113
  4227   00151A                     i2l2076:
  4228   00151A  0E02               	movlw	2
  4229   00151C  1805               	xorwf	i2lcd_gotoxy@a^0,w,c
  4230   00151E  A4D8               	btfss	status,2,c
  4231   001520  EF94  F00A         	goto	i2u141_41
  4232   001524  EF96  F00A         	goto	i2u141_40
  4233   001528                     i2u141_41:
  4234   001528  EFA5  F00A         	goto	i2l113
  4235   00152C                     i2u141_40:
  4236   00152C                     
  4237                           ;main.c: 194:         temp = 0xC0 + b - 1;
  4238   00152C  5004               	movf	i2lcd_gotoxy@b^0,w,c
  4239   00152E  0FBF               	addlw	191
  4240   001530  6E08               	movwf	i2lcd_gotoxy@temp^0,c
  4241                           
  4242                           ;main.c: 195:         z = temp >> 4;
  4243   001532  3808               	swapf	i2lcd_gotoxy@temp^0,w,c
  4244   001534  0B0F               	andlw	15
  4245   001536  6E06               	movwf	i2lcd_gotoxy@z^0,c
  4246                           
  4247                           ;main.c: 196:         y = temp & 0x0F;
  4248   001538  5008               	movf	i2lcd_gotoxy@temp^0,w,c
  4249   00153A  0B0F               	andlw	15
  4250   00153C  6E07               	movwf	i2lcd_gotoxy@y^0,c
  4251   00153E                     
  4252                           ;main.c: 197:         Lcd_Cmd(z);
  4253   00153E  5006               	movf	i2lcd_gotoxy@z^0,w,c
  4254   001540  EC24  F00C         	call	i2_Lcd_Cmd
  4255   001544                     
  4256                           ;main.c: 198:         Lcd_Cmd(y);
  4257   001544  5007               	movf	i2lcd_gotoxy@y^0,w,c
  4258   001546  EC24  F00C         	call	i2_Lcd_Cmd
  4259   00154A                     i2l113:
  4260   00154A  0012               	return		;funcret
  4261   00154C                     __end_ofi2_lcd_gotoxy:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _lcd_clear *****************
  4265 ;; Defined at:
  4266 ;;		line 181 in file "main.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4280 ;;      Params:         0       0       0       0       0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4283 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 2
  4287 ;; This function calls:
  4288 ;;		i2_Lcd_Cmd
  4289 ;; This function is called by:
  4290 ;;		_VectorInterrupcion
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text29
  4295   00187E                     __ptext29:
  4296                           	callstack 0
  4297   00187E                     _lcd_clear:
  4298                           	callstack 18
  4299   00187E                     
  4300                           ;main.c: 182:     Lcd_Cmd(0);
  4301   00187E  0E00               	movlw	0
  4302   001880  EC24  F00C         	call	i2_Lcd_Cmd
  4303                           
  4304                           ;main.c: 183:     Lcd_Cmd(1);
  4305   001884  0E01               	movlw	1
  4306   001886  EC24  F00C         	call	i2_Lcd_Cmd
  4307   00188A  0012               	return		;funcret
  4308   00188C                     __end_of_lcd_clear:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function i2_Lcd_Cmd *****************
  4312 ;; Defined at:
  4313 ;;		line 174 in file "main.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  a               1    wreg     unsigned char 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  a               1    2[COMRAM] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0
  4328 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4329 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4330 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4331 ;;Total ram usage:        2 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 1
  4334 ;; This function calls:
  4335 ;;		i2_Lcd_Port
  4336 ;; This function is called by:
  4337 ;;		_lcd_clear
  4338 ;;		i2_lcd_gotoxy
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text30
  4343   001848                     __ptext30:
  4344                           	callstack 0
  4345   001848                     i2_Lcd_Cmd:
  4346                           	callstack 18
  4347                           
  4348                           ;incstack = 0
  4349                           ;i2Lcd_Cmd@a stored from wreg
  4350   001848  6E03               	movwf	i2Lcd_Cmd@a^0,c
  4351   00184A                     
  4352                           ;main.c: 175:     LATDbits.LATD2 = 0;
  4353   00184A  948C               	bcf	140,2,c	;volatile
  4354   00184C                     
  4355                           ;main.c: 176:     Lcd_Port(a);
  4356   00184C  5003               	movf	i2Lcd_Cmd@a^0,w,c
  4357   00184E  ECD4  F00A         	call	i2_Lcd_Port
  4358   001852                     
  4359                           ;main.c: 177:     LATDbits.LATD3 = 1;
  4360   001852  868C               	bsf	140,3,c	;volatile
  4361   001854                     
  4362                           ;main.c: 178:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4363   001854  0E06               	movlw	6
  4364   001856  6E02               	movwf	??i2_Lcd_Cmd^0,c
  4365   001858  0E30               	movlw	48
  4366   00185A                     i2u242_47:
  4367   00185A  2EE8               	decfsz	wreg,f,c
  4368   00185C  D7FE               	bra	i2u242_47
  4369   00185E  2E02               	decfsz	??i2_Lcd_Cmd^0,f,c
  4370   001860  D7FC               	bra	i2u242_47
  4371   001862  D000               	nop2	
  4372   001864                     
  4373                           ;main.c: 179:     LATDbits.LATD3 = 0;
  4374   001864  968C               	bcf	140,3,c	;volatile
  4375   001866  0012               	return		;funcret
  4376   001868                     __end_ofi2_Lcd_Cmd:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function i2_Lcd_Port *****************
  4380 ;; Defined at:
  4381 ;;		line 153 in file "main.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  a               1    wreg     unsigned char 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  a               1    0[COMRAM] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      void 
  4388 ;; Registers used:
  4389 ;;		wreg
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4395 ;;      Params:         0       0       0       0       0       0       0       0       0
  4396 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4398 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4399 ;;Total ram usage:        1 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		i2_Lcd_Cmd
  4405 ;;		i2_lcd_write_char
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text31
  4410   0015A8                     __ptext31:
  4411                           	callstack 0
  4412   0015A8                     i2_Lcd_Port:
  4413                           	callstack 19
  4414                           
  4415                           ;incstack = 0
  4416                           ;i2Lcd_Port@a stored from wreg
  4417   0015A8  6E01               	movwf	i2Lcd_Port@a^0,c
  4418   0015AA                     
  4419                           ;main.c: 154:     if (a & 1)
  4420   0015AA  A001               	btfss	i2Lcd_Port@a^0,0,c
  4421   0015AC  EFDA  F00A         	goto	i2u129_41
  4422   0015B0  EFDC  F00A         	goto	i2u129_40
  4423   0015B4                     i2u129_41:
  4424   0015B4  EFDF  F00A         	goto	i2l93
  4425   0015B8                     i2u129_40:
  4426   0015B8                     
  4427                           ;main.c: 155:         LATDbits.LATD4 = 1;
  4428   0015B8  888C               	bsf	140,4,c	;volatile
  4429   0015BA  EFE0  F00A         	goto	i2l1902
  4430   0015BE                     i2l93:
  4431                           
  4432                           ;main.c: 157:         LATDbits.LATD4 = 0;
  4433   0015BE  988C               	bcf	140,4,c	;volatile
  4434   0015C0                     i2l1902:
  4435                           
  4436                           ;main.c: 159:     if (a & 2)
  4437   0015C0  A201               	btfss	i2Lcd_Port@a^0,1,c
  4438   0015C2  EFE5  F00A         	goto	i2u130_41
  4439   0015C6  EFE7  F00A         	goto	i2u130_40
  4440   0015CA                     i2u130_41:
  4441   0015CA  EFEA  F00A         	goto	i2l95
  4442   0015CE                     i2u130_40:
  4443   0015CE                     
  4444                           ;main.c: 160:         LATDbits.LATD5 = 1;
  4445   0015CE  8A8C               	bsf	140,5,c	;volatile
  4446   0015D0  EFEB  F00A         	goto	i2l1906
  4447   0015D4                     i2l95:
  4448                           
  4449                           ;main.c: 162:         LATDbits.LATD5 = 0;
  4450   0015D4  9A8C               	bcf	140,5,c	;volatile
  4451   0015D6                     i2l1906:
  4452                           
  4453                           ;main.c: 164:     if (a & 4)
  4454   0015D6  A401               	btfss	i2Lcd_Port@a^0,2,c
  4455   0015D8  EFF0  F00A         	goto	i2u131_41
  4456   0015DC  EFF2  F00A         	goto	i2u131_40
  4457   0015E0                     i2u131_41:
  4458   0015E0  EFF5  F00A         	goto	i2l97
  4459   0015E4                     i2u131_40:
  4460   0015E4                     
  4461                           ;main.c: 165:         LATDbits.LATD6 = 1;
  4462   0015E4  8C8C               	bsf	140,6,c	;volatile
  4463   0015E6  EFF6  F00A         	goto	i2l1910
  4464   0015EA                     i2l97:
  4465                           
  4466                           ;main.c: 167:         LATDbits.LATD6 = 0;
  4467   0015EA  9C8C               	bcf	140,6,c	;volatile
  4468   0015EC                     i2l1910:
  4469                           
  4470                           ;main.c: 169:     if (a & 8)
  4471   0015EC  A601               	btfss	i2Lcd_Port@a^0,3,c
  4472   0015EE  EFFB  F00A         	goto	i2u132_41
  4473   0015F2  EFFD  F00A         	goto	i2u132_40
  4474   0015F6                     i2u132_41:
  4475   0015F6  EF00  F00B         	goto	i2l99
  4476   0015FA                     i2u132_40:
  4477   0015FA                     
  4478                           ;main.c: 170:         LATDbits.LATD7 = 1;
  4479   0015FA  8E8C               	bsf	140,7,c	;volatile
  4480   0015FC  EF01  F00B         	goto	i2l101
  4481   001600                     i2l99:
  4482                           
  4483                           ;main.c: 172:         LATDbits.LATD7 = 0;
  4484   001600  9E8C               	bcf	140,7,c	;volatile
  4485   001602                     i2l101:
  4486   001602  0012               	return		;funcret
  4487   001604                     __end_ofi2_Lcd_Port:
  4488                           	callstack 0
  4489                           
  4490                           	psect	rparam
  4491   000000                     
  4492                           	psect	temp
  4493   00004C                     btemp:
  4494                           	callstack 0
  4495   00004C                     	ds	1
  4496   000000                     int$flags	set	btemp
  4497   000000                     wtemp8	set	btemp+1
  4498   000000                     ttemp5	set	btemp+1
  4499   000000                     ttemp6	set	btemp+4
  4500   000000                     ttemp7	set	btemp+8
  4501                           
  4502                           	psect	idloc
  4503                           
  4504                           ;Config register IDLOC0 @ 0x200000
  4505                           ;	unspecified, using default values
  4506   200000                     	org	2097152
  4507   200000  FF                 	db	255
  4508                           
  4509                           ;Config register IDLOC1 @ 0x200001
  4510                           ;	unspecified, using default values
  4511   200001                     	org	2097153
  4512   200001  FF                 	db	255
  4513                           
  4514                           ;Config register IDLOC2 @ 0x200002
  4515                           ;	unspecified, using default values
  4516   200002                     	org	2097154
  4517   200002  FF                 	db	255
  4518                           
  4519                           ;Config register IDLOC3 @ 0x200003
  4520                           ;	unspecified, using default values
  4521   200003                     	org	2097155
  4522   200003  FF                 	db	255
  4523                           
  4524                           ;Config register IDLOC4 @ 0x200004
  4525                           ;	unspecified, using default values
  4526   200004                     	org	2097156
  4527   200004  FF                 	db	255
  4528                           
  4529                           ;Config register IDLOC5 @ 0x200005
  4530                           ;	unspecified, using default values
  4531   200005                     	org	2097157
  4532   200005  FF                 	db	255
  4533                           
  4534                           ;Config register IDLOC6 @ 0x200006
  4535                           ;	unspecified, using default values
  4536   200006                     	org	2097158
  4537   200006  FF                 	db	255
  4538                           
  4539                           ;Config register IDLOC7 @ 0x200007
  4540                           ;	unspecified, using default values
  4541   200007                     	org	2097159
  4542   200007  FF                 	db	255
  4543                           
  4544                           	psect	config
  4545                           
  4546                           ;Config register CONFIG1L @ 0x300000
  4547                           ;	PLL Prescaler Selection bits
  4548                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4549                           ;	System Clock Postscaler Selection bits
  4550                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4551                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4552                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4553   300000                     	org	3145728
  4554   300000  00                 	db	0
  4555                           
  4556                           ;Config register CONFIG1H @ 0x300001
  4557                           ;	Oscillator Selection bits
  4558                           ;	FOSC = XT_XT, XT oscillator (XT)
  4559                           ;	Fail-Safe Clock Monitor Enable bit
  4560                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4561                           ;	Internal/External Oscillator Switchover bit
  4562                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4563   300001                     	org	3145729
  4564   300001  00                 	db	0
  4565                           
  4566                           ;Config register CONFIG2L @ 0x300002
  4567                           ;	Power-up Timer Enable bit
  4568                           ;	PWRT = ON, PWRT enabled
  4569                           ;	Brown-out Reset Enable bits
  4570                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4571                           ;	Brown-out Reset Voltage bits
  4572                           ;	BORV = 3, Minimum setting 2.05V
  4573                           ;	USB Voltage Regulator Enable bit
  4574                           ;	VREGEN = OFF, USB voltage regulator disabled
  4575   300002                     	org	3145730
  4576   300002  1E                 	db	30
  4577                           
  4578                           ;Config register CONFIG2H @ 0x300003
  4579                           ;	Watchdog Timer Enable bit
  4580                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4581                           ;	Watchdog Timer Postscale Select bits
  4582                           ;	WDTPS = 32768, 1:32768
  4583   300003                     	org	3145731
  4584   300003  1E                 	db	30
  4585                           
  4586                           ; Padding undefined space
  4587   300004                     	org	3145732
  4588   300004  FF                 	db	255
  4589                           
  4590                           ;Config register CONFIG3H @ 0x300005
  4591                           ;	CCP2 MUX bit
  4592                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4593                           ;	PORTB A/D Enable bit
  4594                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4595                           ;	Low-Power Timer 1 Oscillator Enable bit
  4596                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4597                           ;	MCLR Pin Enable bit
  4598                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4599   300005                     	org	3145733
  4600   300005  83                 	db	131
  4601                           
  4602                           ;Config register CONFIG4L @ 0x300006
  4603                           ;	Stack Full/Underflow Reset Enable bit
  4604                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4605                           ;	Single-Supply ICSP Enable bit
  4606                           ;	LVP = OFF, Single-Supply ICSP disabled
  4607                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4608                           ;	ICPRT = OFF, ICPORT disabled
  4609                           ;	Extended Instruction Set Enable bit
  4610                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4611                           ;	Background Debugger Enable bit
  4612                           ;	DEBUG = 0x1, unprogrammed default
  4613   300006                     	org	3145734
  4614   300006  81                 	db	129
  4615                           
  4616                           ; Padding undefined space
  4617   300007                     	org	3145735
  4618   300007  FF                 	db	255
  4619                           
  4620                           ;Config register CONFIG5L @ 0x300008
  4621                           ;	Code Protection bit
  4622                           ;	CP0 = ON, Block 0 (000800-001FFFh) is code-protected
  4623                           ;	Code Protection bit
  4624                           ;	CP1 = ON, Block 1 (002000-003FFFh) is code-protected
  4625                           ;	Code Protection bit
  4626                           ;	CP2 = ON, Block 2 (004000-005FFFh) is code-protected
  4627                           ;	Code Protection bit
  4628                           ;	CP3 = ON, Block 3 (006000-007FFFh) is code-protected
  4629   300008                     	org	3145736
  4630   300008  00                 	db	0
  4631                           
  4632                           ;Config register CONFIG5H @ 0x300009
  4633                           ;	Boot Block Code Protection bit
  4634                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4635                           ;	Data EEPROM Code Protection bit
  4636                           ;	CPD = OFF, Data EEPROM is not code-protected
  4637   300009                     	org	3145737
  4638   300009  C0                 	db	192
  4639                           
  4640                           ;Config register CONFIG6L @ 0x30000A
  4641                           ;	Write Protection bit
  4642                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4643                           ;	Write Protection bit
  4644                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4645                           ;	Write Protection bit
  4646                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4647                           ;	Write Protection bit
  4648                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4649   30000A                     	org	3145738
  4650   30000A  0F                 	db	15
  4651                           
  4652                           ;Config register CONFIG6H @ 0x30000B
  4653                           ;	Configuration Register Write Protection bit
  4654                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4655                           ;	Boot Block Write Protection bit
  4656                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4657                           ;	Data EEPROM Write Protection bit
  4658                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4659   30000B                     	org	3145739
  4660   30000B  E0                 	db	224
  4661                           
  4662                           ;Config register CONFIG7L @ 0x30000C
  4663                           ;	Table Read Protection bit
  4664                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4665                           ;	Table Read Protection bit
  4666                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4667                           ;	Table Read Protection bit
  4668                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4669                           ;	Table Read Protection bit
  4670                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4671   30000C                     	org	3145740
  4672   30000C  0F                 	db	15
  4673                           
  4674                           ;Config register CONFIG7H @ 0x30000D
  4675                           ;	Boot Block Table Read Protection bit
  4676                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4677   30000D                     	org	3145741
  4678   30000D  40                 	db	64
  4679                           tosu	equ	0xFFF
  4680                           tosh	equ	0xFFE
  4681                           tosl	equ	0xFFD
  4682                           stkptr	equ	0xFFC
  4683                           pclatu	equ	0xFFB
  4684                           pclath	equ	0xFFA
  4685                           pcl	equ	0xFF9
  4686                           tblptru	equ	0xFF8
  4687                           tblptrh	equ	0xFF7
  4688                           tblptrl	equ	0xFF6
  4689                           tablat	equ	0xFF5
  4690                           prodh	equ	0xFF4
  4691                           prodl	equ	0xFF3
  4692                           indf0	equ	0xFEF
  4693                           postinc0	equ	0xFEE
  4694                           postdec0	equ	0xFED
  4695                           preinc0	equ	0xFEC
  4696                           plusw0	equ	0xFEB
  4697                           fsr0h	equ	0xFEA
  4698                           fsr0l	equ	0xFE9
  4699                           wreg	equ	0xFE8
  4700                           indf1	equ	0xFE7
  4701                           postinc1	equ	0xFE6
  4702                           postdec1	equ	0xFE5
  4703                           preinc1	equ	0xFE4
  4704                           plusw1	equ	0xFE3
  4705                           fsr1h	equ	0xFE2
  4706                           fsr1l	equ	0xFE1
  4707                           bsr	equ	0xFE0
  4708                           indf2	equ	0xFDF
  4709                           postinc2	equ	0xFDE
  4710                           postdec2	equ	0xFDD
  4711                           preinc2	equ	0xFDC
  4712                           plusw2	equ	0xFDB
  4713                           fsr2h	equ	0xFDA
  4714                           fsr2l	equ	0xFD9
  4715                           status	equ	0xFD8

Data Sizes:
    Strings     10
    Constant    0
    Data        13
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      75
    BANK0           160     49      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1141$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> Tx_USART@palabra(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1082$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1082$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 6
		 -> Tx_USART@palabra(BANK0[5]), STR_1(CODE[6]), MensajeRx(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _lcd_init->_Lcd_Cmd
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_gotoxy->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _VectorInterrupcion in COMRAM

    _VectorInterrupcion->i2_lcd_putc
    i2_lcd_putc->i2_lcd_write_char
    i2_lcd_write_char->i2_Lcd_Port
    i2_lcd_gotoxy->i2_Lcd_Cmd
    _lcd_clear->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Tx_USART
    _Tx_USART->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _VectorInterrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _VectorInterrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _VectorInterrupcion in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _VectorInterrupcion in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _VectorInterrupcion in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _VectorInterrupcion in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _VectorInterrupcion in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _VectorInterrupcion in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9874
                                             47 BANK0      2     2      0
                          _ConfigADC
                          _ConfigPIC
                        _ConfigUSART
                           _Tx_USART
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                             21 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Tx_USART                                             5     5      0    9676
                                             42 BANK0      5     5      0
                          _Transmite
                         _lcd_gotoxy
                           _lcd_putc
                     _lcd_write_char
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    8462
                                             22 BANK0     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7970
                                             14 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    7491
                                              0 BANK0     14     8      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4     852
                                             24 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    5010
                                             45 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2775
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1357
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             24 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             6     4      2     444
                                             22 COMRAM     6     4      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       3     3      0     178
                                             19 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1     506
                                             21 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                             19 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      88
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Transmite                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPIC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _VectorInterrupcion                                  8     8      0    1014
                                             10 COMRAM     8     8      0
                          _lcd_clear
                       i2_lcd_gotoxy
                         i2_lcd_putc
                   i2_lcd_write_char
 ---------------------------------------------------------------------------------
 (11) i2_lcd_putc                                          6     4      2     320
                                              4 COMRAM     6     4      2
                   i2_lcd_write_char
 ---------------------------------------------------------------------------------
 (11) i2_lcd_write_char                                    3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (11) i2_lcd_gotoxy                                        5     4      1     406
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (11) _lcd_clear                                           0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (12) i2_Lcd_Cmd                                           2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (12) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigADC
   _ConfigPIC
   _ConfigUSART
   _Tx_USART
     _Transmite
     _lcd_gotoxy
       _Lcd_Cmd
         _Lcd_Port
     _lcd_putc
       _lcd_write_char
         _Lcd_Port
     _lcd_write_char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _lcd_init
     _Lcd_Cmd
     _Lcd_Port

 _VectorInterrupcion (ROOT)
   _lcd_clear
     i2_Lcd_Cmd
       i2_Lcd_Port
   i2_lcd_gotoxy
     i2_Lcd_Cmd
   i2_lcd_putc
     i2_lcd_write_char
       i2_Lcd_Port
   i2_lcd_write_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      5E       5       58.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4B       1       79.8%
BITBIGSFRll         23      0       0      31        0.0%
BITBIGSFRhhlhhh     21      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhhlhhl      B      0       0      22        0.0%
BITBIGSFRhhlll       9      0       0      26        0.0%
BITBIGSFRhhlhll      7      0       0      23        0.0%
BITBIGSFRlh          7      0       0      30        0.0%
BITBIGSFRhllh        6      0       0      28        0.0%
BITBIGSFRhlll        5      0       0      29        0.0%
BITBIGSFRhhlhll      4      0       0      25        0.0%
BITBIGSFRhhlhll      3      0       0      24        0.0%
BITBIGSFRhlh         1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9      32        0.0%
DATA                 0      0      A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Apr 19 20:04:56 2023

                        l93 1562                          l95 1578                          l97 158E  
                        l99 15A4                ___awdiv@sign 0018         ___wmul@multiplicand 0015  
                _BanderaADC 0091                         l101 15A6                         l104 1846  
                       l113 14E4                         l203 17BE                         l116 13AC  
                       l125 12BC                         l119 1760                         l152 17E2  
                       l161 1804                         l146 1826                         l155 17E8  
                       l164 1418                         l149 187C                         l181 0906  
                       l158 17F6                         l182 0910                         l434 10E4  
                       l179 08FC                         l189 09B8                         l447 1194  
                       l904 11DA                         l914 0AAA                         l907 121C  
                       l916 0AB2                         l932 1018                         l909 123E  
                       l917 0AF8                         l950 1654                         l928 0BF6  
                       l936 1020                         l944 0D4E                         l881 16A4  
                       l954 1720                         l980 189A                         l957 1728  
                       l969 0F5A                         l977 16E8                         _abs 16EA  
                       _pad 1196                         _var 0047                         _num 0042  
              ___awmod@sign 0018                         wreg 0FE8                 lcd_gotoxy@a 0017  
               lcd_gotoxy@b 0016                 lcd_gotoxy@y 0019                 lcd_gotoxy@z 0018  
                      l2000 1388                        l2010 13A6                        l2002 138E  
                      ?_abs 0019                        l2020 1874                        l2012 1806  
                      l2004 1394                        l2022 1876                        l2014 1816  
                      l2030 17D0                        l2006 139A                        l2024 1878  
                      l2016 1818                        l2040 17DA                        l2032 17D2  
                      l2008 13A0                        l2026 187A                        l2018 1868  
                      l2042 17DC                        l2034 17D4                        l2036 17D6  
                      l2028 17C0                        l2038 17D8                        l2310 1040  
                      l2302 1022                        l2320 1074                        l2312 104E  
                      l2304 1026                        l2400 16EA                        l2330 10AE  
                      l2322 107C                        l2314 1056                        l2306 1034  
                      l2402 1704                        l2410 0A90                        l2340 10D4  
                      l2332 10B6                        l2324 1084                        l2316 105A  
                      l2308 103C                        l2420 0AE0                        l2412 0A9E  
                      l2404 0A64                        l2342 10DC                        l2334 10B8  
                      l2326 1092                        l2318 1062                        l2350 10F8  
                      l2430 0B10                        l2422 0AEC                        l2414 0ABA  
                      l2406 0A78                        l2502 1604                        l2336 10BE  
                      l2328 1098                        l2360 112C                        l2352 1100  
                      l2280 0EC0                        l2440 0B84                        l2432 0B42  
                      l2424 0AF4                        l2416 0ACA                        l2408 0A88  
                      l2504 1610                        l2520 1694                        l2512 1656  
                      l2600 0968                        l1810 1564                        l2338 10C4  
                      l2370 1168                        l2362 1134                        l2354 1104  
                      l2346 10E6                        l2282 0EDE                        l2274 0E92  
                      l2290 16B2                        l2450 0BD6                        l2442 0B96  
                      l2434 0B48                        l2426 0B00                        l2418 0AD0  
                      l2506 162E                        l2514 1668                        l2530 13BE  
                      l2610 09A2                        l2602 0978                        l1820 159E  
                      l1812 1572                        l2372 116E                        l2364 113C  
                      l2356 1112                        l2348 10EA                        l2284 0F14  
                      l2276 0EA4                        l2292 16C4                        l2444 0BB0  
                      l2436 0B4E                        l2428 0B0A                        l2460 0FC2  
                      l2508 164A                        l2516 1670                        l2540 13FC  
                      l2532 13C2                        l2524 13AE                        l2620 09E2  
                      l2612 09BA                        l2604 098A                        l1814 157A  
                      l1806 154E                        l2366 114A                        l2374 1174  
                      l2358 111A                        l2278 0EB6                        l2294 16C8  
                      l2390 11D2                        l2382 1196                        l2446 0BC0  
                      l2438 0B6A                        l2462 0FE2                        l2454 0F5C  
                      l2470 0C2A                        l2518 1678                        l2542 1408  
                      l2534 13CE                        l2526 13B2                        l2630 0A34  
                      l2614 09CA                        l2622 09FC                        l2606 0994  
                      l2550 081C                        l1816 1588                        l1808 155C  
                      l1920 14AA                        l2376 1184                        l2368 1160  
                      l2288 16A6                        l2392 11E6                        l2384 11A4  
                      l2448 0BC6                        l2296 179A                        l2464 0FF0  
                      l2456 0F64                        l2480 0C6E                        l2472 0C36  
                      l2544 140C                        l2536 13D8                        l2528 13B6  
                      l2632 0A46                        l2624 0A0E                        l2616 09DA  
                      l2608 0998                        l2560 0830                        l2552 081E  
                      l1818 1590                        l1922 14B4                        l1914 1482  
                      l1930 1240                        l2378 118C                        l2394 11FA  
                      l2386 11B8                        l2298 17B6                        l2458 0F88  
                      l2482 0C7E                        l2474 0C3A                        l2466 0BF8  
                      l2546 1410                        l2538 13DE                        l2626 0A1E  
                      l2618 09DE                        l2634 0A4A                        l2570 087C  
                      l2562 0840                        l2554 0822                        l1860 182C  
                      l1924 14C6                        l1916 1492                        l1932 124C  
                      l2396 11FE                        l2388 11C6                        l2492 0D14  
                      l2484 0C9A                        l2476 0C56                        l2468 0C1C  
                      l2628 0A22                        l2580 08BA                        l2572 0880  
                      l2564 0850                        l2556 0826                        l2548 080C  
                      l1862 1832                        l1926 14D8                        l1918 14A4  
                      l1870 1738                        l1934 127C                        l2398 122A  
                      l2486 0CB6                        l2478 0C64                        l2582 08CC  
                      l2574 0892                        l2566 0858                        l2558 082C  
                      l1864 1834                        l1928 14DE                        l1880 174E  
                      l1872 173A                        l1936 1280                        l2488 0CFC  
                      l2496 0D26                        l2672 092E                        l2584 08D0  
                      l2576 08A4                        l2568 086A                        l2592 091A  
                      l1938 17E4                        l1866 1844                        l1858 182A  
                      l1882 1754                        l1874 1742                        l2594 094C  
                      l2586 08E2                        l2578 08A8                        l1884 1756  
                      l1876 1744                        l1868 172C                        l2596 095C  
                      l2588 08F4                        l1886 175E                        l1878 174C  
                      l1990 1358                        l2598 0964                        ?_pad 0023  
                      l1992 1368                        l1984 133C                        l1994 136E  
                      l1986 1342                        l1996 137C                        l1988 1352  
                      l1998 1382                  i2_lcd_putc 12BE                        STR_1 0801  
                      STR_2 0807                        u1200 155C                        u2000 0B96  
                      u1201 1558                        u2001 0B92                        u1210 1572  
                      u2010 0BB0                        u1211 156E                        u2011 0BAC  
                      u1220 1588                        u2020 0BC0                        u2100 0840  
                      u1221 1584                        u2021 0BBC                        u2101 083C  
                      u1230 159E                        u2030 0F88                        u2110 0850  
                      u1231 159A                        u2031 0F84                        u2111 084C  
                      u2040 1018                        u2200 095C                        u2120 086A  
                      u2041 1014                        u2201 0958                        u2121 0866  
                      u1330 1492                        u2050 0C1C                        u2210 0978  
                      u2130 087C                        u1331 148E                        u2051 0C18  
                      u2211 0974                        u2131 0878                        u1340 14C6  
                      u2060 0C64                        u2220 098A                        u2140 0892  
                      u1341 14C2                        u2061 0C60                        u2221 0986  
                      u2141 088E                        u1350 1278                        u2070 0C9A  
                      u2230 09CA                        u2150 08A4                        u2071 0C96  
                      u2231 09C6                        u2151 08A0                        u1360 12AC  
                      u2080 0CB6                        u2240 09DA                        u2160 08BA  
                      u2081 0CB2                        u2241 09D6                        u2161 08B6  
                      u1370 12BC                        u2090 164A                        u2250 0A0E  
                      u2170 08CC                        u1371 12B8                        u2091 1646  
                      u2251 0A0A                        u2307 09EE                        u2171 08C8  
                      u1380 17F6                        u2260 0A1E                        u2180 08E2  
                      u1381 17F2                        u1357 126E                        u2317 1348  
                      u2261 0A1A                        u2181 08DE                        u1390 1804  
                      u1710 0EA4                        u2270 0A34                        u2190 08F4  
                      u1391 1800                        u1367 12A2                        u1711 0EA0  
                      u2327 135E                        u2271 0A30                        u2191 08F0  
                      u1800 10AE                        u1720 0EB6                        u2280 0A46  
                      u1801 10AA                        u1721 0EB2                        u2337 1374  
                      u2281 0A42                        u1810 10D4                        u1730 0EDE  
                      u2290 0A5C                        u1811 10D0                        u1731 0EDA  
                      u2347 13B8                        u2291 0A58                        u1820 10F8  
                      u1740 0F14                        u1900 121C                        u1821 10F4  
                      u1741 0F10                        u1901 1218                        u2357 13C8  
                      u1830 1112                        u1750 16E8                        u1910 122A  
                      u1831 110E                        u1751 16E4                        u1911 1226  
                      u2367 1412                        u1760 1034                        u1840 112C  
                      u1920 1704                        u2377 1746                        u1761 1030  
                      u1841 1128                        u1921 1700                        u1770 104E  
                      u1850 114A                        u1930 0A74                        u2387 1758  
                      u1771 104A                        u1851 1146                        u1931 0A6E  
                      u1780 1074                        u1860 1160                        u1940 0A76  
                      u2397 183A                        u1781 1070                        u1861 115C  
                      u1790 1092                        u1870 1184                        u1950 0A88  
                      u1791 108E                        u1871 1180                        u1951 0A84  
                      u1880 11A4                        u1960 0A9E                        u1881 11A0  
                      u1961 0A9A                        u1890 11C6                        u1970 0ACA  
                      u1891 11C2                        u1971 0AC6                        u1980 0AE0  
                      u1981 0ADC                        u1990 0B84                        u1991 0B80  
                      i2l93 15BE                        i2l95 15D4                        i2l97 15EA  
                      i2l99 1600             lcd_write_char@a 0016             lcd_write_char@y 0015  
    __end_of_lcd_write_char 1762                        abs@a 0019                        _dbuf 0096  
                      _main 080C                        _dtoa 0A64                        _prec 003D  
                      pad@i 002A                        pad@p 0027                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        pad@w 002C                        fsr2l 0FD9  
                      btemp 004C                        prodh 0FF4                        prodl 0FF3  
                      start 000E         __end_of_ConfigUSART 17E4    __end_ofi2_lcd_write_char 179A  
           __end_of_Lcd_Cmd 1848                ___param_bank 0000                       ??_abs 001B  
                     ??_pad 0029                       ?_main 0001                       ?_dtoa 002E  
           __end_of___awdiv 10E6             __end_of___awmod 1196                       _CMCON 0FB4  
           ___awdiv@divisor 0015                       i2l101 1602                       i2l104 1866  
                     i2l113 154A                       i2l107 188A                       i2l125 133A  
                     i2l119 1798                       i2l143 0E6E                       i2l136 0D82  
           ___awdiv@counter 0017                       _RCREG 0FAE                       _RCSTA 0FAB  
              vfpfcnvrt@fmt 0062                       _SPBRG 0FAF                       _PORTD 0F83  
                     _TRISA 0F92                       _TRISB 0F93                       _TRISC 0F94  
                     _TRISD 0F95                       _TRISE 0F96                       _TXREG 0FAD  
                     _TXSTA 0FAC                       _FinRx 0094                 ?i2_Lcd_Port 0001  
                     _flags 0041         read_prec_or_width@c 001F         read_prec_or_width@n 0020  
                     _fputc 0E92                       _fputs 16A6                       pad@fp 0023  
                     _width 003B                       _putch 189A                       dtoa@d 0030  
                     dtoa@i 0039                       dtoa@p 0034                       dtoa@s 0038  
                     dtoa@w 0036                       tablat 0FF5             ?_lcd_write_char 0001  
                     ttemp5 004D                       ttemp6 0050                       ttemp7 0054  
                     status 0FD8                       wtemp8 004D             __end_of_sprintf 16A6  
          i2lcd_gotoxy@temp 0008            __end_of_Lcd_Port 15A8             __initialization 141A  
              __end_of_main 0A64                __end_of_dtoa 0BF8                      ??_main 008F  
                    ??_dtoa 0032               __activetblptr 0002            __end_of_Tx_USART 141A  
__end_of_VectorInterrupcion 0E92  __end_of_read_prec_or_width 1022                 i2lcd_putc@a 0005  
               i2lcd_putc@i 0009                i2_lcd_gotoxy 14E6                      _ADCON0 0FC2  
                    _ADCON1 0FC1                      _ADCON2 0FC0                      ?_fputc 0013  
                    ?_fputs 001C                      _ADRESH 0FC4                      _ADRESL 0FC3  
          ___awdiv@dividend 0013                      ?_putch 0001                 ?i2_lcd_putc 0005  
                    i2l2100 0D90                      i2l2110 0DC8                      i2l2102 0D92  
                    i2l2120 0DFA                      i2l2104 0DA2                      i2l2112 0DD0  
                    i2l2130 0E22                      i2l2122 0E06                      i2l2114 0DE0  
                    i2l2106 0DB2                      i2l2140 0E52                      i2l2124 0E0C  
                    i2l2116 0DE4                      i2l2132 0E30                      i2l2108 0DB6  
                    i2l2070 14F8                      i2l2142 0E58                      i2l2134 0E32  
                    i2l2126 0E0E                      i2l2118 0DEE                      i2l2080 153E  
                    i2l2072 150A                      i2l2144 0E64                      i2l2128 0E10  
                    i2l2136 0E34                      i2l2082 1544                      i2l2074 1510  
                    i2l2090 12FE                      i2l2146 0E6A                      i2l2138 0E42  
                    i2l2076 151A                      i2l2068 14E8                      i2l2084 12BE  
                    i2l2148 0E6C                      i2l2078 152C                      i2l2086 12CA  
               _ConfigUSART 17C0                      i2l2088 12FA                      i2l2096 0D72  
                    i2l2098 0D80                      i2l1900 15B8                      i2l1910 15EC  
                    i2l1902 15C0                      i2l1912 15FA                      i2l1904 15CE  
                    i2l1906 15D6                      i2l1908 15E4                      i2l1960 1864  
                    i2l1952 184A                      i2l1954 184C                      i2l1970 177C  
                    i2l1962 1764                      i2l1956 1852                      i2l1980 1796  
                    i2l1972 1784                      i2l1964 1770                      i2l1958 1854  
                    i2l1982 187E                      i2l1974 1786                      i2l1966 1772  
                    i2l1976 178C                      i2l1968 177A                      i2l1898 15AA  
                    i2l1978 178E                   ??_Lcd_Cmd 0014                 _BufferLleno 0046  
                    _ValBIN 003F                vfprintf@cfmt 0074            __end_of_lcd_init 13AE  
          __end_of_lcd_putc 12BE           __end_ofi2_Lcd_Cmd 1868                      ___wmul 179A  
                 ??___awdiv 0017                   ??___awmod 0017        read_prec_or_width@ap 001B  
                    clear_0 1460                      clear_1 146C            ___awdiv@quotient 0019  
           ___awmod@divisor 0015                      isa$std 0001             ___awmod@counter 0017  
                    pad@buf 0025                      dtoa@fp 002E                      fputc@c 0013  
                    fputs@c 0020                      fputs@i 0021                __pdataCOMRAM 0047  
                    fputs@s 001C                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 0001  
          __end_of_vfprintf 1656                   ??_sprintf 003B                  __accesstop 0060  
   __end_of__initialization 1472               ___rparam_used 0001           __end_of_ConfigADC 187E  
         __end_of_ConfigPIC 1828              __pcstackCOMRAM 0001                __pidataBANK0 188C  
             __end_of_fputc 0F5C               __end_of_fputs 16EA               __end_of_putch 189C  
            lcd_gotoxy@temp 001A                   ?_Lcd_Port 0001                     ??_fputc 0017  
                   ??_fputs 0020                     ??_putch 0013                  __pbssBANK0 0091  
         ?i2_lcd_write_char 0001                   ?_Tx_USART 0001                     ?___wmul 0013  
         __end_of_Transmite 1806          ??i2_lcd_write_char 0002                     _BAUDCON 0FB8  
               _Instrumento 0043                  _lcd_gotoxy 1480                ??i2_Lcd_Port 0001  
          ??_lcd_write_char 0014                  ??_Lcd_Port 0013                   ?_lcd_init 0001  
                 ?_lcd_putc 0017          lcd_write_char@temp 0014                     _Lcd_Cmd 1828  
                   _ByteInf 0092                     _ByteSup 0093                     __Hparam 0000  
                   _TxUSART 0095                     __Lparam 0000                  ??_Tx_USART 003B  
         __end_of_lcd_clear 188C                     ___awdiv 1022                     ___awmod 10E6  
                 ?_vfprintf 006E                __psmallconst 0800          __end_ofi2_Lcd_Port 1604  
                   __pcinit 141A                     __ramtop 0800                     __ptext0 080C  
                   __ptext1 133C                     __ptext2 13AE                     __ptext3 1656  
                   __ptext4 1604                     __ptext5 0BF8                     __ptext6 0F5C  
                   __ptext7 179A                     __ptext8 0A64                     __ptext9 1196  
     read_prec_or_width@fmt 0019            ___awmod@dividend 0013                     _sprintf 1656  
                ??_lcd_init 0016                ??i2_lcd_putc 0007              __pintcode_body 0D50  
                ??_lcd_putc 0019        end_of_initialization 1472                ?_ConfigUSART 0001  
                   fputc@fp 0015               __Lmediumconst 0000                     int_func 0D50  
                   fputs@fp 001E          _VectorInterrupcion 0008          _read_prec_or_width 0F5C  
         __end_of_vfpfcnvrt 0D50         ?_VectorInterrupcion 0001                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 0019                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0068  
                 Lcd_Port@a 0013                  ??_vfprintf 003B                   i2_Lcd_Cmd 1848  
        __end_ofi2_lcd_putc 133C                 ?_lcd_gotoxy 0016        ??_VectorInterrupcion 000B  
      ??_read_prec_or_width 001D                   _BanderaRx 0045                   _TXSTAbits 0FAC  
                 _ConfigADC 1868                   _ConfigPIC 1806                 vfpfcnvrt@ap 0064  
               vfpfcnvrt@cp 006C                 vfpfcnvrt@fp 0060              __end_of___wmul 17C0  
             __pidataCOMRAM 1894                  ?i2_Lcd_Cmd 0001         start_initialization 141A  
               __end_of_abs 172A                 __end_of_pad 1240                   _MensajeRx 0048  
                 _MensajeTx 00B6                 vfprintf@fmt 0070                    ??___wmul 0017  
                ?_ConfigADC 0001                 __pdataBANK0 00B6                  ?_ConfigPIC 0001  
                 _Transmite 17E4                 __pbssCOMRAM 003B               __pcstackBANK0 0060  
             i2lcd_gotoxy@a 0005               i2lcd_gotoxy@b 0004               i2lcd_gotoxy@y 0007  
             i2lcd_gotoxy@z 0006                    ?_Lcd_Cmd 0001                   _dtoa$1163 0032  
                 __pintcode 0008                    ?___awdiv 0013                    ?___awmod 0013  
                 _lcd_clear 187E                 ??i2_Lcd_Cmd 0002                  ?_Transmite 0001  
               __smallconst 0800               ?i2_lcd_gotoxy 0004             _MensajeSobrante 00BA  
                  ?_sprintf 0076              ___wmul@product 0017                    _LATCbits 0F8B  
                  _LATDbits 0F8C           i2lcd_write_char@a 0004           i2lcd_write_char@y 0003  
                  _IPR1bits 0F9F                    _PIE1bits 0F9D                    i2u130_40 15CE  
                  i2u130_41 15CA                    i2u131_40 15E4                    i2u131_41 15E0  
                  i2u132_40 15FA                    i2u140_40 14F8                    i2u132_41 15F6  
                  i2u140_41 14F4                    i2u141_40 152C                    i2u141_41 1528  
                  i2u142_40 12F6                    i2u150_40 0E42                    i2u150_41 0E3E  
                  i2u142_47 12EC                    i2u143_40 132A                    i2u143_47 1320  
                  i2u144_40 133A                    i2u144_41 1336                    i2u240_47 177E  
                  i2u129_40 15B8                    i2u145_40 0D80                    i2u129_41 15B4  
                  i2u145_41 0D7C                    i2u241_47 1790                    i2u146_40 0D90  
                  i2u146_41 0D8C                    Lcd_Cmd@a 0015                    i2u242_47 185A  
                  i2u147_40 0DA2                    i2u147_41 0D9E                    i2u148_40 0DC8  
                  i2u148_41 0DC4                    i2u149_40 0E22                    i2u149_41 0E1E  
                  _PIR1bits 0F9E                    _PIR2bits 0FA1                    _RCONbits 0FD0  
               ??_ConfigADC 0013                 ??_ConfigPIC 0013                  ?_lcd_clear 0001  
                 _vfpfcnvrt 0BF8                  _ADCON0bits 0FC2           ___wmul@multiplier 0013  
                 lcd_putc@a 0017                   lcd_putc@i 001B              ??i2_lcd_gotoxy 0005  
              ??_lcd_gotoxy 0017                    _Lcd_Port 154C                   copy_data0 142E  
                 copy_data1 144E        i2lcd_write_char@temp 0002                    __Hrparam 0000  
                vfprintf@ap 0072                    __Lrparam 0000                    _Tx_USART 13AE  
                vfprintf@fp 006E          __end_of_lcd_gotoxy 14E6                  ?_vfpfcnvrt 0060  
               ??_Transmite 0013                  sprintf@fmt 0078            i2_lcd_write_char 1762  
                  __ptext10 16A6                    __ptext11 0E92                    __ptext20 154C  
                  __ptext12 189A                    __ptext21 17E4                    __ptext13 16EA  
                  __ptext30 1848                    __ptext22 17C0                    __ptext14 10E6  
                  __ptext31 15A8                    __ptext23 1806                    __ptext15 1022  
                  __ptext24 1868                    __ptext16 1240                    __ptext17 172A  
                  __ptext26 12BE                    __ptext18 1480                    __ptext27 1762  
                  __ptext19 1828                    __ptext28 14E6                    __ptext29 187E  
                  _lcd_init 133C                    _lcd_putc 1240                    isa$xinst 0000  
                  int$flags 004C                 i2Lcd_Port@a 0001                    _vfprintf 1604  
               ??_lcd_clear 0004                  _INTCONbits 0FF2                    intlevel2 0000  
                 sprintf@ap 007C                  i2Lcd_Cmd@a 0003        __end_ofi2_lcd_gotoxy 154C  
           Tx_USART@palabra 008A              _Num_Caracteres 0044                 ??_vfpfcnvrt 0066  
                  sprintf@f 007E                    sprintf@s 0076                  i2_Lcd_Port 15A8  
             ??_ConfigUSART 0013              _lcd_write_char 172A  
