

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 30 22:03:37 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Version 2.40
    50                           ; Generated 17/11/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   0016EE                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _Num_Caracteres
    90   0016EE  02                 	db	2
    91                           
    92                           	psect	idataBANK0
    93   0016E2                     __pidataBANK0:
    94                           	callstack 0
    95                           
    96                           ;initializer for _MensajeSobrante
    97   0016E2  78                 	db	120
    98   0016E3  78                 	db	120
    99   0016E4  0A                 	db	10
   100   0016E5  00                 	db	0
   101                           
   102                           ;initializer for _var
   103   0016E6  30                 	db	48
   104                           
   105                           ;initializer for _MensajeRx
   106   0016E7  78                 	db	120
   107   0016E8  78                 	db	120
   108   0016E9  0A                 	db	10
   109   0016EA  00                 	db	0
   110   000000                     _TXREG	set	4013
   111   000000                     _ADCON0	set	4034
   112   000000                     _ADCON0bits	set	4034
   113   000000                     _TXSTAbits	set	4012
   114   000000                     _PORTD	set	3971
   115   000000                     _LATDbits	set	3980
   116   000000                     _TRISA	set	3986
   117   000000                     _PIR1bits	set	3998
   118   000000                     _PIR2bits	set	4001
   119   000000                     _RCSTA	set	4011
   120   000000                     _TXSTA	set	4012
   121   000000                     _RCREG	set	4014
   122   000000                     _INTCONbits	set	4082
   123   000000                     _IPR1bits	set	3999
   124   000000                     _SPBRG	set	4015
   125   000000                     _CMCON	set	4020
   126   000000                     _ADCON1	set	4033
   127   000000                     _ADRESL	set	4035
   128   000000                     _ADRESH	set	4036
   129   000000                     _RCONbits	set	4048
   130   000000                     _PIE1bits	set	3997
   131   000000                     _TRISE	set	3990
   132   000000                     _TRISD	set	3989
   133   000000                     _TRISC	set	3988
   134   000000                     _TRISB	set	3987
   135   000000                     _BAUDCON	set	4024
   136   000000                     _ADCON2	set	4032
   137   000000                     _LATCbits	set	3979
   138                           
   139                           	psect	smallconst
   140   000800                     __psmallconst:
   141                           	callstack 0
   142   000800  00                 	db	0
   143   000801                     STR_1:
   144   000801  20                 	db	32
   145   000802  49                 	db	73	;'I'
   146   000803  4E                 	db	78	;'N'
   147   000804  53                 	db	83	;'S'
   148   000805  3D                 	db	61	;'='
   149   000806  00                 	db	0
   150   000807                     STR_2:
   151   000807  56                 	db	86	;'V'
   152   000808  41                 	db	65	;'A'
   153   000809  4C                 	db	76	;'L'
   154   00080A  3D                 	db	61	;'='
   155   00080B  00                 	db	0
   156   00080C                     STR_3:
   157   00080C  25                 	db	37
   158   00080D  34                 	db	52	;'4'
   159   00080E  69                 	db	105	;'i'
   160   00080F  00                 	db	0
   161   000810  00                 	db	0	; dummy byte at the end
   162   000000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166   001462                     __pcinit:
   167                           	callstack 0
   168   001462                     start_initialization:
   169                           	callstack 0
   170   001462                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Initialize objects allocated to BANK0 (9 bytes)
   174                           ; load TBLPTR registers with __pidataBANK0
   175   001462  0EE2               	movlw	low __pidataBANK0
   176   001464  6EF6               	movwf	tblptrl,c
   177   001466  0E16               	movlw	high __pidataBANK0
   178   001468  6EF7               	movwf	tblptrh,c
   179   00146A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   180   00146C  6EF8               	movwf	tblptru,c
   181   00146E  EE00  F08D         	lfsr	0,__pdataBANK0
   182   001472  EE10 F009          	lfsr	1,9
   183   001476                     copy_data0:
   184   001476  0009               	tblrd		*+
   185   001478  CFF5 FFEE          	movff	tablat,postinc0
   186   00147C  50E5               	movf	postdec1,w,c
   187   00147E  50E1               	movf	fsr1l,w,c
   188   001480  E1FA               	bnz	copy_data0
   189                           
   190                           ; Initialize objects allocated to COMRAM (1 bytes)
   191                           ; load TBLPTR registers with __pidataCOMRAM
   192   001482  0EEE               	movlw	low __pidataCOMRAM
   193   001484  6EF6               	movwf	tblptrl,c
   194   001486  0E16               	movlw	high __pidataCOMRAM
   195   001488  6EF7               	movwf	tblptrh,c
   196   00148A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   197   00148C  6EF8               	movwf	tblptru,c
   198   00148E  0009               	tblrd		*+	;fetch initializer
   199   001490  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   200                           
   201                           ; Clear objects allocated to BANK0 (45 bytes)
   202   001494  EE00  F060         	lfsr	0,__pbssBANK0
   203   001498  0E2D               	movlw	45
   204   00149A                     clear_0:
   205   00149A  6AEE               	clrf	postinc0,c
   206   00149C  06E8               	decf	wreg,f,c
   207   00149E  E1FD               	bnz	clear_0
   208                           
   209                           ; Clear objects allocated to COMRAM (7 bytes)
   210   0014A0  EE00  F055         	lfsr	0,__pbssCOMRAM
   211   0014A4  0E07               	movlw	7
   212   0014A6                     clear_1:
   213   0014A6  6AEE               	clrf	postinc0,c
   214   0014A8  06E8               	decf	wreg,f,c
   215   0014AA  E1FD               	bnz	clear_1
   216   0014AC                     end_of_initialization:
   217                           	callstack 0
   218   0014AC                     __end_of__initialization:
   219                           	callstack 0
   220   0014AC  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   221   0014AE  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   222   0014B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   223   0014B2  6EF8               	movwf	tblptru,c
   224   0014B4  0100               	movlb	0
   225   0014B6  EF09  F004         	goto	_main	;jump to C main() function
   226                           
   227                           	psect	bssCOMRAM
   228   000055                     __pbssCOMRAM:
   229                           	callstack 0
   230   000055                     _flags:
   231                           	callstack 0
   232   000055                     	ds	1
   233   000056                     _Instrumento:
   234                           	callstack 0
   235   000056                     	ds	1
   236   000057                     _ByteSup:
   237                           	callstack 0
   238   000057                     	ds	1
   239   000058                     _FinRx:
   240                           	callstack 0
   241   000058                     	ds	1
   242   000059                     _BanderaRx:
   243                           	callstack 0
   244   000059                     	ds	1
   245   00005A                     _BufferLleno:
   246                           	callstack 0
   247   00005A                     	ds	1
   248   00005B                     _TxUSART:
   249                           	callstack 0
   250   00005B                     	ds	1
   251                           
   252                           	psect	dataCOMRAM
   253   00005C                     __pdataCOMRAM:
   254                           	callstack 0
   255   00005C                     _Num_Caracteres:
   256                           	callstack 0
   257   00005C                     	ds	1
   258                           
   259                           	psect	bssBANK0
   260   000060                     __pbssBANK0:
   261                           	callstack 0
   262   000060                     _width:
   263                           	callstack 0
   264   000060                     	ds	2
   265   000062                     _prec:
   266                           	callstack 0
   267   000062                     	ds	2
   268   000064                     _ValBIN:
   269                           	callstack 0
   270   000064                     	ds	2
   271   000066                     _BanderaADC:
   272                           	callstack 0
   273   000066                     	ds	1
   274   000067                     _ByteInf:
   275                           	callstack 0
   276   000067                     	ds	1
   277   000068                     _dbuf:
   278                           	callstack 0
   279   000068                     	ds	32
   280   000088                     _MensajeTx:
   281                           	callstack 0
   282   000088                     	ds	5
   283                           
   284                           	psect	dataBANK0
   285   00008D                     __pdataBANK0:
   286                           	callstack 0
   287   00008D                     _MensajeSobrante:
   288                           	callstack 0
   289   00008D                     	ds	4
   290   000091                     _var:
   291                           	callstack 0
   292   000091                     	ds	1
   293   000092                     _MensajeRx:
   294                           	callstack 0
   295   000092                     	ds	4
   296                           
   297                           	psect	cstackBANK0
   298   000096                     __pcstackBANK0:
   299                           	callstack 0
   300   000096                     ??_main:
   301                           
   302                           ; 1 bytes @ 0x0
   303   000096                     	ds	2
   304                           
   305                           	psect	cstackCOMRAM
   306   000001                     __pcstackCOMRAM:
   307                           	callstack 0
   308   000001                     ??_VectorInterrupcion:
   309   000001                     
   310                           ; 1 bytes @ 0x0
   311   000001                     	ds	2
   312   000003                     ?___wmul:
   313                           	callstack 0
   314   000003                     ?___awdiv:
   315                           	callstack 0
   316   000003                     ?___awmod:
   317                           	callstack 0
   318   000003                     Lcd_Port@a:
   319                           	callstack 0
   320   000003                     ___wmul@multiplier:
   321                           	callstack 0
   322   000003                     ___awdiv@dividend:
   323                           	callstack 0
   324   000003                     ___awmod@dividend:
   325                           	callstack 0
   326   000003                     fputc@c:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x2
   330   000003                     	ds	1
   331   000004                     ??_Lcd_Cmd:
   332   000004                     lcd_write_char@temp:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x3
   336   000004                     	ds	1
   337   000005                     Lcd_Cmd@a:
   338                           	callstack 0
   339   000005                     lcd_write_char@y:
   340                           	callstack 0
   341   000005                     ___wmul@multiplicand:
   342                           	callstack 0
   343   000005                     ___awdiv@divisor:
   344                           	callstack 0
   345   000005                     ___awmod@divisor:
   346                           	callstack 0
   347   000005                     fputc@fp:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x4
   351   000005                     	ds	1
   352   000006                     ??_lcd_init:
   353   000006                     lcd_gotoxy@b:
   354                           	callstack 0
   355   000006                     lcd_write_char@a:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x5
   359   000006                     	ds	1
   360   000007                     ??_fputc:
   361   000007                     lcd_gotoxy@a:
   362                           	callstack 0
   363   000007                     ___awdiv@counter:
   364                           	callstack 0
   365   000007                     ___awmod@counter:
   366                           	callstack 0
   367   000007                     lcd_putc@a:
   368                           	callstack 0
   369   000007                     ___wmul@product:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x6
   373   000007                     	ds	1
   374   000008                     lcd_gotoxy@z:
   375                           	callstack 0
   376   000008                     ___awdiv@sign:
   377                           	callstack 0
   378   000008                     ___awmod@sign:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x7
   382   000008                     	ds	1
   383   000009                     ??_lcd_putc:
   384   000009                     ?_abs:
   385                           	callstack 0
   386   000009                     ?_read_prec_or_width:
   387                           	callstack 0
   388   000009                     lcd_gotoxy@y:
   389                           	callstack 0
   390   000009                     ___awdiv@quotient:
   391                           	callstack 0
   392   000009                     read_prec_or_width@fmt:
   393                           	callstack 0
   394   000009                     abs@a:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x8
   398   000009                     	ds	1
   399   00000A                     lcd_gotoxy@temp:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x9
   403   00000A                     	ds	1
   404   00000B                     ??_abs:
   405   00000B                     lcd_putc@i:
   406                           	callstack 0
   407   00000B                     read_prec_or_width@ap:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0xA
   411   00000B                     	ds	1
   412   00000C                     fputs@s:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xB
   416   00000C                     	ds	1
   417   00000D                     ??_read_prec_or_width:
   418                           
   419                           ; 1 bytes @ 0xC
   420   00000D                     	ds	1
   421   00000E                     fputs@fp:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0xD
   425   00000E                     	ds	1
   426   00000F                     read_prec_or_width@c:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0xE
   430   00000F                     	ds	1
   431   000010                     fputs@c:
   432                           	callstack 0
   433   000010                     read_prec_or_width@n:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0xF
   437   000010                     	ds	1
   438   000011                     fputs@i:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x10
   442   000011                     	ds	2
   443   000013                     pad@fp:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x12
   447   000013                     	ds	2
   448   000015                     pad@buf:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x14
   452   000015                     	ds	2
   453   000017                     pad@p:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x16
   457   000017                     	ds	2
   458   000019                     ??_pad:
   459                           
   460                           ; 1 bytes @ 0x18
   461   000019                     	ds	1
   462   00001A                     pad@i:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x19
   466   00001A                     	ds	2
   467   00001C                     pad@w:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x1B
   471   00001C                     	ds	2
   472   00001E                     dtoa@fp:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x1D
   476   00001E                     	ds	2
   477   000020                     dtoa@d:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x1F
   481   000020                     	ds	2
   482   000022                     _dtoa$1162:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x21
   486   000022                     	ds	2
   487   000024                     dtoa@p:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x23
   491   000024                     	ds	2
   492   000026                     dtoa@w:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x25
   496   000026                     	ds	2
   497   000028                     dtoa@i:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x27
   501   000028                     	ds	2
   502   00002A                     dtoa@s:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x29
   506   00002A                     	ds	1
   507   00002B                     vfpfcnvrt@fp:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x2A
   511   00002B                     	ds	2
   512   00002D                     vfpfcnvrt@fmt:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x2C
   516   00002D                     	ds	2
   517   00002F                     vfpfcnvrt@ap:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x2E
   521   00002F                     	ds	2
   522   000031                     ??_vfpfcnvrt:
   523                           
   524                           ; 1 bytes @ 0x30
   525   000031                     	ds	2
   526   000033                     vfpfcnvrt@convarg:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x32
   530   000033                     	ds	4
   531   000037                     vfpfcnvrt@cp:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x36
   535   000037                     	ds	2
   536   000039                     ?_vfprintf:
   537                           	callstack 0
   538   000039                     vfprintf@fp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x38
   542   000039                     	ds	2
   543   00003B                     vfprintf@fmt:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x3A
   547   00003B                     	ds	2
   548   00003D                     vfprintf@ap:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x3C
   552   00003D                     	ds	2
   553   00003F                     vfprintf@cfmt:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x3E
   557   00003F                     	ds	2
   558   000041                     ?_sprintf:
   559                           	callstack 0
   560   000041                     sprintf@s:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x40
   564   000041                     	ds	2
   565   000043                     sprintf@fmt:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x42
   569   000043                     	ds	4
   570   000047                     sprintf@ap:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x46
   574   000047                     	ds	2
   575   000049                     sprintf@f:
   576                           	callstack 0
   577                           
   578                           ; 12 bytes @ 0x48
   579   000049                     	ds	12
   580   000055                     
   581                           ; 1 bytes @ 0x54
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 363 in file "main.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   601 ;;      Params:         0       0       0       0       0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0       0       0       0       0
   603 ;;      Temps:          0       2       0       0       0       0       0       0       0
   604 ;;      Totals:         0       2       0       0       0       0       0       0       0
   605 ;;Total ram usage:        2 bytes
   606 ;; Hardware stack levels required when called: 10
   607 ;; This function calls:
   608 ;;		_ConfigADC
   609 ;;		_ConfigPIC
   610 ;;		_ConfigUSART
   611 ;;		_Tx_USART
   612 ;;		_lcd_init
   613 ;; This function is called by:
   614 ;;		Startup code after reset
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text0
   619   000812                     __ptext0:
   620                           	callstack 0
   621   000812                     _main:
   622                           	callstack 21
   623   000812                     
   624                           ;main.c: 364:     ConfigPIC();
   625   000812  EC3E  F00B         	call	_ConfigPIC	;wreg free
   626                           
   627                           ;main.c: 365:     ConfigADC();
   628   000816  EC5F  F00B         	call	_ConfigADC	;wreg free
   629                           
   630                           ;main.c: 366:     ConfigUSART();
   631   00081A  EC1B  F00B         	call	_ConfigUSART	;wreg free
   632                           
   633                           ;main.c: 367:     lcd_init();
   634   00081E  EC97  F009         	call	_lcd_init	;wreg free
   635   000822                     
   636                           ;main.c: 369:     LATCbits.LATC0 = 0;
   637   000822  908B               	bcf	139,0,c	;volatile
   638   000824                     l2188:
   639                           
   640                           ;main.c: 372:         BanderaRx = 0;
   641   000824  0E00               	movlw	0
   642   000826  6E59               	movwf	_BanderaRx^0,c
   643   000828                     
   644                           ;main.c: 373:         FinRx = 0;
   645   000828  0E00               	movlw	0
   646   00082A  6E58               	movwf	_FinRx^0,c
   647   00082C                     
   648                           ;main.c: 374:         BufferLleno = 0;
   649   00082C  0E00               	movlw	0
   650   00082E  6E5A               	movwf	_BufferLleno^0,c
   651   000830                     l2194:
   652   000830  5058               	movf	_FinRx^0,w,c
   653   000832  B4D8               	btfsc	status,2,c
   654   000834  EF1E  F004         	goto	u1451
   655   000838  EF20  F004         	goto	u1450
   656   00083C                     u1451:
   657   00083C  EF18  F004         	goto	l2194
   658   000840                     u1450:
   659   000840                     
   660                           ;main.c: 378:         if (FinRx == 1) {
   661   000840  0458               	decf	_FinRx^0,w,c
   662   000842  A4D8               	btfss	status,2,c
   663   000844  EF26  F004         	goto	u1461
   664   000848  EF28  F004         	goto	u1460
   665   00084C                     u1461:
   666   00084C  EFD9  F004         	goto	l171
   667   000850                     u1460:
   668   000850                     
   669                           ;main.c: 379:             FinRx = 0;
   670   000850  0E00               	movlw	0
   671   000852  6E58               	movwf	_FinRx^0,c
   672   000854                     
   673                           ;main.c: 380:             if (MensajeRx[0] == 'V') {
   674   000854  0E56               	movlw	86
   675   000856  0100               	movlb	0	; () banked
   676   000858  1992               	xorwf	_MensajeRx& (0+255),w,b
   677   00085A  A4D8               	btfss	status,2,c
   678   00085C  EF32  F004         	goto	u1471
   679   000860  EF34  F004         	goto	u1470
   680   000864                     u1471:
   681   000864  EF77  F004         	goto	l2210
   682   000868                     u1470:
   683   000868                     
   684                           ; BSR set to: 0
   685                           ;main.c: 381:                 Instrumento = 'V';
   686   000868  0E56               	movlw	86
   687   00086A  6E56               	movwf	_Instrumento^0,c
   688   00086C                     
   689                           ; BSR set to: 0
   690                           ;main.c: 382:                 ADCON0bits.CHS3 = 0;
   691   00086C  9AC2               	bcf	194,5,c	;volatile
   692                           
   693                           ;main.c: 383:                 switch (MensajeRx[1]) {
   694   00086E  EF56  F004         	goto	l2208
   695   000872                     l174:
   696                           
   697                           ; BSR set to: 0
   698                           ;main.c: 385:                         ADCON0bits.CHS0 = 0;
   699   000872  94C2               	bcf	194,2,c	;volatile
   700                           
   701                           ;main.c: 386:                         ADCON0bits.CHS1 = 0;
   702   000874  96C2               	bcf	194,3,c	;volatile
   703                           
   704                           ;main.c: 387:                         ADCON0bits.CHS2 = 0;
   705   000876  98C2               	bcf	194,4,c	;volatile
   706                           
   707                           ;main.c: 388:                         break;
   708   000878  EFD9  F004         	goto	l171
   709   00087C                     l176:
   710                           
   711                           ; BSR set to: 0
   712                           ;main.c: 390:                         ADCON0bits.CHS0 = 1;
   713   00087C  84C2               	bsf	194,2,c	;volatile
   714                           
   715                           ;main.c: 391:                         ADCON0bits.CHS1 = 0;
   716   00087E  96C2               	bcf	194,3,c	;volatile
   717                           
   718                           ;main.c: 392:                         ADCON0bits.CHS2 = 0;
   719   000880  98C2               	bcf	194,4,c	;volatile
   720                           
   721                           ;main.c: 393:                         break;
   722   000882  EFD9  F004         	goto	l171
   723   000886                     l177:
   724                           
   725                           ; BSR set to: 0
   726                           ;main.c: 395:                         ADCON0bits.CHS0 = 0;
   727   000886  94C2               	bcf	194,2,c	;volatile
   728                           
   729                           ;main.c: 396:                         ADCON0bits.CHS1 = 1;
   730   000888  86C2               	bsf	194,3,c	;volatile
   731                           
   732                           ;main.c: 397:                         ADCON0bits.CHS2 = 0;
   733   00088A  98C2               	bcf	194,4,c	;volatile
   734                           
   735                           ;main.c: 398:                         break;
   736   00088C  EFD9  F004         	goto	l171
   737   000890                     l178:
   738                           
   739                           ; BSR set to: 0
   740                           ;main.c: 400:                         ADCON0bits.CHS0 = 1;
   741   000890  84C2               	bsf	194,2,c	;volatile
   742                           
   743                           ;main.c: 401:                         ADCON0bits.CHS1 = 1;
   744   000892  86C2               	bsf	194,3,c	;volatile
   745                           
   746                           ;main.c: 402:                         ADCON0bits.CHS2 = 0;
   747   000894  98C2               	bcf	194,4,c	;volatile
   748                           
   749                           ;main.c: 403:                         break;
   750   000896  EFD9  F004         	goto	l171
   751   00089A                     l179:
   752                           
   753                           ; BSR set to: 0
   754                           ;main.c: 405:                         ADCON0bits.CHS0 = 0;
   755   00089A  94C2               	bcf	194,2,c	;volatile
   756                           
   757                           ;main.c: 406:                         ADCON0bits.CHS1 = 0;
   758   00089C  96C2               	bcf	194,3,c	;volatile
   759                           
   760                           ;main.c: 407:                         ADCON0bits.CHS2 = 1;
   761   00089E  88C2               	bsf	194,4,c	;volatile
   762                           
   763                           ;main.c: 408:                         break;
   764   0008A0  EFD9  F004         	goto	l171
   765   0008A4                     l2206:
   766                           
   767                           ; BSR set to: 0
   768                           ;main.c: 410:                         Instrumento = 0;
   769   0008A4  0E00               	movlw	0
   770   0008A6  6E56               	movwf	_Instrumento^0,c
   771                           
   772                           ;main.c: 411:                 }
   773   0008A8  EFD9  F004         	goto	l171
   774   0008AC                     l2208:
   775                           
   776                           ; BSR set to: 0
   777   0008AC  5193               	movf	(_MensajeRx+1)& (0+255),w,b
   778   0008AE  6F96               	movwf	??_main& (0+255),b
   779   0008B0  6B97               	clrf	(??_main+1)& (0+255),b
   780                           
   781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   782                           ; Switch size 1, requested type "simple"
   783                           ; Number of cases is 1, Range of values is 0 to 0
   784                           ; switch strategies available:
   785                           ; Name         Instructions Cycles
   786                           ; simple_byte            4     3 (average)
   787                           ;	Chosen strategy is simple_byte
   788   0008B2  5197               	movf	(??_main+1)& (0+255),w,b
   789   0008B4  0A00               	xorlw	0	; case 0
   790   0008B6  B4D8               	btfsc	status,2,c
   791   0008B8  EF60  F004         	goto	l2350
   792   0008BC  EF52  F004         	goto	l2206
   793   0008C0                     l2350:
   794                           
   795                           ; BSR set to: 0
   796                           ; Switch size 1, requested type "simple"
   797                           ; Number of cases is 5, Range of values is 49 to 53
   798                           ; switch strategies available:
   799                           ; Name         Instructions Cycles
   800                           ; simple_byte           16     9 (average)
   801                           ;	Chosen strategy is simple_byte
   802   0008C0  5196               	movf	??_main& (0+255),w,b
   803   0008C2  0A31               	xorlw	49	; case 49
   804   0008C4  B4D8               	btfsc	status,2,c
   805   0008C6  EF39  F004         	goto	l174
   806   0008CA  0A03               	xorlw	3	; case 50
   807   0008CC  B4D8               	btfsc	status,2,c
   808   0008CE  EF3E  F004         	goto	l176
   809   0008D2  0A01               	xorlw	1	; case 51
   810   0008D4  B4D8               	btfsc	status,2,c
   811   0008D6  EF43  F004         	goto	l177
   812   0008DA  0A07               	xorlw	7	; case 52
   813   0008DC  B4D8               	btfsc	status,2,c
   814   0008DE  EF48  F004         	goto	l178
   815   0008E2  0A01               	xorlw	1	; case 53
   816   0008E4  B4D8               	btfsc	status,2,c
   817   0008E6  EF4D  F004         	goto	l179
   818   0008EA  EF52  F004         	goto	l2206
   819   0008EE                     l2210:
   820                           
   821                           ; BSR set to: 0
   822   0008EE  0E41               	movlw	65
   823   0008F0  1992               	xorwf	_MensajeRx& (0+255),w,b
   824   0008F2  A4D8               	btfss	status,2,c
   825   0008F4  EF7E  F004         	goto	u1481
   826   0008F8  EF80  F004         	goto	u1480
   827   0008FC                     u1481:
   828   0008FC  EFAB  F004         	goto	l2222
   829   000900                     u1480:
   830   000900                     
   831                           ; BSR set to: 0
   832                           ;main.c: 413:                 Instrumento = 'A';
   833   000900  0E41               	movlw	65
   834   000902  6E56               	movwf	_Instrumento^0,c
   835   000904                     
   836                           ; BSR set to: 0
   837                           ;main.c: 414:                 ADCON0bits.CHS2 = 1;
   838   000904  88C2               	bsf	194,4,c	;volatile
   839   000906                     
   840                           ; BSR set to: 0
   841                           ;main.c: 415:                 ADCON0bits.CHS3 = 0;
   842   000906  9AC2               	bcf	194,5,c	;volatile
   843                           
   844                           ;main.c: 416:                 switch (MensajeRx[1]) {
   845   000908  EF92  F004         	goto	l2220
   846   00090C                     l184:
   847                           
   848                           ; BSR set to: 0
   849                           ;main.c: 418:                         ADCON0bits.CHS0 = 1;
   850   00090C  84C2               	bsf	194,2,c	;volatile
   851                           
   852                           ;main.c: 419:                         ADCON0bits.CHS1 = 0;
   853   00090E  96C2               	bcf	194,3,c	;volatile
   854                           
   855                           ;main.c: 420:                         break;
   856   000910  EFD9  F004         	goto	l171
   857   000914                     l186:
   858                           
   859                           ; BSR set to: 0
   860                           ;main.c: 422:                         ADCON0bits.CHS0 = 0;
   861   000914  94C2               	bcf	194,2,c	;volatile
   862                           
   863                           ;main.c: 423:                         ADCON0bits.CHS1 = 1;
   864   000916  86C2               	bsf	194,3,c	;volatile
   865                           
   866                           ;main.c: 424:                         break;
   867   000918  EFD9  F004         	goto	l171
   868   00091C                     l187:
   869                           
   870                           ; BSR set to: 0
   871                           ;main.c: 426:                         ADCON0bits.CHS0 = 1;
   872   00091C  84C2               	bsf	194,2,c	;volatile
   873                           
   874                           ;main.c: 427:                         ADCON0bits.CHS1 = 1;
   875   00091E  86C2               	bsf	194,3,c	;volatile
   876                           
   877                           ;main.c: 428:                         break;
   878   000920  EFD9  F004         	goto	l171
   879   000924                     l2220:
   880                           
   881                           ; BSR set to: 0
   882   000924  5193               	movf	(_MensajeRx+1)& (0+255),w,b
   883   000926  6F96               	movwf	??_main& (0+255),b
   884   000928  6B97               	clrf	(??_main+1)& (0+255),b
   885                           
   886                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   887                           ; Switch size 1, requested type "simple"
   888                           ; Number of cases is 1, Range of values is 0 to 0
   889                           ; switch strategies available:
   890                           ; Name         Instructions Cycles
   891                           ; simple_byte            4     3 (average)
   892                           ;	Chosen strategy is simple_byte
   893   00092A  5197               	movf	(??_main+1)& (0+255),w,b
   894   00092C  0A00               	xorlw	0	; case 0
   895   00092E  B4D8               	btfsc	status,2,c
   896   000930  EF9C  F004         	goto	l2352
   897   000934  EF52  F004         	goto	l2206
   898   000938                     l2352:
   899                           
   900                           ; BSR set to: 0
   901                           ; Switch size 1, requested type "simple"
   902                           ; Number of cases is 3, Range of values is 49 to 51
   903                           ; switch strategies available:
   904                           ; Name         Instructions Cycles
   905                           ; simple_byte           10     6 (average)
   906                           ;	Chosen strategy is simple_byte
   907   000938  5196               	movf	??_main& (0+255),w,b
   908   00093A  0A31               	xorlw	49	; case 49
   909   00093C  B4D8               	btfsc	status,2,c
   910   00093E  EF86  F004         	goto	l184
   911   000942  0A03               	xorlw	3	; case 50
   912   000944  B4D8               	btfsc	status,2,c
   913   000946  EF8A  F004         	goto	l186
   914   00094A  0A01               	xorlw	1	; case 51
   915   00094C  B4D8               	btfsc	status,2,c
   916   00094E  EF8E  F004         	goto	l187
   917   000952  EF52  F004         	goto	l2206
   918   000956                     l2222:
   919                           
   920                           ; BSR set to: 0
   921   000956  0E54               	movlw	84
   922   000958  1992               	xorwf	_MensajeRx& (0+255),w,b
   923   00095A  A4D8               	btfss	status,2,c
   924   00095C  EFB2  F004         	goto	u1491
   925   000960  EFB4  F004         	goto	u1490
   926   000964                     u1491:
   927   000964  EFC5  F004         	goto	l2236
   928   000968                     u1490:
   929   000968                     
   930                           ; BSR set to: 0
   931   000968  0E4D               	movlw	77
   932   00096A  1993               	xorwf	(_MensajeRx+1)& (0+255),w,b
   933   00096C  A4D8               	btfss	status,2,c
   934   00096E  EFBB  F004         	goto	u1501
   935   000972  EFBD  F004         	goto	u1500
   936   000976                     u1501:
   937   000976  EFC5  F004         	goto	l2236
   938   00097A                     u1500:
   939   00097A                     
   940                           ; BSR set to: 0
   941                           ;main.c: 433:                 Instrumento = 'T';
   942   00097A  0E54               	movlw	84
   943   00097C  6E56               	movwf	_Instrumento^0,c
   944   00097E                     
   945                           ; BSR set to: 0
   946                           ;main.c: 434:                 ADCON0bits.CHS0 = 0;
   947   00097E  94C2               	bcf	194,2,c	;volatile
   948   000980                     
   949                           ; BSR set to: 0
   950                           ;main.c: 435:                 ADCON0bits.CHS1 = 0;
   951   000980  96C2               	bcf	194,3,c	;volatile
   952   000982                     
   953                           ; BSR set to: 0
   954                           ;main.c: 436:                 ADCON0bits.CHS2 = 0;
   955   000982  98C2               	bcf	194,4,c	;volatile
   956   000984                     
   957                           ; BSR set to: 0
   958                           ;main.c: 437:                 ADCON0bits.CHS3 = 1;
   959   000984  8AC2               	bsf	194,5,c	;volatile
   960                           
   961                           ;main.c: 438:             } else if (MensajeRx[0] == 'H' && MensajeRx[1] == 'I') {
   962   000986  EFD9  F004         	goto	l171
   963   00098A                     l2236:
   964                           
   965                           ; BSR set to: 0
   966   00098A  0E48               	movlw	72
   967   00098C  1992               	xorwf	_MensajeRx& (0+255),w,b
   968   00098E  A4D8               	btfss	status,2,c
   969   000990  EFCC  F004         	goto	u1511
   970   000994  EFCE  F004         	goto	u1510
   971   000998                     u1511:
   972   000998  EF52  F004         	goto	l2206
   973   00099C                     u1510:
   974   00099C                     
   975                           ; BSR set to: 0
   976   00099C  0E49               	movlw	73
   977   00099E  1993               	xorwf	(_MensajeRx+1)& (0+255),w,b
   978   0009A0  A4D8               	btfss	status,2,c
   979   0009A2  EFD5  F004         	goto	u1521
   980   0009A6  EFD7  F004         	goto	u1520
   981   0009AA                     u1521:
   982   0009AA  EF52  F004         	goto	l2206
   983   0009AE                     u1520:
   984   0009AE                     
   985                           ; BSR set to: 0
   986                           ;main.c: 439:                 Instrumento = 'H';
   987   0009AE  0E48               	movlw	72
   988   0009B0  6E56               	movwf	_Instrumento^0,c
   989   0009B2                     l171:
   990                           
   991                           ;main.c: 445:         if (Instrumento != 0) {
   992   0009B2  5056               	movf	_Instrumento^0,w,c
   993   0009B4  B4D8               	btfsc	status,2,c
   994   0009B6  EFDF  F004         	goto	u1531
   995   0009BA  EFE1  F004         	goto	u1530
   996   0009BE                     u1531:
   997   0009BE  EF49  F005         	goto	l2274
   998   0009C2                     u1530:
   999   0009C2                     
  1000                           ;main.c: 446:             if (Instrumento == 'H') {
  1001   0009C2  0E48               	movlw	72
  1002   0009C4  1856               	xorwf	_Instrumento^0,w,c
  1003   0009C6  A4D8               	btfss	status,2,c
  1004   0009C8  EFE8  F004         	goto	u1541
  1005   0009CC  EFEA  F004         	goto	u1540
  1006   0009D0                     u1541:
  1007   0009D0  EF3E  F005         	goto	l2272
  1008   0009D4                     u1540:
  1009   0009D4                     
  1010                           ;main.c: 447:                 ByteSup = 'O';
  1011   0009D4  0E4F               	movlw	79
  1012   0009D6  6E57               	movwf	_ByteSup^0,c
  1013                           
  1014                           ;main.c: 448:                 ByteInf = 'K';
  1015   0009D8  0E4B               	movlw	75
  1016   0009DA  0100               	movlb	0	; () banked
  1017   0009DC  6F67               	movwf	_ByteInf& (0+255),b
  1018   0009DE                     
  1019                           ; BSR set to: 0
  1020                           ;main.c: 449:                 Tx_USART();
  1021   0009DE  EC12  F009         	call	_Tx_USART	;wreg free
  1022   0009E2  EF3E  F005         	goto	l2272
  1023   0009E6                     l2250:
  1024                           
  1025                           ;main.c: 452:                 BanderaRx = 0;
  1026   0009E6  0E00               	movlw	0
  1027   0009E8  6E59               	movwf	_BanderaRx^0,c
  1028                           
  1029                           ;main.c: 453:                 FinRx = 0;
  1030   0009EA  0E00               	movlw	0
  1031   0009EC  6E58               	movwf	_FinRx^0,c
  1032                           
  1033                           ;main.c: 454:                 BufferLleno = 0;
  1034   0009EE  0E00               	movlw	0
  1035   0009F0  6E5A               	movwf	_BufferLleno^0,c
  1036                           
  1037                           ;main.c: 455:                 while (FinRx == 0) {
  1038   0009F2  EF17  F005         	goto	l2260
  1039   0009F6                     l199:
  1040                           
  1041                           ;main.c: 456:                     ADCON0bits.GO_DONE = 1;
  1042   0009F6  82C2               	bsf	194,1,c	;volatile
  1043   0009F8                     l2252:
  1044   0009F8  0100               	movlb	0	; () banked
  1045   0009FA  5166               	movf	_BanderaADC& (0+255),w,b
  1046   0009FC  B4D8               	btfsc	status,2,c
  1047   0009FE  EF03  F005         	goto	u1551
  1048   000A02  EF05  F005         	goto	u1550
  1049   000A06                     u1551:
  1050   000A06  EFFC  F004         	goto	l2252
  1051   000A0A                     u1550:
  1052   000A0A                     
  1053                           ; BSR set to: 0
  1054                           ;main.c: 458:                     Tx_USART();
  1055   000A0A  EC12  F009         	call	_Tx_USART	;wreg free
  1056   000A0E                     
  1057                           ;main.c: 459:                     BanderaADC = 0;
  1058   000A0E  0E00               	movlw	0
  1059   000A10  0100               	movlb	0	; () banked
  1060   000A12  6F66               	movwf	_BanderaADC& (0+255),b
  1061   000A14                     
  1062                           ; BSR set to: 0
  1063                           ;main.c: 460:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1064   000A14  0E06               	movlw	6
  1065   000A16  0100               	movlb	0	; () banked
  1066   000A18  6F97               	movwf	(??_main+1)& (0+255),b
  1067   000A1A  0E13               	movlw	19
  1068   000A1C  6F96               	movwf	??_main& (0+255),b
  1069   000A1E  0EAD               	movlw	173
  1070   000A20                     u1617:
  1071   000A20  2EE8               	decfsz	wreg,f,c
  1072   000A22  D7FE               	bra	u1617
  1073   000A24  2F96               	decfsz	??_main& (0+255),f,b
  1074   000A26  D7FC               	bra	u1617
  1075   000A28  2F97               	decfsz	(??_main+1)& (0+255),f,b
  1076   000A2A  D7FA               	bra	u1617
  1077   000A2C  D000               	nop2	
  1078   000A2E                     l2260:
  1079                           
  1080                           ;main.c: 455:                 while (FinRx == 0) {
  1081   000A2E  5058               	movf	_FinRx^0,w,c
  1082   000A30  B4D8               	btfsc	status,2,c
  1083   000A32  EF1D  F005         	goto	u1561
  1084   000A36  EF1F  F005         	goto	u1560
  1085   000A3A                     u1561:
  1086   000A3A  EFFB  F004         	goto	l199
  1087   000A3E                     u1560:
  1088   000A3E                     
  1089                           ;main.c: 462:                 if (FinRx == 1) {
  1090   000A3E  0458               	decf	_FinRx^0,w,c
  1091   000A40  A4D8               	btfss	status,2,c
  1092   000A42  EF25  F005         	goto	u1571
  1093   000A46  EF27  F005         	goto	u1570
  1094   000A4A                     u1571:
  1095   000A4A  EF3E  F005         	goto	l2272
  1096   000A4E                     u1570:
  1097   000A4E                     
  1098                           ;main.c: 463:                     FinRx = 0;
  1099   000A4E  0E00               	movlw	0
  1100   000A50  6E58               	movwf	_FinRx^0,c
  1101   000A52                     
  1102                           ;main.c: 464:                     if ((MensajeRx[0] == 'F') && (MensajeRx[1] == 'P')) {
  1103   000A52  0E46               	movlw	70
  1104   000A54  0100               	movlb	0	; () banked
  1105   000A56  1992               	xorwf	_MensajeRx& (0+255),w,b
  1106   000A58  A4D8               	btfss	status,2,c
  1107   000A5A  EF31  F005         	goto	u1581
  1108   000A5E  EF33  F005         	goto	u1580
  1109   000A62                     u1581:
  1110   000A62  EF3E  F005         	goto	l2272
  1111   000A66                     u1580:
  1112   000A66                     
  1113                           ; BSR set to: 0
  1114   000A66  0E50               	movlw	80
  1115   000A68  1993               	xorwf	(_MensajeRx+1)& (0+255),w,b
  1116   000A6A  A4D8               	btfss	status,2,c
  1117   000A6C  EF3A  F005         	goto	u1591
  1118   000A70  EF3C  F005         	goto	u1590
  1119   000A74                     u1591:
  1120   000A74  EF3E  F005         	goto	l2272
  1121   000A78                     u1590:
  1122   000A78                     
  1123                           ; BSR set to: 0
  1124                           ;main.c: 465:                         Instrumento = 'H';
  1125   000A78  0E48               	movlw	72
  1126   000A7A  6E56               	movwf	_Instrumento^0,c
  1127   000A7C                     l2272:
  1128                           
  1129                           ;main.c: 451:             while (Instrumento != 'H') {
  1130   000A7C  0E48               	movlw	72
  1131   000A7E  1856               	xorwf	_Instrumento^0,w,c
  1132   000A80  A4D8               	btfss	status,2,c
  1133   000A82  EF45  F005         	goto	u1601
  1134   000A86  EF47  F005         	goto	u1600
  1135   000A8A                     u1601:
  1136   000A8A  EFF3  F004         	goto	l2250
  1137   000A8E                     u1600:
  1138   000A8E  EF12  F004         	goto	l2188
  1139   000A92                     l2274:
  1140                           
  1141                           ;main.c: 470:             ByteSup = 'E';
  1142   000A92  0E45               	movlw	69
  1143   000A94  6E57               	movwf	_ByteSup^0,c
  1144                           
  1145                           ;main.c: 471:             ByteInf = 'R';
  1146   000A96  0E52               	movlw	82
  1147   000A98  0100               	movlb	0	; () banked
  1148   000A9A  6F67               	movwf	_ByteInf& (0+255),b
  1149   000A9C                     
  1150                           ; BSR set to: 0
  1151                           ;main.c: 472:             Tx_USART();
  1152   000A9C  EC12  F009         	call	_Tx_USART	;wreg free
  1153   000AA0  EF12  F004         	goto	l2188
  1154   000AA4  EF07  F000         	goto	start
  1155   000AA8                     __end_of_main:
  1156                           	callstack 0
  1157                           
  1158 ;; *************** function _lcd_init *****************
  1159 ;; Defined at:
  1160 ;;		line 204 in file "main.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1176 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1177 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1178 ;;Total ram usage:        1 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; Hardware stack levels required when called: 3
  1181 ;; This function calls:
  1182 ;;		_Lcd_Cmd
  1183 ;;		_Lcd_Port
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text1
  1190   00132E                     __ptext1:
  1191                           	callstack 0
  1192   00132E                     _lcd_init:
  1193                           	callstack 27
  1194   00132E                     
  1195                           ;main.c: 205:     Lcd_Port(0x00);
  1196   00132E  0E00               	movlw	0
  1197   001330  EC03  F00A         	call	_Lcd_Port
  1198   001334                     
  1199                           ;main.c: 206:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1200   001334  0E1A               	movlw	26
  1201   001336  6E06               	movwf	??_lcd_init^0,c
  1202   001338  0EF8               	movlw	248
  1203   00133A                     u1627:
  1204   00133A  2EE8               	decfsz	wreg,f,c
  1205   00133C  D7FE               	bra	u1627
  1206   00133E  2E06               	decfsz	??_lcd_init^0,f,c
  1207   001340  D7FC               	bra	u1627
  1208   001342  D000               	nop2	
  1209   001344                     
  1210                           ;main.c: 207:     Lcd_Cmd(0x03);
  1211   001344  0E03               	movlw	3
  1212   001346  EC4F  F00B         	call	_Lcd_Cmd
  1213   00134A                     
  1214                           ;main.c: 208:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1215   00134A  0E07               	movlw	7
  1216   00134C  6E06               	movwf	??_lcd_init^0,c
  1217   00134E  0E7D               	movlw	125
  1218   001350                     u1637:
  1219   001350  2EE8               	decfsz	wreg,f,c
  1220   001352  D7FE               	bra	u1637
  1221   001354  2E06               	decfsz	??_lcd_init^0,f,c
  1222   001356  D7FC               	bra	u1637
  1223   001358  F000               	nop	
  1224   00135A                     
  1225                           ;main.c: 209:     Lcd_Cmd(0x03);
  1226   00135A  0E03               	movlw	3
  1227   00135C  EC4F  F00B         	call	_Lcd_Cmd
  1228   001360                     
  1229                           ;main.c: 210:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1230   001360  0E0F               	movlw	15
  1231   001362  6E06               	movwf	??_lcd_init^0,c
  1232   001364  0E48               	movlw	72
  1233   001366                     u1647:
  1234   001366  2EE8               	decfsz	wreg,f,c
  1235   001368  D7FE               	bra	u1647
  1236   00136A  2E06               	decfsz	??_lcd_init^0,f,c
  1237   00136C  D7FC               	bra	u1647
  1238   00136E                     
  1239                           ;main.c: 211:     Lcd_Cmd(0x03);
  1240   00136E  0E03               	movlw	3
  1241   001370  EC4F  F00B         	call	_Lcd_Cmd
  1242   001374                     
  1243                           ;main.c: 213:     Lcd_Cmd(0x02);
  1244   001374  0E02               	movlw	2
  1245   001376  EC4F  F00B         	call	_Lcd_Cmd
  1246   00137A                     
  1247                           ;main.c: 214:     Lcd_Cmd(0x02);
  1248   00137A  0E02               	movlw	2
  1249   00137C  EC4F  F00B         	call	_Lcd_Cmd
  1250   001380                     
  1251                           ;main.c: 215:     Lcd_Cmd(0x08);
  1252   001380  0E08               	movlw	8
  1253   001382  EC4F  F00B         	call	_Lcd_Cmd
  1254   001386                     
  1255                           ;main.c: 216:     Lcd_Cmd(0x00);
  1256   001386  0E00               	movlw	0
  1257   001388  EC4F  F00B         	call	_Lcd_Cmd
  1258   00138C                     
  1259                           ;main.c: 217:     Lcd_Cmd(0x0C);
  1260   00138C  0E0C               	movlw	12
  1261   00138E  EC4F  F00B         	call	_Lcd_Cmd
  1262   001392                     
  1263                           ;main.c: 218:     Lcd_Cmd(0x00);
  1264   001392  0E00               	movlw	0
  1265   001394  EC4F  F00B         	call	_Lcd_Cmd
  1266   001398                     
  1267                           ;main.c: 219:     Lcd_Cmd(0x06);
  1268   001398  0E06               	movlw	6
  1269   00139A  EC4F  F00B         	call	_Lcd_Cmd
  1270   00139E  0012               	return		;funcret
  1271   0013A0                     __end_of_lcd_init:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _Tx_USART *****************
  1275 ;; Defined at:
  1276 ;;		line 343 in file "main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 9
  1297 ;; This function calls:
  1298 ;;		_Transmite
  1299 ;;		_lcd_clear
  1300 ;;		_lcd_gotoxy
  1301 ;;		_lcd_putc
  1302 ;;		_lcd_write_char
  1303 ;;		_sprintf
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text2
  1310   001224                     __ptext2:
  1311                           	callstack 0
  1312   001224                     _Tx_USART:
  1313                           	callstack 21
  1314   001224                     
  1315                           ;main.c: 344:     TxUSART = ByteSup;
  1316   001224  C057  F05B         	movff	_ByteSup,_TxUSART
  1317   001228                     
  1318                           ;main.c: 345:     Transmite();
  1319   001228  EC2D  F00B         	call	_Transmite	;wreg free
  1320   00122C                     
  1321                           ;main.c: 346:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1322   00122C  0E03               	movlw	3
  1323   00122E                     u1657:
  1324   00122E  2EE8               	decfsz	wreg,f,c
  1325   001230  D7FE               	bra	u1657
  1326   001232  F000               	nop	
  1327   001234                     
  1328                           ;main.c: 347:     TxUSART = ByteInf;
  1329   001234  C067  F05B         	movff	_ByteInf,_TxUSART
  1330   001238                     
  1331                           ;main.c: 350:     Transmite();
  1332   001238  EC2D  F00B         	call	_Transmite	;wreg free
  1333                           
  1334                           ;main.c: 351:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1335   00123C  0E03               	movlw	3
  1336   00123E                     u1667:
  1337   00123E  2EE8               	decfsz	wreg,f,c
  1338   001240  D7FE               	bra	u1667
  1339   001242  F000               	nop	
  1340   001244                     
  1341                           ;main.c: 352:     lcd_clear();
  1342   001244  EC6A  F00B         	call	_lcd_clear	;wreg free
  1343   001248                     
  1344                           ;main.c: 353:     lcd_gotoxy(1, 1);
  1345   001248  0E01               	movlw	1
  1346   00124A  6E06               	movwf	lcd_gotoxy@b^0,c
  1347   00124C  0E01               	movlw	1
  1348   00124E  ECD0  F009         	call	_lcd_gotoxy
  1349   001252                     
  1350                           ;main.c: 354:     lcd_putc(MensajeRx);
  1351   001252  0E92               	movlw	low _MensajeRx
  1352   001254  6E07               	movwf	lcd_putc@a^0,c
  1353   001256  0E00               	movlw	high _MensajeRx
  1354   001258  6E08               	movwf	(lcd_putc@a+1)^0,c
  1355   00125A  EC58  F009         	call	_lcd_putc	;wreg free
  1356   00125E                     
  1357                           ;main.c: 355:     lcd_putc(" INS=");
  1358   00125E  0E01               	movlw	low STR_1
  1359   001260  6E07               	movwf	lcd_putc@a^0,c
  1360   001262  0E08               	movlw	high STR_1
  1361   001264  6E08               	movwf	(lcd_putc@a+1)^0,c
  1362   001266  EC58  F009         	call	_lcd_putc	;wreg free
  1363   00126A                     
  1364                           ;main.c: 356:     lcd_write_char(Instrumento);
  1365   00126A  5056               	movf	_Instrumento^0,w,c
  1366   00126C  ECEC  F00A         	call	_lcd_write_char
  1367   001270                     
  1368                           ;main.c: 357:     lcd_gotoxy(2, 1);
  1369   001270  0E01               	movlw	1
  1370   001272  6E06               	movwf	lcd_gotoxy@b^0,c
  1371   001274  0E02               	movlw	2
  1372   001276  ECD0  F009         	call	_lcd_gotoxy
  1373   00127A                     
  1374                           ;main.c: 358:     lcd_putc("VAL=");
  1375   00127A  0E07               	movlw	low STR_2
  1376   00127C  6E07               	movwf	lcd_putc@a^0,c
  1377   00127E  0E08               	movlw	high STR_2
  1378   001280  6E08               	movwf	(lcd_putc@a+1)^0,c
  1379   001282  EC58  F009         	call	_lcd_putc	;wreg free
  1380   001286                     
  1381                           ;main.c: 359:     sprintf(MensajeTx, "%4i", ValBIN);
  1382   001286  0E88               	movlw	low _MensajeTx
  1383   001288  6E41               	movwf	sprintf@s^0,c
  1384   00128A  0E00               	movlw	high _MensajeTx
  1385   00128C  6E42               	movwf	(sprintf@s+1)^0,c
  1386   00128E  0E0C               	movlw	low STR_3
  1387   001290  6E43               	movwf	sprintf@fmt^0,c
  1388   001292  0E08               	movlw	high STR_3
  1389   001294  6E44               	movwf	(sprintf@fmt+1)^0,c
  1390   001296  C064  F045         	movff	_ValBIN,?_sprintf+4
  1391   00129A  C065  F046         	movff	_ValBIN+1,?_sprintf+5
  1392   00129E  EC84  F00A         	call	_sprintf	;wreg free
  1393   0012A2                     
  1394                           ;main.c: 360:     lcd_putc(MensajeTx);
  1395   0012A2  0E88               	movlw	low _MensajeTx
  1396   0012A4  6E07               	movwf	lcd_putc@a^0,c
  1397   0012A6  0E00               	movlw	high _MensajeTx
  1398   0012A8  6E08               	movwf	(lcd_putc@a+1)^0,c
  1399   0012AA  EC58  F009         	call	_lcd_putc	;wreg free
  1400   0012AE  0012               	return		;funcret
  1401   0012B0                     __end_of_Tx_USART:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _sprintf *****************
  1405 ;; Defined at:
  1406 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  s               2   64[COMRAM] PTR unsigned char 
  1409 ;;		 -> MensajeTx(5), 
  1410 ;;  fmt             2   66[COMRAM] PTR const unsigned char 
  1411 ;;		 -> STR_3(4), 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  f              12   72[COMRAM] struct _IO_FILE
  1414 ;;  ap              2   70[COMRAM] PTR void [1]
  1415 ;;		 -> ?_sprintf(2), 
  1416 ;;  ret             2    0        int 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  2   64[COMRAM] int 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1426 ;;      Params:         6       0       0       0       0       0       0       0       0
  1427 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1429 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1430 ;;Total ram usage:       20 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 8
  1433 ;; This function calls:
  1434 ;;		_vfprintf
  1435 ;; This function is called by:
  1436 ;;		_Tx_USART
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text3
  1441   001508                     __ptext3:
  1442                           	callstack 0
  1443   001508                     _sprintf:
  1444                           	callstack 21
  1445   001508  0E45               	movlw	low (?_sprintf+4)
  1446   00150A  6E47               	movwf	sprintf@ap^0,c
  1447   00150C  0E00               	movlw	high (?_sprintf+4)
  1448   00150E  6E48               	movwf	(sprintf@ap+1)^0,c
  1449   001510  C041  F049         	movff	sprintf@s,sprintf@f
  1450   001514  C042  F04A         	movff	sprintf@s+1,sprintf@f+1
  1451   001518  0E00               	movlw	0
  1452   00151A  6E4D               	movwf	(sprintf@f+4)^0,c
  1453   00151C  0E00               	movlw	0
  1454   00151E  6E4C               	movwf	(sprintf@f+3)^0,c
  1455   001520  0E00               	movlw	0
  1456   001522  6E54               	movwf	(sprintf@f+11)^0,c
  1457   001524  0E00               	movlw	0
  1458   001526  6E53               	movwf	(sprintf@f+10)^0,c
  1459   001528  0E49               	movlw	low sprintf@f
  1460   00152A  6E39               	movwf	vfprintf@fp^0,c
  1461   00152C  0E00               	movlw	high sprintf@f
  1462   00152E  6E3A               	movwf	(vfprintf@fp+1)^0,c
  1463   001530  C043  F03B         	movff	sprintf@fmt,vfprintf@fmt
  1464   001534  C044  F03C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1465   001538  0E47               	movlw	low sprintf@ap
  1466   00153A  6E3D               	movwf	vfprintf@ap^0,c
  1467   00153C  0E00               	movlw	high sprintf@ap
  1468   00153E  6E3E               	movwf	(vfprintf@ap+1)^0,c
  1469   001540  EC5D  F00A         	call	_vfprintf	;wreg free
  1470   001544  504C               	movf	(sprintf@f+3)^0,w,c
  1471   001546  2441               	addwf	sprintf@s^0,w,c
  1472   001548  6ED9               	movwf	fsr2l,c
  1473   00154A  504D               	movf	(sprintf@f+4)^0,w,c
  1474   00154C  2042               	addwfc	(sprintf@s+1)^0,w,c
  1475   00154E  6EDA               	movwf	fsr2h,c
  1476   001550  6ADF               	clrf	indf2,c
  1477   001552  0012               	return		;funcret
  1478   001554                     __end_of_sprintf:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _vfprintf *****************
  1482 ;; Defined at:
  1483 ;;		line 1546 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
  1486 ;;		 -> sprintf@f(12), 
  1487 ;;  fmt             2   58[COMRAM] PTR const unsigned char 
  1488 ;;		 -> STR_3(4), 
  1489 ;;  ap              2   60[COMRAM] PTR PTR void 
  1490 ;;		 -> sprintf@ap(2), 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  cfmt            2   62[COMRAM] PTR unsigned char 
  1493 ;;		 -> STR_3(4), 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  2   56[COMRAM] int 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1503 ;;      Params:         6       0       0       0       0       0       0       0       0
  1504 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1506 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1507 ;;Total ram usage:        8 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 7
  1510 ;; This function calls:
  1511 ;;		_vfpfcnvrt
  1512 ;; This function is called by:
  1513 ;;		_sprintf
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text4
  1518   0014BA                     __ptext4:
  1519                           	callstack 0
  1520   0014BA                     _vfprintf:
  1521                           	callstack 21
  1522   0014BA                     
  1523                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1524   0014BA  C03B  F03F         	movff	vfprintf@fmt,vfprintf@cfmt
  1525   0014BE  C03C  F040         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1526                           
  1527                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1528   0014C2  EF71  F00A         	goto	l1838
  1529   0014C6                     l1836:
  1530                           
  1531                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1532   0014C6  C039  F02B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1533   0014CA  C03A  F02C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1534   0014CE  0E3F               	movlw	low vfprintf@cfmt
  1535   0014D0  6E2D               	movwf	vfpfcnvrt@fmt^0,c
  1536   0014D2  0E00               	movlw	high vfprintf@cfmt
  1537   0014D4  6E2E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1538   0014D6  C03D  F02F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1539   0014DA  C03E  F030         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1540   0014DE  EC1E  F006         	call	_vfpfcnvrt	;wreg free
  1541   0014E2                     l1838:
  1542                           
  1543                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1544   0014E2  C03F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1545   0014E6  C040  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1546   0014EA                     	if	0	;tblptru may be non-zero
  1547   0014EA                     	endif
  1548   0014EA                     	if	0	;tblptru may be non-zero
  1549   0014EA                     	endif
  1550   0014EA  0008               	tblrd		*
  1551   0014EC  50F5               	movf	tablat,w,c
  1552   0014EE  0900               	iorlw	0
  1553   0014F0  A4D8               	btfss	status,2,c
  1554   0014F2  EF7D  F00A         	goto	u1151
  1555   0014F6  EF7F  F00A         	goto	u1150
  1556   0014FA                     u1151:
  1557   0014FA  EF63  F00A         	goto	l1836
  1558   0014FE                     u1150:
  1559   0014FE                     
  1560                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1561   0014FE  0E00               	movlw	0
  1562   001500  6E3A               	movwf	(?_vfprintf+1)^0,c
  1563   001502  0E00               	movlw	0
  1564   001504  6E39               	movwf	?_vfprintf^0,c
  1565   001506  0012               	return		;funcret
  1566   001508                     __end_of_vfprintf:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _vfpfcnvrt *****************
  1570 ;; Defined at:
  1571 ;;		line 1048 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  1574 ;;		 -> sprintf@f(12), 
  1575 ;;  fmt             2   44[COMRAM] PTR PTR unsigned char 
  1576 ;;		 -> vfprintf@cfmt(2), 
  1577 ;;  ap              2   46[COMRAM] PTR PTR void 
  1578 ;;		 -> sprintf@ap(2), 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  convarg         4   50[COMRAM] struct .
  1581 ;;  cp              2   54[COMRAM] PTR unsigned char 
  1582 ;;		 -> STR_3(4), 
  1583 ;;  i               2    0        int 
  1584 ;;  done            2    0        int 
  1585 ;;  c               1    0        unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1595 ;;      Params:         6       0       0       0       0       0       0       0       0
  1596 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1597 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1598 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1599 ;;Total ram usage:       14 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 6
  1602 ;; This function calls:
  1603 ;;		_dtoa
  1604 ;;		_fputc
  1605 ;;		_read_prec_or_width
  1606 ;; This function is called by:
  1607 ;;		_vfprintf
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text5
  1612   000C3C                     __ptext5:
  1613                           	callstack 0
  1614   000C3C                     _vfpfcnvrt:
  1615                           	callstack 21
  1616   000C3C                     
  1617                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1618   000C3C  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1619   000C40  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1620   000C44  CFDE FFF6          	movff	postinc2,tblptrl
  1621   000C48  CFDD FFF7          	movff	postdec2,tblptrh
  1622   000C4C                     	if	0	;tblptru may be non-zero
  1623   000C4C                     	endif
  1624   000C4C                     	if	0	;tblptru may be non-zero
  1625   000C4C                     	endif
  1626   000C4C  0008               	tblrd		*
  1627   000C4E  50F5               	movf	tablat,w,c
  1628   000C50  0A25               	xorlw	37
  1629   000C52  A4D8               	btfss	status,2,c
  1630   000C54  EF2E  F006         	goto	u1111
  1631   000C58  EF30  F006         	goto	u1110
  1632   000C5C                     u1111:
  1633   000C5C  EFB6  F006         	goto	l1798
  1634   000C60                     u1110:
  1635   000C60                     
  1636                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1637   000C60  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1638   000C64  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1639   000C68  2ADE               	incf	postinc2,f,c
  1640   000C6A  0E00               	movlw	0
  1641   000C6C  22DD               	addwfc	postdec2,f,c
  1642   000C6E                     
  1643                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1644   000C6E  0E00               	movlw	0
  1645   000C70  0100               	movlb	0	; () banked
  1646   000C72  6F61               	movwf	(_width+1)& (0+255),b
  1647   000C74  0E00               	movlw	0
  1648   000C76  6F60               	movwf	_width& (0+255),b
  1649   000C78  C060  F055         	movff	_width,_flags
  1650   000C7C                     
  1651                           ; BSR set to: 0
  1652                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1653   000C7C  6962               	setf	_prec& (0+255),b
  1654   000C7E  6963               	setf	(_prec+1)& (0+255),b
  1655   000C80                     
  1656                           ; BSR set to: 0
  1657                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1658   000C80  C02D  F009         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1659   000C84  C02E  F00A         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1660   000C88  C02F  F00B         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1661   000C8C  C030  F00C         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1662   000C90  ECA0  F007         	call	_read_prec_or_width	;wreg free
  1663   000C94  C009  F060         	movff	?_read_prec_or_width,_width
  1664   000C98  C00A  F061         	movff	?_read_prec_or_width+1,_width+1
  1665   000C9C                     
  1666                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  1667   000C9C  0100               	movlb	0	; () banked
  1668   000C9E  BF61               	btfsc	(_width+1)& (0+255),7,b
  1669   000CA0  EF56  F006         	goto	u1120
  1670   000CA4  EF54  F006         	goto	u1121
  1671   000CA8                     u1121:
  1672   000CA8  EF5B  F006         	goto	l1782
  1673   000CAC                     u1120:
  1674   000CAC                     
  1675                           ; BSR set to: 0
  1676                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  1677   000CAC  8055               	bsf	_flags^0,0,c
  1678                           
  1679                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  1680   000CAE  6D60               	negf	_width& (0+255),b
  1681   000CB0  1F61               	comf	(_width+1)& (0+255),f,b
  1682   000CB2  B0D8               	btfsc	status,0,c
  1683   000CB4  2B61               	incf	(_width+1)& (0+255),f,b
  1684   000CB6                     l1782:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1688   000CB6  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1689   000CBA  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1690   000CBE  CFDE F037          	movff	postinc2,vfpfcnvrt@cp
  1691   000CC2  CFDD F038          	movff	postdec2,vfpfcnvrt@cp+1
  1692   000CC6                     
  1693                           ; BSR set to: 0
  1694                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1695   000CC6  C037  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1696   000CCA  C038  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1697   000CCE                     	if	0	;tblptru may be non-zero
  1698   000CCE                     	endif
  1699   000CCE                     	if	0	;tblptru may be non-zero
  1700   000CCE                     	endif
  1701   000CCE  0008               	tblrd		*
  1702   000CD0  50F5               	movf	tablat,w,c
  1703   000CD2  0A64               	xorlw	100
  1704   000CD4  B4D8               	btfsc	status,2,c
  1705   000CD6  EF6F  F006         	goto	u1131
  1706   000CDA  EF71  F006         	goto	u1130
  1707   000CDE                     u1131:
  1708   000CDE  EF7F  F006         	goto	l1788
  1709   000CE2                     u1130:
  1710   000CE2                     
  1711                           ; BSR set to: 0
  1712   000CE2  C037  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1713   000CE6  C038  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1714   000CEA                     	if	0	;tblptru may be non-zero
  1715   000CEA                     	endif
  1716   000CEA                     	if	0	;tblptru may be non-zero
  1717   000CEA                     	endif
  1718   000CEA  0008               	tblrd		*
  1719   000CEC  50F5               	movf	tablat,w,c
  1720   000CEE  0A69               	xorlw	105
  1721   000CF0  A4D8               	btfss	status,2,c
  1722   000CF2  EF7D  F006         	goto	u1141
  1723   000CF6  EF7F  F006         	goto	u1140
  1724   000CFA                     u1141:
  1725   000CFA  EFAD  F006         	goto	l1794
  1726   000CFE                     u1140:
  1727   000CFE                     l1788:
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1731   000CFE  C02F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1732   000D02  C030  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1733   000D06  CFDF F031          	movff	indf2,??_vfpfcnvrt
  1734   000D0A  0E02               	movlw	2
  1735   000D0C  26DE               	addwf	postinc2,f,c
  1736   000D0E  CFDF F032          	movff	indf2,??_vfpfcnvrt+1
  1737   000D12  0E00               	movlw	0
  1738   000D14  22DD               	addwfc	postdec2,f,c
  1739   000D16  C031  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1740   000D1A  C032  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1741   000D1E  CFDE F033          	movff	postinc2,vfpfcnvrt@convarg
  1742   000D22  CFDD F034          	movff	postdec2,vfpfcnvrt@convarg+1
  1743                           
  1744                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1745   000D26  0E01               	movlw	1
  1746   000D28  2437               	addwf	vfpfcnvrt@cp^0,w,c
  1747   000D2A  6E31               	movwf	??_vfpfcnvrt^0,c
  1748   000D2C  0E00               	movlw	0
  1749   000D2E  2038               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1750   000D30  6E32               	movwf	(??_vfpfcnvrt+1)^0,c
  1751   000D32  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1752   000D36  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1753   000D3A  C031  FFDE         	movff	??_vfpfcnvrt,postinc2
  1754   000D3E  C032  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1755   000D42                     
  1756                           ; BSR set to: 0
  1757                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1758   000D42  C02B  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1759   000D46  C02C  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1760   000D4A  C033  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1761   000D4E  C034  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1762   000D52  EC54  F005         	call	_dtoa	;wreg free
  1763   000D56  EFCA  F006         	goto	l954
  1764   000D5A                     l1794:
  1765                           
  1766                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1767   000D5A  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1768   000D5E  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1769   000D62  2ADE               	incf	postinc2,f,c
  1770   000D64  0E00               	movlw	0
  1771   000D66  22DD               	addwfc	postdec2,f,c
  1772   000D68  EFCA  F006         	goto	l954
  1773   000D6C                     l1798:
  1774                           
  1775                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1776   000D6C  C02D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1777   000D70  C02E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1778   000D74  CFDE FFF6          	movff	postinc2,tblptrl
  1779   000D78  CFDD FFF7          	movff	postdec2,tblptrh
  1780   000D7C                     	if	0	;tblptru may be non-zero
  1781   000D7C                     	endif
  1782   000D7C                     	if	0	;tblptru may be non-zero
  1783   000D7C                     	endif
  1784   000D7C  0008               	tblrd		*
  1785   000D7E  50F5               	movf	tablat,w,c
  1786   000D80  6E03               	movwf	fputc@c^0,c
  1787   000D82  6A04               	clrf	(fputc@c+1)^0,c
  1788   000D84  C02B  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1789   000D88  C02C  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1790   000D8C  EC3B  F007         	call	_fputc	;wreg free
  1791   000D90  EFAD  F006         	goto	l1794
  1792   000D94                     l954:
  1793   000D94  0012               	return		;funcret
  1794   000D96                     __end_of_vfpfcnvrt:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _read_prec_or_width *****************
  1798 ;; Defined at:
  1799 ;;		line 1029 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  fmt             2    8[COMRAM] PTR PTR const unsigned c
  1802 ;;		 -> vfprintf@cfmt(2), 
  1803 ;;  ap              2   10[COMRAM] PTR PTR void [1]
  1804 ;;		 -> sprintf@ap(2), 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  c               1   14[COMRAM] unsigned char 
  1807 ;;  n               2   15[COMRAM] int 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  2    8[COMRAM] int 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1817 ;;      Params:         4       0       0       0       0       0       0       0       0
  1818 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1819 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1820 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1821 ;;Total ram usage:        9 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 2
  1824 ;; This function calls:
  1825 ;;		___wmul
  1826 ;; This function is called by:
  1827 ;;		_vfpfcnvrt
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text6
  1832   000F40                     __ptext6:
  1833                           	callstack 0
  1834   000F40                     _read_prec_or_width:
  1835                           	callstack 24
  1836   000F40                     
  1837                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  1838   000F40  0E00               	movlw	0
  1839   000F42  6E11               	movwf	(read_prec_or_width@n+1)^0,c
  1840   000F44  0E00               	movlw	0
  1841   000F46  6E10               	movwf	read_prec_or_width@n^0,c
  1842   000F48                     
  1843                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  1844   000F48  C009  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1845   000F4C  C00A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1846   000F50  CFDE FFF6          	movff	postinc2,tblptrl
  1847   000F54  CFDD FFF7          	movff	postdec2,tblptrh
  1848   000F58                     	if	0	;tblptru may be non-zero
  1849   000F58                     	endif
  1850   000F58                     	if	0	;tblptru may be non-zero
  1851   000F58                     	endif
  1852   000F58  0008               	tblrd		*
  1853   000F5A  50F5               	movf	tablat,w,c
  1854   000F5C  0A2A               	xorlw	42
  1855   000F5E  A4D8               	btfss	status,2,c
  1856   000F60  EFB4  F007         	goto	u1051
  1857   000F64  EFB6  F007         	goto	u1050
  1858   000F68                     u1051:
  1859   000F68  EFEA  F007         	goto	l1750
  1860   000F6C                     u1050:
  1861   000F6C                     
  1862                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  1863   000F6C  C009  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1864   000F70  C00A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1865   000F74  2ADE               	incf	postinc2,f,c
  1866   000F76  0E00               	movlw	0
  1867   000F78  22DD               	addwfc	postdec2,f,c
  1868                           
  1869                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1870   000F7A  C00B  FFD9         	movff	read_prec_or_width@ap,fsr2l
  1871   000F7E  C00C  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  1872   000F82  CFDF F00D          	movff	indf2,??_read_prec_or_width
  1873   000F86  0E02               	movlw	2
  1874   000F88  26DE               	addwf	postinc2,f,c
  1875   000F8A  CFDF F00E          	movff	indf2,??_read_prec_or_width+1
  1876   000F8E  0E00               	movlw	0
  1877   000F90  22DD               	addwfc	postdec2,f,c
  1878   000F92  C00D  FFD9         	movff	??_read_prec_or_width,fsr2l
  1879   000F96  C00E  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  1880   000F9A  CFDE F010          	movff	postinc2,read_prec_or_width@n
  1881   000F9E  CFDD F011          	movff	postdec2,read_prec_or_width@n+1
  1882                           
  1883                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  1884   000FA2  EFFE  F007         	goto	l942
  1885   000FA6                     l1746:
  1886                           
  1887                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  1888   000FA6  C010  F003         	movff	read_prec_or_width@n,___wmul@multiplier
  1889   000FAA  C011  F004         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1890   000FAE  0E00               	movlw	0
  1891   000FB0  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  1892   000FB2  0E0A               	movlw	10
  1893   000FB4  6E05               	movwf	___wmul@multiplicand^0,c
  1894   000FB6  EC08  F00B         	call	___wmul	;wreg free
  1895   000FBA  500F               	movf	read_prec_or_width@c^0,w,c
  1896   000FBC  2403               	addwf	?___wmul^0,w,c
  1897   000FBE  6E10               	movwf	read_prec_or_width@n^0,c
  1898   000FC0  0E00               	movlw	0
  1899   000FC2  2004               	addwfc	(?___wmul+1)^0,w,c
  1900   000FC4  6E11               	movwf	(read_prec_or_width@n+1)^0,c
  1901   000FC6                     
  1902                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  1903   000FC6  C009  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1904   000FCA  C00A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1905   000FCE  2ADE               	incf	postinc2,f,c
  1906   000FD0  0E00               	movlw	0
  1907   000FD2  22DD               	addwfc	postdec2,f,c
  1908   000FD4                     l1750:
  1909                           
  1910                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1911   000FD4  C009  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1912   000FD8  C00A  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1913   000FDC  CFDE FFF6          	movff	postinc2,tblptrl
  1914   000FE0  CFDD FFF7          	movff	postdec2,tblptrh
  1915   000FE4                     	if	0	;tblptru may be non-zero
  1916   000FE4                     	endif
  1917   000FE4                     	if	0	;tblptru may be non-zero
  1918   000FE4                     	endif
  1919   000FE4  0008               	tblrd		*
  1920   000FE6  50F5               	movf	tablat,w,c
  1921   000FE8  0FD0               	addlw	208
  1922   000FEA  6E0F               	movwf	read_prec_or_width@c^0,c
  1923   000FEC  0E09               	movlw	9
  1924   000FEE  640F               	cpfsgt	read_prec_or_width@c^0,c
  1925   000FF0  EFFC  F007         	goto	u1061
  1926   000FF4  EFFE  F007         	goto	u1060
  1927   000FF8                     u1061:
  1928   000FF8  EFD3  F007         	goto	l1746
  1929   000FFC                     u1060:
  1930   000FFC                     l942:
  1931                           
  1932                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  1933   000FFC  C010  F009         	movff	read_prec_or_width@n,?_read_prec_or_width
  1934   001000  C011  F00A         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1935   001004  0012               	return		;funcret
  1936   001006                     __end_of_read_prec_or_width:
  1937                           	callstack 0
  1938                           
  1939 ;; *************** function ___wmul *****************
  1940 ;; Defined at:
  1941 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  multiplier      2    2[COMRAM] unsigned int 
  1944 ;;  multiplicand    2    4[COMRAM] unsigned int 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  product         2    6[COMRAM] unsigned int 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  2    2[COMRAM] unsigned int 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, prodl, prodh
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         4       0       0       0       0       0       0       0       0
  1957 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1960 ;;Total ram usage:        6 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_read_prec_or_width
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text7
  1971   001610                     __ptext7:
  1972                           	callstack 0
  1973   001610                     ___wmul:
  1974                           	callstack 24
  1975   001610  5003               	movf	___wmul@multiplier^0,w,c
  1976   001612  0205               	mulwf	___wmul@multiplicand^0,c
  1977   001614  CFF3 F007          	movff	prodl,___wmul@product
  1978   001618  CFF4 F008          	movff	prodh,___wmul@product+1
  1979   00161C  5003               	movf	___wmul@multiplier^0,w,c
  1980   00161E  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  1981   001620  50F3               	movf	243,w,c
  1982   001622  2608               	addwf	(___wmul@product+1)^0,f,c
  1983   001624  5004               	movf	(___wmul@multiplier+1)^0,w,c
  1984   001626  0205               	mulwf	___wmul@multiplicand^0,c
  1985   001628  50F3               	movf	243,w,c
  1986   00162A  2608               	addwf	(___wmul@product+1)^0,f,c
  1987   00162C  C007  F003         	movff	___wmul@product,?___wmul
  1988   001630  C008  F004         	movff	___wmul@product+1,?___wmul+1
  1989   001634  0012               	return		;funcret
  1990   001636                     __end_of___wmul:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function _dtoa *****************
  1994 ;; Defined at:
  1995 ;;		line 470 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1998 ;;		 -> sprintf@f(12), 
  1999 ;;  d               2   31[COMRAM] int 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  i               2   39[COMRAM] int 
  2002 ;;  w               2   37[COMRAM] int 
  2003 ;;  p               2   35[COMRAM] int 
  2004 ;;  s               1   41[COMRAM] unsigned char 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2014 ;;      Params:         4       0       0       0       0       0       0       0       0
  2015 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2017 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2018 ;;Total ram usage:       13 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 5
  2021 ;; This function calls:
  2022 ;;		___awdiv
  2023 ;;		___awmod
  2024 ;;		_abs
  2025 ;;		_pad
  2026 ;; This function is called by:
  2027 ;;		_vfpfcnvrt
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text8
  2032   000AA8                     __ptext8:
  2033                           	callstack 0
  2034   000AA8                     _dtoa:
  2035                           	callstack 21
  2036   000AA8                     
  2037                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2038   000AA8  BE21               	btfsc	(dtoa@d+1)^0,7,c
  2039   000AAA  EF59  F005         	goto	u951
  2040   000AAE  EF5C  F005         	goto	u950
  2041   000AB2                     u951:
  2042   000AB2  0E01               	movlw	1
  2043   000AB4  EF5D  F005         	goto	u960
  2044   000AB8                     u950:
  2045   000AB8  0E00               	movlw	0
  2046   000ABA                     u960:
  2047   000ABA  6E2A               	movwf	dtoa@s^0,c
  2048   000ABC                     
  2049                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2050   000ABC  502A               	movf	dtoa@s^0,w,c
  2051   000ABE  B4D8               	btfsc	status,2,c
  2052   000AC0  EF64  F005         	goto	u971
  2053   000AC4  EF66  F005         	goto	u970
  2054   000AC8                     u971:
  2055   000AC8  EF6A  F005         	goto	l1696
  2056   000ACC                     u970:
  2057   000ACC                     
  2058                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2059   000ACC  6C20               	negf	dtoa@d^0,c
  2060   000ACE  1E21               	comf	(dtoa@d+1)^0,f,c
  2061   000AD0  B0D8               	btfsc	status,0,c
  2062   000AD2  2A21               	incf	(dtoa@d+1)^0,f,c
  2063   000AD4                     l1696:
  2064                           
  2065                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2066   000AD4  0100               	movlb	0	; () banked
  2067   000AD6  BF63               	btfsc	(_prec+1)& (0+255),7,b
  2068   000AD8  EF72  F005         	goto	u980
  2069   000ADC  EF70  F005         	goto	u981
  2070   000AE0                     u981:
  2071   000AE0  EF78  F005         	goto	l924
  2072   000AE4                     u980:
  2073   000AE4                     
  2074                           ; BSR set to: 0
  2075   000AE4  0E00               	movlw	0
  2076   000AE6  6E25               	movwf	(dtoa@p+1)^0,c
  2077   000AE8  0E01               	movlw	1
  2078   000AEA  6E24               	movwf	dtoa@p^0,c
  2079   000AEC  EF7C  F005         	goto	l926
  2080   000AF0                     l924:
  2081                           
  2082                           ; BSR set to: 0
  2083   000AF0  C062  F024         	movff	_prec,dtoa@p
  2084   000AF4  C063  F025         	movff	_prec+1,dtoa@p+1
  2085   000AF8                     l926:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2089   000AF8  C060  F026         	movff	_width,dtoa@w
  2090   000AFC  C061  F027         	movff	_width+1,dtoa@w+1
  2091   000B00                     
  2092                           ; BSR set to: 0
  2093                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2094   000B00  502A               	movf	dtoa@s^0,w,c
  2095   000B02  B4D8               	btfsc	status,2,c
  2096   000B04  EF86  F005         	goto	u991
  2097   000B08  EF88  F005         	goto	u990
  2098   000B0C                     u991:
  2099   000B0C  EF9F  F005         	goto	l927
  2100   000B10                     u990:
  2101   000B10                     
  2102                           ; BSR set to: 0
  2103                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;D:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2104   000B10  0626               	decf	dtoa@w^0,f,c
  2105   000B12  A0D8               	btfss	status,0,c
  2106   000B14  0627               	decf	(dtoa@w+1)^0,f,c
  2107   000B16                     
  2108                           ; BSR set to: 0
  2109                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2110   000B16  502A               	movf	dtoa@s^0,w,c
  2111   000B18  A4D8               	btfss	status,2,c
  2112   000B1A  EF91  F005         	goto	u1001
  2113   000B1E  EF93  F005         	goto	u1000
  2114   000B22                     u1001:
  2115   000B22  EF99  F005         	goto	l1708
  2116   000B26                     u1000:
  2117   000B26                     
  2118                           ; BSR set to: 0
  2119   000B26  0E00               	movlw	0
  2120   000B28  6E23               	movwf	(_dtoa$1162+1)^0,c
  2121   000B2A  0E2B               	movlw	43
  2122   000B2C  6E22               	movwf	_dtoa$1162^0,c
  2123   000B2E  EF9D  F005         	goto	l1710
  2124   000B32                     l1708:
  2125                           
  2126                           ; BSR set to: 0
  2127   000B32  0E00               	movlw	0
  2128   000B34  6E23               	movwf	(_dtoa$1162+1)^0,c
  2129   000B36  0E2D               	movlw	45
  2130   000B38  6E22               	movwf	_dtoa$1162^0,c
  2131   000B3A                     l1710:
  2132                           
  2133                           ; BSR set to: 0
  2134   000B3A  C022  F02A         	movff	_dtoa$1162,dtoa@s
  2135   000B3E                     l927:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2139   000B3E  0E00               	movlw	0
  2140   000B40  6E29               	movwf	(dtoa@i+1)^0,c
  2141   000B42  0E1F               	movlw	31
  2142   000B44  6E28               	movwf	dtoa@i^0,c
  2143   000B46                     
  2144                           ; BSR set to: 0
  2145                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2146   000B46  0E00               	movlw	0
  2147   000B48  6F87               	movwf	(_dbuf+31)& (0+255),b
  2148                           
  2149                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2150   000B4A  EFD7  F005         	goto	l1724
  2151   000B4E                     l1714:
  2152                           
  2153                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;D:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2154   000B4E  0628               	decf	dtoa@i^0,f,c
  2155   000B50  A0D8               	btfss	status,0,c
  2156   000B52  0629               	decf	(dtoa@i+1)^0,f,c
  2157   000B54                     
  2158                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2159   000B54  0E68               	movlw	low _dbuf
  2160   000B56  2428               	addwf	dtoa@i^0,w,c
  2161   000B58  6ED9               	movwf	fsr2l,c
  2162   000B5A  0E00               	movlw	high _dbuf
  2163   000B5C  2029               	addwfc	(dtoa@i+1)^0,w,c
  2164   000B5E  6EDA               	movwf	fsr2h,c
  2165   000B60  C020  F003         	movff	dtoa@d,___awmod@dividend
  2166   000B64  C021  F004         	movff	dtoa@d+1,___awmod@dividend+1
  2167   000B68  0E00               	movlw	0
  2168   000B6A  6E06               	movwf	(___awmod@divisor+1)^0,c
  2169   000B6C  0E0A               	movlw	10
  2170   000B6E  6E05               	movwf	___awmod@divisor^0,c
  2171   000B70  EC65  F008         	call	___awmod	;wreg free
  2172   000B74  C003  F009         	movff	?___awmod,abs@a
  2173   000B78  C004  F00A         	movff	?___awmod+1,abs@a+1
  2174   000B7C  ECCC  F00A         	call	_abs	;wreg free
  2175   000B80  5009               	movf	?_abs^0,w,c
  2176   000B82  0F30               	addlw	48
  2177   000B84  6EDF               	movwf	indf2,c
  2178   000B86                     
  2179                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2180   000B86  0624               	decf	dtoa@p^0,f,c
  2181   000B88  A0D8               	btfss	status,0,c
  2182   000B8A  0625               	decf	(dtoa@p+1)^0,f,c
  2183   000B8C                     
  2184                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2185   000B8C  0626               	decf	dtoa@w^0,f,c
  2186   000B8E  A0D8               	btfss	status,0,c
  2187   000B90  0627               	decf	(dtoa@w+1)^0,f,c
  2188   000B92                     
  2189                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2190   000B92  C020  F003         	movff	dtoa@d,___awdiv@dividend
  2191   000B96  C021  F004         	movff	dtoa@d+1,___awdiv@dividend+1
  2192   000B9A  0E00               	movlw	0
  2193   000B9C  6E06               	movwf	(___awdiv@divisor+1)^0,c
  2194   000B9E  0E0A               	movlw	10
  2195   000BA0  6E05               	movwf	___awdiv@divisor^0,c
  2196   000BA2  EC03  F008         	call	___awdiv	;wreg free
  2197   000BA6  C003  F020         	movff	?___awdiv,dtoa@d
  2198   000BAA  C004  F021         	movff	?___awdiv+1,dtoa@d+1
  2199   000BAE                     l1724:
  2200                           
  2201                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2202   000BAE  BE29               	btfsc	(dtoa@i+1)^0,7,c
  2203   000BB0  EFE2  F005         	goto	u1011
  2204   000BB4  5029               	movf	(dtoa@i+1)^0,w,c
  2205   000BB6  E108               	bnz	u1010
  2206   000BB8  0428               	decf	dtoa@i^0,w,c
  2207   000BBA  A0D8               	btfss	status,0,c
  2208   000BBC  EFE2  F005         	goto	u1011
  2209   000BC0  EFE4  F005         	goto	u1010
  2210   000BC4                     u1011:
  2211   000BC4  EFFA  F005         	goto	l1730
  2212   000BC8                     u1010:
  2213   000BC8  5020               	movf	dtoa@d^0,w,c
  2214   000BCA  1021               	iorwf	(dtoa@d+1)^0,w,c
  2215   000BCC  A4D8               	btfss	status,2,c
  2216   000BCE  EFEB  F005         	goto	u1021
  2217   000BD2  EFED  F005         	goto	u1020
  2218   000BD6                     u1021:
  2219   000BD6  EFA7  F005         	goto	l1714
  2220   000BDA                     u1020:
  2221   000BDA  BE25               	btfsc	(dtoa@p+1)^0,7,c
  2222   000BDC  EFFA  F005         	goto	u1030
  2223   000BE0  5025               	movf	(dtoa@p+1)^0,w,c
  2224   000BE2  E106               	bnz	u1031
  2225   000BE4  0424               	decf	dtoa@p^0,w,c
  2226   000BE6  B0D8               	btfsc	status,0,c
  2227   000BE8  EFF8  F005         	goto	u1031
  2228   000BEC  EFFA  F005         	goto	u1030
  2229   000BF0                     u1031:
  2230   000BF0  EFA7  F005         	goto	l1714
  2231   000BF4                     u1030:
  2232   000BF4                     l1730:
  2233                           
  2234                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2235   000BF4  502A               	movf	dtoa@s^0,w,c
  2236   000BF6  B4D8               	btfsc	status,2,c
  2237   000BF8  EF00  F006         	goto	u1041
  2238   000BFC  EF02  F006         	goto	u1040
  2239   000C00                     u1041:
  2240   000C00  EF0D  F006         	goto	l1736
  2241   000C04                     u1040:
  2242   000C04                     
  2243                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2244   000C04  0628               	decf	dtoa@i^0,f,c
  2245   000C06  A0D8               	btfss	status,0,c
  2246   000C08  0629               	decf	(dtoa@i+1)^0,f,c
  2247   000C0A                     
  2248                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2249   000C0A  0E68               	movlw	low _dbuf
  2250   000C0C  2428               	addwf	dtoa@i^0,w,c
  2251   000C0E  6ED9               	movwf	fsr2l,c
  2252   000C10  0E00               	movlw	high _dbuf
  2253   000C12  2029               	addwfc	(dtoa@i+1)^0,w,c
  2254   000C14  6EDA               	movwf	fsr2h,c
  2255   000C16  C02A  FFDF         	movff	dtoa@s,indf2
  2256   000C1A                     l1736:
  2257                           
  2258                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2259   000C1A  C01E  F013         	movff	dtoa@fp,pad@fp
  2260   000C1E  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  2261   000C22  0E68               	movlw	low _dbuf
  2262   000C24  2428               	addwf	dtoa@i^0,w,c
  2263   000C26  6E15               	movwf	pad@buf^0,c
  2264   000C28  0E00               	movlw	high _dbuf
  2265   000C2A  2029               	addwfc	(dtoa@i+1)^0,w,c
  2266   000C2C  6E16               	movwf	(pad@buf+1)^0,c
  2267   000C2E  C026  F017         	movff	dtoa@w,pad@p
  2268   000C32  C027  F018         	movff	dtoa@w+1,pad@p+1
  2269   000C36  ECBD  F008         	call	_pad	;wreg free
  2270   000C3A  0012               	return		;funcret
  2271   000C3C                     __end_of_dtoa:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _pad *****************
  2275 ;; Defined at:
  2276 ;;		line 152 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  2279 ;;		 -> sprintf@f(12), 
  2280 ;;  buf             2   20[COMRAM] PTR unsigned char 
  2281 ;;		 -> dbuf(32), 
  2282 ;;  p               2   22[COMRAM] int 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  w               2   27[COMRAM] int 
  2285 ;;  i               2   25[COMRAM] int 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2295 ;;      Params:         6       0       0       0       0       0       0       0       0
  2296 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2297 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2298 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2299 ;;Total ram usage:       11 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 4
  2302 ;; This function calls:
  2303 ;;		_fputc
  2304 ;;		_fputs
  2305 ;; This function is called by:
  2306 ;;		_dtoa
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text9
  2311   00117A                     __ptext9:
  2312                           	callstack 0
  2313   00117A                     _pad:
  2314                           	callstack 21
  2315   00117A                     
  2316                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  2317   00117A  A055               	btfss	_flags^0,0,c
  2318   00117C  EFC2  F008         	goto	u901
  2319   001180  EFC4  F008         	goto	u900
  2320   001184                     u901:
  2321   001184  EFCE  F008         	goto	l1672
  2322   001188                     u900:
  2323   001188                     
  2324                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  2325   001188  C015  F00C         	movff	pad@buf,fputs@s
  2326   00118C  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2327   001190  C013  F00E         	movff	pad@fp,fputs@fp
  2328   001194  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2329   001198  ECAA  F00A         	call	_fputs	;wreg free
  2330   00119C                     l1672:
  2331                           
  2332                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  2333   00119C  BE18               	btfsc	(pad@p+1)^0,7,c
  2334   00119E  EFD3  F008         	goto	u911
  2335   0011A2  EFD5  F008         	goto	u910
  2336   0011A6                     u911:
  2337   0011A6  EFDB  F008         	goto	l1676
  2338   0011AA                     u910:
  2339   0011AA  C017  F01C         	movff	pad@p,pad@w
  2340   0011AE  C018  F01D         	movff	pad@p+1,pad@w+1
  2341   0011B2  EFDF  F008         	goto	l914
  2342   0011B6                     l1676:
  2343   0011B6  0E00               	movlw	0
  2344   0011B8  6E1D               	movwf	(pad@w+1)^0,c
  2345   0011BA  0E00               	movlw	0
  2346   0011BC  6E1C               	movwf	pad@w^0,c
  2347   0011BE                     l914:
  2348                           
  2349                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2350   0011BE  0E00               	movlw	0
  2351   0011C0  6E1B               	movwf	(pad@i+1)^0,c
  2352   0011C2  0E00               	movlw	0
  2353   0011C4  6E1A               	movwf	pad@i^0,c
  2354                           
  2355                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2356   0011C6  EFF1  F008         	goto	l1682
  2357   0011CA                     l1678:
  2358                           
  2359                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2360   0011CA  0E00               	movlw	0
  2361   0011CC  6E04               	movwf	(fputc@c+1)^0,c
  2362   0011CE  0E20               	movlw	32
  2363   0011D0  6E03               	movwf	fputc@c^0,c
  2364   0011D2  C013  F005         	movff	pad@fp,fputc@fp
  2365   0011D6  C014  F006         	movff	pad@fp+1,fputc@fp+1
  2366   0011DA  EC3B  F007         	call	_fputc	;wreg free
  2367   0011DE                     
  2368                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2369   0011DE  4A1A               	infsnz	pad@i^0,f,c
  2370   0011E0  2A1B               	incf	(pad@i+1)^0,f,c
  2371   0011E2                     l1682:
  2372                           
  2373                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2374   0011E2  501C               	movf	pad@w^0,w,c
  2375   0011E4  5C1A               	subwf	pad@i^0,w,c
  2376   0011E6  501B               	movf	(pad@i+1)^0,w,c
  2377   0011E8  0A80               	xorlw	128
  2378   0011EA  6E19               	movwf	??_pad^0,c
  2379   0011EC  501D               	movf	(pad@w+1)^0,w,c
  2380   0011EE  0A80               	xorlw	128
  2381   0011F0  5819               	subwfb	??_pad^0,w,c
  2382   0011F2  A0D8               	btfss	status,0,c
  2383   0011F4  EFFE  F008         	goto	u921
  2384   0011F8  EF00  F009         	goto	u920
  2385   0011FC                     u921:
  2386   0011FC  EFE5  F008         	goto	l1678
  2387   001200                     u920:
  2388   001200                     
  2389                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  2390   001200  B055               	btfsc	_flags^0,0,c
  2391   001202  EF05  F009         	goto	u931
  2392   001206  EF07  F009         	goto	u930
  2393   00120A                     u931:
  2394   00120A  EF11  F009         	goto	l919
  2395   00120E                     u930:
  2396   00120E                     
  2397                           ;D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2398   00120E  C015  F00C         	movff	pad@buf,fputs@s
  2399   001212  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2400   001216  C013  F00E         	movff	pad@fp,fputs@fp
  2401   00121A  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2402   00121E  ECAA  F00A         	call	_fputs	;wreg free
  2403   001222                     l919:
  2404   001222  0012               	return		;funcret
  2405   001224                     __end_of_pad:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _fputs *****************
  2409 ;; Defined at:
  2410 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2413 ;;		 -> dbuf(32), 
  2414 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2415 ;;		 -> sprintf@f(12), 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  i               2   16[COMRAM] int 
  2418 ;;  c               1   15[COMRAM] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  2   11[COMRAM] int 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2428 ;;      Params:         4       0       0       0       0       0       0       0       0
  2429 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2431 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2432 ;;Total ram usage:        7 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 3
  2435 ;; This function calls:
  2436 ;;		_fputc
  2437 ;; This function is called by:
  2438 ;;		_pad
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text10
  2443   001554                     __ptext10:
  2444                           	callstack 0
  2445   001554                     _fputs:
  2446                           	callstack 21
  2447   001554  0E00               	movlw	0
  2448   001556  6E12               	movwf	(fputs@i+1)^0,c
  2449   001558  0E00               	movlw	0
  2450   00155A  6E11               	movwf	fputs@i^0,c
  2451   00155C  EFBB  F00A         	goto	l1580
  2452   001560                     l1576:
  2453   001560  C010  F003         	movff	fputs@c,fputc@c
  2454   001564  6A04               	clrf	(fputc@c+1)^0,c
  2455   001566  C00E  F005         	movff	fputs@fp,fputc@fp
  2456   00156A  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  2457   00156E  EC3B  F007         	call	_fputc	;wreg free
  2458   001572  4A11               	infsnz	fputs@i^0,f,c
  2459   001574  2A12               	incf	(fputs@i+1)^0,f,c
  2460   001576                     l1580:
  2461   001576  5011               	movf	fputs@i^0,w,c
  2462   001578  240C               	addwf	fputs@s^0,w,c
  2463   00157A  6ED9               	movwf	fsr2l,c
  2464   00157C  5012               	movf	(fputs@i+1)^0,w,c
  2465   00157E  200D               	addwfc	(fputs@s+1)^0,w,c
  2466   001580  6EDA               	movwf	fsr2h,c
  2467   001582  50DF               	movf	indf2,w,c
  2468   001584  6E10               	movwf	fputs@c^0,c
  2469   001586  5010               	movf	fputs@c^0,w,c
  2470   001588  A4D8               	btfss	status,2,c
  2471   00158A  EFC9  F00A         	goto	u771
  2472   00158E  EFCB  F00A         	goto	u770
  2473   001592                     u771:
  2474   001592  EFB0  F00A         	goto	l1576
  2475   001596                     u770:
  2476   001596  0012               	return		;funcret
  2477   001598                     __end_of_fputs:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _fputc *****************
  2481 ;; Defined at:
  2482 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  c               2    2[COMRAM] int 
  2485 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2486 ;;		 -> sprintf@f(12), 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  2    2[COMRAM] int 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2498 ;;      Params:         4       0       0       0       0       0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2500 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2501 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2502 ;;Total ram usage:        9 bytes
  2503 ;; Hardware stack levels used: 1
  2504 ;; Hardware stack levels required when called: 2
  2505 ;; This function calls:
  2506 ;;		_putch
  2507 ;; This function is called by:
  2508 ;;		_pad
  2509 ;;		_vfpfcnvrt
  2510 ;;		_fputs
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text11
  2515   000E76                     __ptext11:
  2516                           	callstack 0
  2517   000E76                     _fputc:
  2518                           	callstack 24
  2519   000E76  5005               	movf	fputc@fp^0,w,c
  2520   000E78  1006               	iorwf	(fputc@fp+1)^0,w,c
  2521   000E7A  B4D8               	btfsc	status,2,c
  2522   000E7C  EF42  F007         	goto	u731
  2523   000E80  EF44  F007         	goto	u730
  2524   000E84                     u731:
  2525   000E84  EF4D  F007         	goto	l1564
  2526   000E88                     u730:
  2527   000E88  5005               	movf	fputc@fp^0,w,c
  2528   000E8A  1006               	iorwf	(fputc@fp+1)^0,w,c
  2529   000E8C  A4D8               	btfss	status,2,c
  2530   000E8E  EF4B  F007         	goto	u741
  2531   000E92  EF4D  F007         	goto	u740
  2532   000E96                     u741:
  2533   000E96  EF52  F007         	goto	l1566
  2534   000E9A                     u740:
  2535   000E9A                     l1564:
  2536   000E9A  5003               	movf	fputc@c^0,w,c
  2537   000E9C  EC76  F00B         	call	_putch
  2538   000EA0  EF9F  F007         	goto	l979
  2539   000EA4                     l1566:
  2540   000EA4  EE20 F00A          	lfsr	2,10
  2541   000EA8  5005               	movf	fputc@fp^0,w,c
  2542   000EAA  26D9               	addwf	fsr2l,f,c
  2543   000EAC  5006               	movf	(fputc@fp+1)^0,w,c
  2544   000EAE  22DA               	addwfc	fsr2h,f,c
  2545   000EB0  50DE               	movf	postinc2,w,c
  2546   000EB2  10DE               	iorwf	postinc2,w,c
  2547   000EB4  B4D8               	btfsc	status,2,c
  2548   000EB6  EF5F  F007         	goto	u751
  2549   000EBA  EF61  F007         	goto	u750
  2550   000EBE                     u751:
  2551   000EBE  EF7C  F007         	goto	l1570
  2552   000EC2                     u750:
  2553   000EC2  EE20 F00A          	lfsr	2,10
  2554   000EC6  5005               	movf	fputc@fp^0,w,c
  2555   000EC8  26D9               	addwf	fsr2l,f,c
  2556   000ECA  5006               	movf	(fputc@fp+1)^0,w,c
  2557   000ECC  22DA               	addwfc	fsr2h,f,c
  2558   000ECE  EE10 F003          	lfsr	1,3
  2559   000ED2  5005               	movf	fputc@fp^0,w,c
  2560   000ED4  26E1               	addwf	fsr1l,f,c
  2561   000ED6  5006               	movf	(fputc@fp+1)^0,w,c
  2562   000ED8  22E2               	addwfc	fsr1h,f,c
  2563   000EDA  50DE               	movf	postinc2,w,c
  2564   000EDC  5CE6               	subwf	postinc1,w,c
  2565   000EDE  50E6               	movf	postinc1,w,c
  2566   000EE0  0A80               	xorlw	128
  2567   000EE2  6E0B               	movwf	(??_fputc+4)^0,c
  2568   000EE4  50DE               	movf	postinc2,w,c
  2569   000EE6  0A80               	xorlw	128
  2570   000EE8  580B               	subwfb	(??_fputc+4)^0,w,c
  2571   000EEA  B0D8               	btfsc	status,0,c
  2572   000EEC  EF7A  F007         	goto	u761
  2573   000EF0  EF7C  F007         	goto	u760
  2574   000EF4                     u761:
  2575   000EF4  EF9F  F007         	goto	l979
  2576   000EF8                     u760:
  2577   000EF8                     l1570:
  2578   000EF8  EE20 F003          	lfsr	2,3
  2579   000EFC  5005               	movf	fputc@fp^0,w,c
  2580   000EFE  26D9               	addwf	fsr2l,f,c
  2581   000F00  5006               	movf	(fputc@fp+1)^0,w,c
  2582   000F02  22DA               	addwfc	fsr2h,f,c
  2583   000F04  CFDE F007          	movff	postinc2,??_fputc
  2584   000F08  CFDD F008          	movff	postdec2,??_fputc+1
  2585   000F0C  C005  FFD9         	movff	fputc@fp,fsr2l
  2586   000F10  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2587   000F14  CFDE F009          	movff	postinc2,??_fputc+2
  2588   000F18  CFDD F00A          	movff	postdec2,??_fputc+3
  2589   000F1C  5007               	movf	??_fputc^0,w,c
  2590   000F1E  2409               	addwf	(??_fputc+2)^0,w,c
  2591   000F20  6ED9               	movwf	fsr2l,c
  2592   000F22  5008               	movf	(??_fputc+1)^0,w,c
  2593   000F24  200A               	addwfc	(??_fputc+3)^0,w,c
  2594   000F26  6EDA               	movwf	fsr2h,c
  2595   000F28  C003  FFDF         	movff	fputc@c,indf2
  2596   000F2C  EE20 F003          	lfsr	2,3
  2597   000F30  5005               	movf	fputc@fp^0,w,c
  2598   000F32  26D9               	addwf	fsr2l,f,c
  2599   000F34  5006               	movf	(fputc@fp+1)^0,w,c
  2600   000F36  22DA               	addwfc	fsr2h,f,c
  2601   000F38  2ADE               	incf	postinc2,f,c
  2602   000F3A  0E00               	movlw	0
  2603   000F3C  22DD               	addwfc	postdec2,f,c
  2604   000F3E                     l979:
  2605   000F3E  0012               	return		;funcret
  2606   000F40                     __end_of_fputc:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _putch *****************
  2610 ;; Defined at:
  2611 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  c               1    wreg     unsigned char 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  c               1    0[COMRAM] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2625 ;;      Params:         0       0       0       0       0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2628 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2629 ;;Total ram usage:        0 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_fputc
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text12
  2640   0016EC                     __ptext12:
  2641                           	callstack 0
  2642   0016EC                     _putch:
  2643                           	callstack 24
  2644   0016EC  0012               	return		;funcret
  2645   0016EE                     __end_of_putch:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _abs *****************
  2649 ;; Defined at:
  2650 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  a               2    8[COMRAM] int 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  2    8[COMRAM] int 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2664 ;;      Params:         2       0       0       0       0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2666 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2667 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2668 ;;Total ram usage:        4 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_dtoa
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text13
  2679   001598                     __ptext13:
  2680                           	callstack 0
  2681   001598                     _abs:
  2682                           	callstack 24
  2683   001598  BE0A               	btfsc	(abs@a+1)^0,7,c
  2684   00159A  EFD9  F00A         	goto	u940
  2685   00159E  500A               	movf	(abs@a+1)^0,w,c
  2686   0015A0  E106               	bnz	u941
  2687   0015A2  0409               	decf	abs@a^0,w,c
  2688   0015A4  B0D8               	btfsc	status,0,c
  2689   0015A6  EFD7  F00A         	goto	u941
  2690   0015AA  EFD9  F00A         	goto	u940
  2691   0015AE                     u941:
  2692   0015AE  EFE7  F00A         	goto	l964
  2693   0015B2                     u940:
  2694   0015B2  C009  F00B         	movff	abs@a,??_abs
  2695   0015B6  C00A  F00C         	movff	abs@a+1,??_abs+1
  2696   0015BA  1E0B               	comf	??_abs^0,f,c
  2697   0015BC  1E0C               	comf	(??_abs+1)^0,f,c
  2698   0015BE  4A0B               	infsnz	??_abs^0,f,c
  2699   0015C0  2A0C               	incf	(??_abs+1)^0,f,c
  2700   0015C2  C00B  F009         	movff	??_abs,?_abs
  2701   0015C6  C00C  F00A         	movff	??_abs+1,?_abs+1
  2702   0015CA  EFEB  F00A         	goto	l967
  2703   0015CE                     l964:
  2704   0015CE  C009  F009         	movff	abs@a,?_abs
  2705   0015D2  C00A  F00A         	movff	abs@a+1,?_abs+1
  2706   0015D6                     l967:
  2707   0015D6  0012               	return		;funcret
  2708   0015D8                     __end_of_abs:
  2709                           	callstack 0
  2710                           
  2711 ;; *************** function ___awmod *****************
  2712 ;; Defined at:
  2713 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  dividend        2    2[COMRAM] int 
  2716 ;;  divisor         2    4[COMRAM] int 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  sign            1    7[COMRAM] unsigned char 
  2719 ;;  counter         1    6[COMRAM] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  2    2[COMRAM] int 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2729 ;;      Params:         4       0       0       0       0       0       0       0       0
  2730 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2732 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2733 ;;Total ram usage:        6 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_dtoa
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text14
  2744   0010CA                     __ptext14:
  2745                           	callstack 0
  2746   0010CA                     ___awmod:
  2747                           	callstack 24
  2748   0010CA  0E00               	movlw	0
  2749   0010CC  6E08               	movwf	___awmod@sign^0,c
  2750   0010CE  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  2751   0010D0  EF6E  F008         	goto	u840
  2752   0010D4  EF6C  F008         	goto	u841
  2753   0010D8                     u841:
  2754   0010D8  EF74  F008         	goto	l1640
  2755   0010DC                     u840:
  2756   0010DC  6C03               	negf	___awmod@dividend^0,c
  2757   0010DE  1E04               	comf	(___awmod@dividend+1)^0,f,c
  2758   0010E0  B0D8               	btfsc	status,0,c
  2759   0010E2  2A04               	incf	(___awmod@dividend+1)^0,f,c
  2760   0010E4  0E01               	movlw	1
  2761   0010E6  6E08               	movwf	___awmod@sign^0,c
  2762   0010E8                     l1640:
  2763   0010E8  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  2764   0010EA  EF7B  F008         	goto	u850
  2765   0010EE  EF79  F008         	goto	u851
  2766   0010F2                     u851:
  2767   0010F2  EF7F  F008         	goto	l1644
  2768   0010F6                     u850:
  2769   0010F6  6C05               	negf	___awmod@divisor^0,c
  2770   0010F8  1E06               	comf	(___awmod@divisor+1)^0,f,c
  2771   0010FA  B0D8               	btfsc	status,0,c
  2772   0010FC  2A06               	incf	(___awmod@divisor+1)^0,f,c
  2773   0010FE                     l1644:
  2774   0010FE  5005               	movf	___awmod@divisor^0,w,c
  2775   001100  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  2776   001102  B4D8               	btfsc	status,2,c
  2777   001104  EF86  F008         	goto	u861
  2778   001108  EF88  F008         	goto	u860
  2779   00110C                     u861:
  2780   00110C  EFAC  F008         	goto	l1660
  2781   001110                     u860:
  2782   001110  0E01               	movlw	1
  2783   001112  6E07               	movwf	___awmod@counter^0,c
  2784   001114  EF90  F008         	goto	l1650
  2785   001118                     l1648:
  2786   001118  90D8               	bcf	status,0,c
  2787   00111A  3605               	rlcf	___awmod@divisor^0,f,c
  2788   00111C  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  2789   00111E  2A07               	incf	___awmod@counter^0,f,c
  2790   001120                     l1650:
  2791   001120  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  2792   001122  EF95  F008         	goto	u871
  2793   001126  EF97  F008         	goto	u870
  2794   00112A                     u871:
  2795   00112A  EF8C  F008         	goto	l1648
  2796   00112E                     u870:
  2797   00112E                     l1652:
  2798   00112E  5005               	movf	___awmod@divisor^0,w,c
  2799   001130  5C03               	subwf	___awmod@dividend^0,w,c
  2800   001132  5006               	movf	(___awmod@divisor+1)^0,w,c
  2801   001134  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  2802   001136  A0D8               	btfss	status,0,c
  2803   001138  EFA0  F008         	goto	u881
  2804   00113C  EFA2  F008         	goto	u880
  2805   001140                     u881:
  2806   001140  EFA6  F008         	goto	l1656
  2807   001144                     u880:
  2808   001144  5005               	movf	___awmod@divisor^0,w,c
  2809   001146  5E03               	subwf	___awmod@dividend^0,f,c
  2810   001148  5006               	movf	(___awmod@divisor+1)^0,w,c
  2811   00114A  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  2812   00114C                     l1656:
  2813   00114C  90D8               	bcf	status,0,c
  2814   00114E  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  2815   001150  3205               	rrcf	___awmod@divisor^0,f,c
  2816   001152  2E07               	decfsz	___awmod@counter^0,f,c
  2817   001154  EF97  F008         	goto	l1652
  2818   001158                     l1660:
  2819   001158  5008               	movf	___awmod@sign^0,w,c
  2820   00115A  B4D8               	btfsc	status,2,c
  2821   00115C  EFB2  F008         	goto	u891
  2822   001160  EFB4  F008         	goto	u890
  2823   001164                     u891:
  2824   001164  EFB8  F008         	goto	l1664
  2825   001168                     u890:
  2826   001168  6C03               	negf	___awmod@dividend^0,c
  2827   00116A  1E04               	comf	(___awmod@dividend+1)^0,f,c
  2828   00116C  B0D8               	btfsc	status,0,c
  2829   00116E  2A04               	incf	(___awmod@dividend+1)^0,f,c
  2830   001170                     l1664:
  2831   001170  C003  F003         	movff	___awmod@dividend,?___awmod
  2832   001174  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  2833   001178  0012               	return		;funcret
  2834   00117A                     __end_of___awmod:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function ___awdiv *****************
  2838 ;; Defined at:
  2839 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  dividend        2    2[COMRAM] int 
  2842 ;;  divisor         2    4[COMRAM] int 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  quotient        2    8[COMRAM] int 
  2845 ;;  sign            1    7[COMRAM] unsigned char 
  2846 ;;  counter         1    6[COMRAM] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  2    2[COMRAM] int 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2856 ;;      Params:         4       0       0       0       0       0       0       0       0
  2857 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2859 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2860 ;;Total ram usage:        8 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_dtoa
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text15
  2871   001006                     __ptext15:
  2872                           	callstack 0
  2873   001006                     ___awdiv:
  2874                           	callstack 24
  2875   001006  0E00               	movlw	0
  2876   001008  6E08               	movwf	___awdiv@sign^0,c
  2877   00100A  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  2878   00100C  EF0C  F008         	goto	u780
  2879   001010  EF0A  F008         	goto	u781
  2880   001014                     u781:
  2881   001014  EF12  F008         	goto	l1596
  2882   001018                     u780:
  2883   001018  6C05               	negf	___awdiv@divisor^0,c
  2884   00101A  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  2885   00101C  B0D8               	btfsc	status,0,c
  2886   00101E  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  2887   001020  0E01               	movlw	1
  2888   001022  6E08               	movwf	___awdiv@sign^0,c
  2889   001024                     l1596:
  2890   001024  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  2891   001026  EF19  F008         	goto	u790
  2892   00102A  EF17  F008         	goto	u791
  2893   00102E                     u791:
  2894   00102E  EF1F  F008         	goto	l1602
  2895   001032                     u790:
  2896   001032  6C03               	negf	___awdiv@dividend^0,c
  2897   001034  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  2898   001036  B0D8               	btfsc	status,0,c
  2899   001038  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  2900   00103A  0E01               	movlw	1
  2901   00103C  1A08               	xorwf	___awdiv@sign^0,f,c
  2902   00103E                     l1602:
  2903   00103E  0E00               	movlw	0
  2904   001040  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  2905   001042  0E00               	movlw	0
  2906   001044  6E09               	movwf	___awdiv@quotient^0,c
  2907   001046  5005               	movf	___awdiv@divisor^0,w,c
  2908   001048  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  2909   00104A  B4D8               	btfsc	status,2,c
  2910   00104C  EF2A  F008         	goto	u801
  2911   001050  EF2C  F008         	goto	u800
  2912   001054                     u801:
  2913   001054  EF54  F008         	goto	l1624
  2914   001058                     u800:
  2915   001058  0E01               	movlw	1
  2916   00105A  6E07               	movwf	___awdiv@counter^0,c
  2917   00105C  EF34  F008         	goto	l1610
  2918   001060                     l1608:
  2919   001060  90D8               	bcf	status,0,c
  2920   001062  3605               	rlcf	___awdiv@divisor^0,f,c
  2921   001064  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  2922   001066  2A07               	incf	___awdiv@counter^0,f,c
  2923   001068                     l1610:
  2924   001068  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  2925   00106A  EF39  F008         	goto	u811
  2926   00106E  EF3B  F008         	goto	u810
  2927   001072                     u811:
  2928   001072  EF30  F008         	goto	l1608
  2929   001076                     u810:
  2930   001076                     l1612:
  2931   001076  90D8               	bcf	status,0,c
  2932   001078  3609               	rlcf	___awdiv@quotient^0,f,c
  2933   00107A  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  2934   00107C  5005               	movf	___awdiv@divisor^0,w,c
  2935   00107E  5C03               	subwf	___awdiv@dividend^0,w,c
  2936   001080  5006               	movf	(___awdiv@divisor+1)^0,w,c
  2937   001082  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  2938   001084  A0D8               	btfss	status,0,c
  2939   001086  EF47  F008         	goto	u821
  2940   00108A  EF49  F008         	goto	u820
  2941   00108E                     u821:
  2942   00108E  EF4E  F008         	goto	l1620
  2943   001092                     u820:
  2944   001092  5005               	movf	___awdiv@divisor^0,w,c
  2945   001094  5E03               	subwf	___awdiv@dividend^0,f,c
  2946   001096  5006               	movf	(___awdiv@divisor+1)^0,w,c
  2947   001098  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  2948   00109A  8009               	bsf	___awdiv@quotient^0,0,c
  2949   00109C                     l1620:
  2950   00109C  90D8               	bcf	status,0,c
  2951   00109E  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  2952   0010A0  3205               	rrcf	___awdiv@divisor^0,f,c
  2953   0010A2  2E07               	decfsz	___awdiv@counter^0,f,c
  2954   0010A4  EF3B  F008         	goto	l1612
  2955   0010A8                     l1624:
  2956   0010A8  5008               	movf	___awdiv@sign^0,w,c
  2957   0010AA  B4D8               	btfsc	status,2,c
  2958   0010AC  EF5A  F008         	goto	u831
  2959   0010B0  EF5C  F008         	goto	u830
  2960   0010B4                     u831:
  2961   0010B4  EF60  F008         	goto	l1628
  2962   0010B8                     u830:
  2963   0010B8  6C09               	negf	___awdiv@quotient^0,c
  2964   0010BA  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  2965   0010BC  B0D8               	btfsc	status,0,c
  2966   0010BE  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  2967   0010C0                     l1628:
  2968   0010C0  C009  F003         	movff	___awdiv@quotient,?___awdiv
  2969   0010C4  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  2970   0010C8  0012               	return		;funcret
  2971   0010CA                     __end_of___awdiv:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _lcd_putc *****************
  2975 ;; Defined at:
  2976 ;;		line 237 in file "main.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  a               2    6[COMRAM] PTR unsigned char 
  2979 ;;		 -> MensajeTx(5), STR_2(5), STR_1(6), MensajeRx(4), 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  i               2   10[COMRAM] int 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2991 ;;      Params:         2       0       0       0       0       0       0       0       0
  2992 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2993 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2994 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2995 ;;Total ram usage:        6 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 3
  2998 ;; This function calls:
  2999 ;;		_lcd_write_char
  3000 ;; This function is called by:
  3001 ;;		_Tx_USART
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text16
  3006   0012B0                     __ptext16:
  3007                           	callstack 0
  3008   0012B0                     _lcd_putc:
  3009                           	callstack 26
  3010   0012B0                     
  3011                           ;main.c: 238:     int i;;main.c: 239:     for (i = 0; a[i] != '\0'; i++)
  3012   0012B0  0E00               	movlw	0
  3013   0012B2  6E0C               	movwf	(lcd_putc@i+1)^0,c
  3014   0012B4  0E00               	movlw	0
  3015   0012B6  6E0B               	movwf	lcd_putc@i^0,c
  3016   0012B8  EF78  F009         	goto	l1868
  3017   0012BC                     l1864:
  3018                           
  3019                           ;main.c: 240:         lcd_write_char(a[i]);
  3020   0012BC  500B               	movf	lcd_putc@i^0,w,c
  3021   0012BE  2407               	addwf	lcd_putc@a^0,w,c
  3022   0012C0  6E09               	movwf	??_lcd_putc^0,c
  3023   0012C2  500C               	movf	(lcd_putc@i+1)^0,w,c
  3024   0012C4  2008               	addwfc	(lcd_putc@a+1)^0,w,c
  3025   0012C6  6E0A               	movwf	(??_lcd_putc+1)^0,c
  3026   0012C8  C009  FFF6         	movff	??_lcd_putc,tblptrl
  3027   0012CC  C00A  FFF7         	movff	??_lcd_putc+1,tblptrh
  3028   0012D0  6AF8               	clrf	tblptru,c
  3029   0012D2  0E07               	movlw	(high __ramtop+-1)
  3030   0012D4  64F7               	cpfsgt	tblptrh,c
  3031   0012D6  D003               	bra	u1187
  3032   0012D8  0008               	tblrd		*
  3033   0012DA  50F5               	movf	tablat,w,c
  3034   0012DC  D005               	bra	u1180
  3035   0012DE                     u1187:
  3036   0012DE  CFF6 FFE1          	movff	tblptrl,fsr1l
  3037   0012E2  CFF7 FFE2          	movff	tblptrh,fsr1h
  3038   0012E6  50E7               	movf	indf1,w,c
  3039   0012E8                     u1180:
  3040   0012E8  ECEC  F00A         	call	_lcd_write_char
  3041   0012EC  4A0B               	infsnz	lcd_putc@i^0,f,c
  3042   0012EE  2A0C               	incf	(lcd_putc@i+1)^0,f,c
  3043   0012F0                     l1868:
  3044   0012F0  500B               	movf	lcd_putc@i^0,w,c
  3045   0012F2  2407               	addwf	lcd_putc@a^0,w,c
  3046   0012F4  6E09               	movwf	??_lcd_putc^0,c
  3047   0012F6  500C               	movf	(lcd_putc@i+1)^0,w,c
  3048   0012F8  2008               	addwfc	(lcd_putc@a+1)^0,w,c
  3049   0012FA  6E0A               	movwf	(??_lcd_putc+1)^0,c
  3050   0012FC  C009  FFF6         	movff	??_lcd_putc,tblptrl
  3051   001300  C00A  FFF7         	movff	??_lcd_putc+1,tblptrh
  3052   001304  6AF8               	clrf	tblptru,c
  3053   001306  0E07               	movlw	(high __ramtop+-1)
  3054   001308  64F7               	cpfsgt	tblptrh,c
  3055   00130A  D003               	bra	u1197
  3056   00130C  0008               	tblrd		*
  3057   00130E  50F5               	movf	tablat,w,c
  3058   001310  D005               	bra	u1190
  3059   001312                     u1197:
  3060   001312  CFF6 FFE1          	movff	tblptrl,fsr1l
  3061   001316  CFF7 FFE2          	movff	tblptrh,fsr1h
  3062   00131A  50E7               	movf	indf1,w,c
  3063   00131C                     u1190:
  3064   00131C  0900               	iorlw	0
  3065   00131E  A4D8               	btfss	status,2,c
  3066   001320  EF94  F009         	goto	u1201
  3067   001324  EF96  F009         	goto	u1200
  3068   001328                     u1201:
  3069   001328  EF5E  F009         	goto	l1864
  3070   00132C                     u1200:
  3071   00132C  0012               	return		;funcret
  3072   00132E                     __end_of_lcd_putc:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _lcd_write_char *****************
  3076 ;; Defined at:
  3077 ;;		line 222 in file "main.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  a               1    wreg     unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  a               1    5[COMRAM] unsigned char 
  3082 ;;  y               1    4[COMRAM] unsigned char 
  3083 ;;  temp            1    3[COMRAM] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0
  3094 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3096 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        3 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 2
  3100 ;; This function calls:
  3101 ;;		_Lcd_Port
  3102 ;; This function is called by:
  3103 ;;		_lcd_putc
  3104 ;;		_Tx_USART
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text17
  3109   0015D8                     __ptext17:
  3110                           	callstack 0
  3111   0015D8                     _lcd_write_char:
  3112                           	callstack 27
  3113                           
  3114                           ;incstack = 0
  3115                           ;lcd_write_char@a stored from wreg
  3116   0015D8  6E06               	movwf	lcd_write_char@a^0,c
  3117   0015DA                     
  3118                           ;main.c: 223:     char temp, y;;main.c: 224:     temp = a & 0x0F;
  3119   0015DA  5006               	movf	lcd_write_char@a^0,w,c
  3120   0015DC  0B0F               	andlw	15
  3121   0015DE  6E04               	movwf	lcd_write_char@temp^0,c
  3122                           
  3123                           ;main.c: 225:     y = a & 0xF0;
  3124   0015E0  5006               	movf	lcd_write_char@a^0,w,c
  3125   0015E2  0BF0               	andlw	240
  3126   0015E4  6E05               	movwf	lcd_write_char@y^0,c
  3127   0015E6                     
  3128                           ;main.c: 226:     LATDbits.LATD2 = 1;
  3129   0015E6  848C               	bsf	140,2,c	;volatile
  3130   0015E8                     
  3131                           ;main.c: 227:     Lcd_Port(y >> 4);
  3132   0015E8  3805               	swapf	lcd_write_char@y^0,w,c
  3133   0015EA  0B0F               	andlw	15
  3134   0015EC  EC03  F00A         	call	_Lcd_Port
  3135   0015F0                     
  3136                           ;main.c: 228:     LATDbits.LATD3 = 1;
  3137   0015F0  868C               	bsf	140,3,c	;volatile
  3138   0015F2                     
  3139                           ;main.c: 229:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3140   0015F2  0E0D               	movlw	13
  3141   0015F4                     u1677:
  3142   0015F4  2EE8               	decfsz	wreg,f,c
  3143   0015F6  D7FE               	bra	u1677
  3144   0015F8  F000               	nop	
  3145   0015FA                     
  3146                           ;main.c: 230:     LATDbits.LATD3 = 0;
  3147   0015FA  968C               	bcf	140,3,c	;volatile
  3148   0015FC                     
  3149                           ;main.c: 231:     Lcd_Port(temp);
  3150   0015FC  5004               	movf	lcd_write_char@temp^0,w,c
  3151   0015FE  EC03  F00A         	call	_Lcd_Port
  3152   001602                     
  3153                           ;main.c: 232:     LATDbits.LATD3 = 1;
  3154   001602  868C               	bsf	140,3,c	;volatile
  3155   001604                     
  3156                           ;main.c: 233:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3157   001604  0E0D               	movlw	13
  3158   001606                     u1687:
  3159   001606  2EE8               	decfsz	wreg,f,c
  3160   001608  D7FE               	bra	u1687
  3161   00160A  F000               	nop	
  3162   00160C                     
  3163                           ;main.c: 234:     LATDbits.LATD3 = 0;
  3164   00160C  968C               	bcf	140,3,c	;volatile
  3165   00160E  0012               	return		;funcret
  3166   001610                     __end_of_lcd_write_char:
  3167                           	callstack 0
  3168                           
  3169 ;; *************** function _lcd_gotoxy *****************
  3170 ;; Defined at:
  3171 ;;		line 187 in file "main.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  a               1    wreg     unsigned char 
  3174 ;;  b               1    5[COMRAM] unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  a               1    6[COMRAM] unsigned char 
  3177 ;;  temp            1    9[COMRAM] unsigned char 
  3178 ;;  y               1    8[COMRAM] unsigned char 
  3179 ;;  z               1    7[COMRAM] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3189 ;;      Params:         1       0       0       0       0       0       0       0       0
  3190 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3192 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3193 ;;Total ram usage:        5 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 3
  3196 ;; This function calls:
  3197 ;;		_Lcd_Cmd
  3198 ;; This function is called by:
  3199 ;;		_Tx_USART
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text18
  3204   0013A0                     __ptext18:
  3205                           	callstack 0
  3206   0013A0                     _lcd_gotoxy:
  3207                           	callstack 26
  3208                           
  3209                           ;incstack = 0
  3210                           ;lcd_gotoxy@a stored from wreg
  3211   0013A0  6E07               	movwf	lcd_gotoxy@a^0,c
  3212   0013A2                     
  3213                           ;main.c: 188:     char temp, z, y;;main.c: 189:     if (a == 1) {
  3214   0013A2  0407               	decf	lcd_gotoxy@a^0,w,c
  3215   0013A4  A4D8               	btfss	status,2,c
  3216   0013A6  EFD7  F009         	goto	u1161
  3217   0013AA  EFD9  F009         	goto	u1160
  3218   0013AE                     u1161:
  3219   0013AE  EFEA  F009         	goto	l1854
  3220   0013B2                     u1160:
  3221   0013B2                     
  3222                           ;main.c: 190:         temp = 0x80 + b - 1;
  3223   0013B2  5006               	movf	lcd_gotoxy@b^0,w,c
  3224   0013B4  0F7F               	addlw	127
  3225   0013B6  6E0A               	movwf	lcd_gotoxy@temp^0,c
  3226                           
  3227                           ;main.c: 191:         z = temp >> 4;
  3228   0013B8  380A               	swapf	lcd_gotoxy@temp^0,w,c
  3229   0013BA  0B0F               	andlw	15
  3230   0013BC  6E08               	movwf	lcd_gotoxy@z^0,c
  3231                           
  3232                           ;main.c: 192:         y = temp & 0x0F;
  3233   0013BE  500A               	movf	lcd_gotoxy@temp^0,w,c
  3234   0013C0  0B0F               	andlw	15
  3235   0013C2  6E09               	movwf	lcd_gotoxy@y^0,c
  3236   0013C4                     
  3237                           ;main.c: 193:         Lcd_Cmd(z);
  3238   0013C4  5008               	movf	lcd_gotoxy@z^0,w,c
  3239   0013C6  EC4F  F00B         	call	_Lcd_Cmd
  3240   0013CA                     
  3241                           ;main.c: 194:         Lcd_Cmd(y);
  3242   0013CA  5009               	movf	lcd_gotoxy@y^0,w,c
  3243   0013CC  EC4F  F00B         	call	_Lcd_Cmd
  3244                           
  3245                           ;main.c: 195:     } else if (a == 2) {
  3246   0013D0  EF02  F00A         	goto	l111
  3247   0013D4                     l1854:
  3248   0013D4  0E02               	movlw	2
  3249   0013D6  1807               	xorwf	lcd_gotoxy@a^0,w,c
  3250   0013D8  A4D8               	btfss	status,2,c
  3251   0013DA  EFF1  F009         	goto	u1171
  3252   0013DE  EFF3  F009         	goto	u1170
  3253   0013E2                     u1171:
  3254   0013E2  EF02  F00A         	goto	l111
  3255   0013E6                     u1170:
  3256   0013E6                     
  3257                           ;main.c: 196:         temp = 0xC0 + b - 1;
  3258   0013E6  5006               	movf	lcd_gotoxy@b^0,w,c
  3259   0013E8  0FBF               	addlw	191
  3260   0013EA  6E0A               	movwf	lcd_gotoxy@temp^0,c
  3261                           
  3262                           ;main.c: 197:         z = temp >> 4;
  3263   0013EC  380A               	swapf	lcd_gotoxy@temp^0,w,c
  3264   0013EE  0B0F               	andlw	15
  3265   0013F0  6E08               	movwf	lcd_gotoxy@z^0,c
  3266                           
  3267                           ;main.c: 198:         y = temp & 0x0F;
  3268   0013F2  500A               	movf	lcd_gotoxy@temp^0,w,c
  3269   0013F4  0B0F               	andlw	15
  3270   0013F6  6E09               	movwf	lcd_gotoxy@y^0,c
  3271   0013F8                     
  3272                           ;main.c: 199:         Lcd_Cmd(z);
  3273   0013F8  5008               	movf	lcd_gotoxy@z^0,w,c
  3274   0013FA  EC4F  F00B         	call	_Lcd_Cmd
  3275   0013FE                     
  3276                           ;main.c: 200:         Lcd_Cmd(y);
  3277   0013FE  5009               	movf	lcd_gotoxy@y^0,w,c
  3278   001400  EC4F  F00B         	call	_Lcd_Cmd
  3279   001404                     l111:
  3280   001404  0012               	return		;funcret
  3281   001406                     __end_of_lcd_gotoxy:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _lcd_clear *****************
  3285 ;; Defined at:
  3286 ;;		line 182 in file "main.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3303 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 3
  3307 ;; This function calls:
  3308 ;;		_Lcd_Cmd
  3309 ;; This function is called by:
  3310 ;;		_Tx_USART
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text19
  3315   0016D4                     __ptext19:
  3316                           	callstack 0
  3317   0016D4                     _lcd_clear:
  3318                           	callstack 26
  3319   0016D4                     
  3320                           ;main.c: 183:     Lcd_Cmd(0);
  3321   0016D4  0E00               	movlw	0
  3322   0016D6  EC4F  F00B         	call	_Lcd_Cmd
  3323                           
  3324                           ;main.c: 184:     Lcd_Cmd(1);
  3325   0016DA  0E01               	movlw	1
  3326   0016DC  EC4F  F00B         	call	_Lcd_Cmd
  3327   0016E0  0012               	return		;funcret
  3328   0016E2                     __end_of_lcd_clear:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _Lcd_Cmd *****************
  3332 ;; Defined at:
  3333 ;;		line 174 in file "main.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  a               1    wreg     unsigned char 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  a               1    4[COMRAM] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3347 ;;      Params:         0       0       0       0       0       0       0       0       0
  3348 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3349 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3350 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3351 ;;Total ram usage:        2 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 2
  3354 ;; This function calls:
  3355 ;;		_Lcd_Port
  3356 ;; This function is called by:
  3357 ;;		_lcd_clear
  3358 ;;		_lcd_gotoxy
  3359 ;;		_lcd_init
  3360 ;;		_lcd_shift_right
  3361 ;;		_lcd_shift_left
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text20
  3366   00169E                     __ptext20:
  3367                           	callstack 0
  3368   00169E                     _Lcd_Cmd:
  3369                           	callstack 27
  3370                           
  3371                           ;incstack = 0
  3372                           ;Lcd_Cmd@a stored from wreg
  3373   00169E  6E05               	movwf	Lcd_Cmd@a^0,c
  3374   0016A0                     
  3375                           ;main.c: 175:     LATDbits.LATD2 = 0;
  3376   0016A0  948C               	bcf	140,2,c	;volatile
  3377   0016A2                     
  3378                           ;main.c: 176:     Lcd_Port(a);
  3379   0016A2  5005               	movf	Lcd_Cmd@a^0,w,c
  3380   0016A4  EC03  F00A         	call	_Lcd_Port
  3381   0016A8                     
  3382                           ;main.c: 177:     LATDbits.LATD3 = 1;
  3383   0016A8  868C               	bsf	140,3,c	;volatile
  3384   0016AA                     
  3385                           ;main.c: 178:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3386   0016AA  0E06               	movlw	6
  3387   0016AC  6E04               	movwf	??_Lcd_Cmd^0,c
  3388   0016AE  0E30               	movlw	48
  3389   0016B0                     u1697:
  3390   0016B0  2EE8               	decfsz	wreg,f,c
  3391   0016B2  D7FE               	bra	u1697
  3392   0016B4  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  3393   0016B6  D7FC               	bra	u1697
  3394   0016B8  D000               	nop2	
  3395   0016BA                     
  3396                           ;main.c: 179:     LATDbits.LATD3 = 0;
  3397   0016BA  968C               	bcf	140,3,c	;volatile
  3398   0016BC  0012               	return		;funcret
  3399   0016BE                     __end_of_Lcd_Cmd:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function _Lcd_Port *****************
  3403 ;; Defined at:
  3404 ;;		line 152 in file "main.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  a               1    wreg     unsigned char 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  a               1    2[COMRAM] unsigned char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0
  3419 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3421 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3422 ;;Total ram usage:        1 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; Hardware stack levels required when called: 1
  3425 ;; This function calls:
  3426 ;;		Nothing
  3427 ;; This function is called by:
  3428 ;;		_Lcd_Cmd
  3429 ;;		_lcd_init
  3430 ;;		_lcd_write_char
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text21
  3435   001406                     __ptext21:
  3436                           	callstack 0
  3437   001406                     _Lcd_Port:
  3438                           	callstack 28
  3439                           
  3440                           ;incstack = 0
  3441                           ;Lcd_Port@a stored from wreg
  3442   001406  6E03               	movwf	Lcd_Port@a^0,c
  3443   001408                     
  3444                           ;main.c: 153:     if (a & 1)
  3445   001408  A003               	btfss	Lcd_Port@a^0,0,c
  3446   00140A  EF09  F00A         	goto	u1071
  3447   00140E  EF0B  F00A         	goto	u1070
  3448   001412                     u1071:
  3449   001412  EF0E  F00A         	goto	l91
  3450   001416                     u1070:
  3451   001416                     
  3452                           ;main.c: 154:         LATDbits.LATD4 = 1;
  3453   001416  888C               	bsf	140,4,c	;volatile
  3454   001418  EF0F  F00A         	goto	l1756
  3455   00141C                     l91:
  3456                           
  3457                           ;main.c: 156:         LATDbits.LATD4 = 0;
  3458   00141C  988C               	bcf	140,4,c	;volatile
  3459   00141E                     l1756:
  3460                           
  3461                           ;main.c: 158:     if (a & 2)
  3462   00141E  A203               	btfss	Lcd_Port@a^0,1,c
  3463   001420  EF14  F00A         	goto	u1081
  3464   001424  EF16  F00A         	goto	u1080
  3465   001428                     u1081:
  3466   001428  EF19  F00A         	goto	l93
  3467   00142C                     u1080:
  3468   00142C                     
  3469                           ;main.c: 159:         LATDbits.LATD5 = 1;
  3470   00142C  8A8C               	bsf	140,5,c	;volatile
  3471   00142E  EF1A  F00A         	goto	l1760
  3472   001432                     l93:
  3473                           
  3474                           ;main.c: 161:         LATDbits.LATD5 = 0;
  3475   001432  9A8C               	bcf	140,5,c	;volatile
  3476   001434                     l1760:
  3477                           
  3478                           ;main.c: 163:     if (a & 4)
  3479   001434  A403               	btfss	Lcd_Port@a^0,2,c
  3480   001436  EF1F  F00A         	goto	u1091
  3481   00143A  EF21  F00A         	goto	u1090
  3482   00143E                     u1091:
  3483   00143E  EF24  F00A         	goto	l95
  3484   001442                     u1090:
  3485   001442                     
  3486                           ;main.c: 164:         LATDbits.LATD6 = 1;
  3487   001442  8C8C               	bsf	140,6,c	;volatile
  3488   001444  EF25  F00A         	goto	l1764
  3489   001448                     l95:
  3490                           
  3491                           ;main.c: 166:         LATDbits.LATD6 = 0;
  3492   001448  9C8C               	bcf	140,6,c	;volatile
  3493   00144A                     l1764:
  3494                           
  3495                           ;main.c: 168:     if (a & 8)
  3496   00144A  A603               	btfss	Lcd_Port@a^0,3,c
  3497   00144C  EF2A  F00A         	goto	u1101
  3498   001450  EF2C  F00A         	goto	u1100
  3499   001454                     u1101:
  3500   001454  EF2F  F00A         	goto	l97
  3501   001458                     u1100:
  3502   001458                     
  3503                           ;main.c: 169:         LATDbits.LATD7 = 1;
  3504   001458  8E8C               	bsf	140,7,c	;volatile
  3505   00145A  EF30  F00A         	goto	l99
  3506   00145E                     l97:
  3507                           
  3508                           ;main.c: 171:         LATDbits.LATD7 = 0;
  3509   00145E  9E8C               	bcf	140,7,c	;volatile
  3510   001460                     l99:
  3511   001460  0012               	return		;funcret
  3512   001462                     __end_of_Lcd_Port:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _Transmite *****************
  3516 ;; Defined at:
  3517 ;;		line 337 in file "main.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		None
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3534 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:        0 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; Hardware stack levels required when called: 1
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_Tx_USART
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text22
  3546   00165A                     __ptext22:
  3547                           	callstack 0
  3548   00165A                     _Transmite:
  3549                           	callstack 28
  3550   00165A                     
  3551                           ;main.c: 338:     TXREG = TxUSART;
  3552   00165A  C05B  FFAD         	movff	_TxUSART,4013	;volatile
  3553   00165E                     l153:
  3554   00165E  A89E               	btfss	158,4,c	;volatile
  3555   001660  EF34  F00B         	goto	u1211
  3556   001664  EF36  F00B         	goto	u1210
  3557   001668                     u1211:
  3558   001668  EF2F  F00B         	goto	l153
  3559   00166C                     u1210:
  3560   00166C                     l156:
  3561   00166C  A2AC               	btfss	172,1,c	;volatile
  3562   00166E  EF3B  F00B         	goto	u1221
  3563   001672  EF3D  F00B         	goto	u1220
  3564   001676                     u1221:
  3565   001676  EF36  F00B         	goto	l156
  3566   00167A                     u1220:
  3567   00167A  0012               	return		;funcret
  3568   00167C                     __end_of_Transmite:
  3569                           	callstack 0
  3570                           
  3571 ;; *************** function _ConfigUSART *****************
  3572 ;; Defined at:
  3573 ;;		line 315 in file "main.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3590 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3591 ;;Total ram usage:        0 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 1
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_main
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text23
  3602   001636                     __ptext23:
  3603                           	callstack 0
  3604   001636                     _ConfigUSART:
  3605                           	callstack 29
  3606   001636                     
  3607                           ;main.c: 317:     TXSTA = 0B00100110;
  3608   001636  0E26               	movlw	38
  3609   001638  6EAC               	movwf	172,c	;volatile
  3610                           
  3611                           ;main.c: 321:     RCSTA = 0B10010000;
  3612   00163A  0E90               	movlw	144
  3613   00163C  6EAB               	movwf	171,c	;volatile
  3614                           
  3615                           ;main.c: 324:     BAUDCON = 0B00000010;
  3616   00163E  0E02               	movlw	2
  3617   001640  6EB8               	movwf	184,c	;volatile
  3618                           
  3619                           ;main.c: 326:     SPBRG = 25;
  3620   001642  0E19               	movlw	25
  3621   001644  6EAF               	movwf	175,c	;volatile
  3622   001646                     
  3623                           ;main.c: 327:     PIE1bits.TXIE = 0;
  3624   001646  989D               	bcf	157,4,c	;volatile
  3625   001648                     
  3626                           ;main.c: 328:     IPR1bits.RCIP = 1;
  3627   001648  8A9F               	bsf	159,5,c	;volatile
  3628   00164A                     
  3629                           ;main.c: 329:     PIR1bits.TXIF = 0;
  3630   00164A  989E               	bcf	158,4,c	;volatile
  3631   00164C                     
  3632                           ;main.c: 330:     PIR1bits.RCIF = 0;
  3633   00164C  9A9E               	bcf	158,5,c	;volatile
  3634   00164E                     
  3635                           ;main.c: 331:     PIE1bits.RCIE = 1;
  3636   00164E  8A9D               	bsf	157,5,c	;volatile
  3637   001650                     
  3638                           ;main.c: 332:     INTCONbits.GIE_GIEH = 1;
  3639   001650  8EF2               	bsf	242,7,c	;volatile
  3640   001652                     
  3641                           ;main.c: 333:     INTCONbits.PEIE_GIEL = 1;
  3642   001652  8CF2               	bsf	242,6,c	;volatile
  3643                           
  3644                           ;main.c: 334:     RCREG = 0;
  3645   001654  0E00               	movlw	0
  3646   001656  6EAE               	movwf	174,c	;volatile
  3647   001658  0012               	return		;funcret
  3648   00165A                     __end_of_ConfigUSART:
  3649                           	callstack 0
  3650                           
  3651 ;; *************** function _ConfigPIC *****************
  3652 ;; Defined at:
  3653 ;;		line 293 in file "main.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3667 ;;      Params:         0       0       0       0       0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3670 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3671 ;;Total ram usage:        0 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; Hardware stack levels required when called: 1
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_main
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text24
  3682   00167C                     __ptext24:
  3683                           	callstack 0
  3684   00167C                     _ConfigPIC:
  3685                           	callstack 29
  3686   00167C                     
  3687                           ;main.c: 294:     TRISA = 0B00111111;
  3688   00167C  0E3F               	movlw	63
  3689   00167E  6E92               	movwf	146,c	;volatile
  3690                           
  3691                           ;main.c: 295:     TRISB = 0x00;
  3692   001680  0E00               	movlw	0
  3693   001682  6E93               	movwf	147,c	;volatile
  3694                           
  3695                           ;main.c: 296:     TRISC = 0B10000000;
  3696   001684  0E80               	movlw	128
  3697   001686  6E94               	movwf	148,c	;volatile
  3698                           
  3699                           ;main.c: 297:     TRISD = 0X00;
  3700   001688  0E00               	movlw	0
  3701   00168A  6E95               	movwf	149,c	;volatile
  3702   00168C                     
  3703                           ;main.c: 298:     TRISE = 0XFF;
  3704   00168C  6896               	setf	150,c	;volatile
  3705   00168E                     
  3706                           ;main.c: 299:     RCONbits.IPEN = 1;
  3707   00168E  8ED0               	bsf	208,7,c	;volatile
  3708                           
  3709                           ;main.c: 300:     ADCON1 = 0x0F;
  3710   001690  0E0F               	movlw	15
  3711   001692  6EC1               	movwf	193,c	;volatile
  3712                           
  3713                           ;main.c: 301:     CMCON = 0x07;
  3714   001694  0E07               	movlw	7
  3715   001696  6EB4               	movwf	180,c	;volatile
  3716                           
  3717                           ;main.c: 302:     PORTD = 0;
  3718   001698  0E00               	movlw	0
  3719   00169A  6E83               	movwf	131,c	;volatile
  3720   00169C  0012               	return		;funcret
  3721   00169E                     __end_of_ConfigPIC:
  3722                           	callstack 0
  3723                           
  3724 ;; *************** function _ConfigADC *****************
  3725 ;; Defined at:
  3726 ;;		line 305 in file "main.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used: 1
  3746 ;; Hardware stack levels required when called: 1
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text25
  3755   0016BE                     __ptext25:
  3756                           	callstack 0
  3757   0016BE                     _ConfigADC:
  3758                           	callstack 29
  3759   0016BE                     
  3760                           ;main.c: 306:     ADCON0 = 0B00000001;
  3761   0016BE  0E01               	movlw	1
  3762   0016C0  6EC2               	movwf	194,c	;volatile
  3763                           
  3764                           ;main.c: 307:     ADCON1 = 0B00000000;
  3765   0016C2  0E00               	movlw	0
  3766   0016C4  6EC1               	movwf	193,c	;volatile
  3767                           
  3768                           ;main.c: 308:     ADCON2 = 0B10100001;
  3769   0016C6  0EA1               	movlw	161
  3770   0016C8  6EC0               	movwf	192,c	;volatile
  3771   0016CA                     
  3772                           ;main.c: 309:     PIE1bits.ADIE = 1;
  3773   0016CA  8C9D               	bsf	157,6,c	;volatile
  3774   0016CC                     
  3775                           ;main.c: 310:     PIR1bits.ADIF = 0;
  3776   0016CC  9C9E               	bcf	158,6,c	;volatile
  3777   0016CE                     
  3778                           ;main.c: 311:     INTCONbits.GIE_GIEH = 1;
  3779   0016CE  8EF2               	bsf	242,7,c	;volatile
  3780   0016D0                     
  3781                           ;main.c: 312:     INTCONbits.PEIE_GIEL = 1;
  3782   0016D0  8CF2               	bsf	242,6,c	;volatile
  3783   0016D2  0012               	return		;funcret
  3784   0016D4                     __end_of_ConfigADC:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _VectorInterrupcion *****************
  3788 ;; Defined at:
  3789 ;;		line 253 in file "main.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3805 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3806 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3807 ;;Total ram usage:        2 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		Interrupt level 2
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	intcode
  3817   000008                     __pintcode:
  3818                           	callstack 0
  3819   000008                     _VectorInterrupcion:
  3820                           	callstack 21
  3821                           
  3822                           ;incstack = 0
  3823   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3824   00000A  EDCB  F006         	call	int_func,f	;refresh shadow registers
  3825                           
  3826                           	psect	intcode_body
  3827   000D96                     __pintcode_body:
  3828                           	callstack 21
  3829   000D96                     int_func:
  3830                           	callstack 21
  3831   000D96  0006               	pop		; remove dummy address from shadow register refresh
  3832   000D98  CFD9 F001          	movff	fsr2l,??_VectorInterrupcion
  3833   000D9C  CFDA F002          	movff	fsr2h,??_VectorInterrupcion+1
  3834   000DA0                     
  3835                           ;main.c: 254:     if (PIR2bits.EEIF == 1) {
  3836   000DA0  A8A1               	btfss	161,4,c	;volatile
  3837   000DA2  EFD5  F006         	goto	i2u123_41
  3838   000DA6  EFD7  F006         	goto	i2u123_40
  3839   000DAA                     i2u123_41:
  3840   000DAA  EFD8  F006         	goto	i2l134
  3841   000DAE                     i2u123_40:
  3842   000DAE                     
  3843                           ;main.c: 255:         PIR2bits.EEIF = 0;
  3844   000DAE  98A1               	bcf	161,4,c	;volatile
  3845   000DB0                     i2l134:
  3846                           
  3847                           ;main.c: 257:     if (PIR1bits.RCIF == 1) {
  3848   000DB0  AA9E               	btfss	158,5,c	;volatile
  3849   000DB2  EFDD  F006         	goto	i2u124_41
  3850   000DB6  EFDF  F006         	goto	i2u124_40
  3851   000DBA                     i2u124_41:
  3852   000DBA  EF18  F007         	goto	i2l2004
  3853   000DBE                     i2u124_40:
  3854   000DBE                     
  3855                           ;main.c: 258:         INTCONbits.GIE_GIEH = 0;
  3856   000DBE  9EF2               	bcf	242,7,c	;volatile
  3857   000DC0                     
  3858                           ;main.c: 259:         if (BufferLleno == 0) {
  3859   000DC0  505A               	movf	_BufferLleno^0,w,c
  3860   000DC2  A4D8               	btfss	status,2,c
  3861   000DC4  EFE6  F006         	goto	i2u125_41
  3862   000DC8  EFE8  F006         	goto	i2u125_40
  3863   000DCC                     i2u125_41:
  3864   000DCC  EF02  F007         	goto	i2l1992
  3865   000DD0                     i2u125_40:
  3866   000DD0                     
  3867                           ;main.c: 260:             MensajeRx[BanderaRx] = RCREG;
  3868   000DD0  0E92               	movlw	low _MensajeRx
  3869   000DD2  2459               	addwf	_BanderaRx^0,w,c
  3870   000DD4  6ED9               	movwf	fsr2l,c
  3871   000DD6  6ADA               	clrf	fsr2h,c
  3872   000DD8  0E00               	movlw	high _MensajeRx
  3873   000DDA  22DA               	addwfc	fsr2h,f,c
  3874   000DDC  CFAE FFDF          	movff	4014,indf2	;volatile
  3875   000DE0                     
  3876                           ;main.c: 261:             BanderaRx++;
  3877   000DE0  2A59               	incf	_BanderaRx^0,f,c
  3878   000DE2                     
  3879                           ;main.c: 262:             if (BanderaRx == Num_Caracteres) {
  3880   000DE2  505C               	movf	_Num_Caracteres^0,w,c
  3881   000DE4  1859               	xorwf	_BanderaRx^0,w,c
  3882   000DE6  A4D8               	btfss	status,2,c
  3883   000DE8  EFF8  F006         	goto	i2u126_41
  3884   000DEC  EFFA  F006         	goto	i2u126_40
  3885   000DF0                     i2u126_41:
  3886   000DF0  EF16  F007         	goto	i2l2000
  3887   000DF4                     i2u126_40:
  3888   000DF4                     
  3889                           ;main.c: 263:                 BanderaRx = 0;
  3890   000DF4  0E00               	movlw	0
  3891   000DF6  6E59               	movwf	_BanderaRx^0,c
  3892                           
  3893                           ;main.c: 264:                 FinRx = 1;
  3894   000DF8  0E01               	movlw	1
  3895   000DFA  6E58               	movwf	_FinRx^0,c
  3896                           
  3897                           ;main.c: 265:                 BufferLleno = 1;
  3898   000DFC  0E01               	movlw	1
  3899   000DFE  6E5A               	movwf	_BufferLleno^0,c
  3900   000E00  EF16  F007         	goto	i2l2000
  3901   000E04                     i2l1992:
  3902                           
  3903                           ;main.c: 268:             MensajeSobrante[BanderaRx] = RCREG;
  3904   000E04  0E8D               	movlw	low _MensajeSobrante
  3905   000E06  2459               	addwf	_BanderaRx^0,w,c
  3906   000E08  6ED9               	movwf	fsr2l,c
  3907   000E0A  6ADA               	clrf	fsr2h,c
  3908   000E0C  0E00               	movlw	high _MensajeSobrante
  3909   000E0E  22DA               	addwfc	fsr2h,f,c
  3910   000E10  CFAE FFDF          	movff	4014,indf2	;volatile
  3911   000E14                     
  3912                           ;main.c: 269:             BanderaRx++;
  3913   000E14  2A59               	incf	_BanderaRx^0,f,c
  3914   000E16                     
  3915                           ;main.c: 270:             if (BanderaRx == Num_Caracteres) {
  3916   000E16  505C               	movf	_Num_Caracteres^0,w,c
  3917   000E18  1859               	xorwf	_BanderaRx^0,w,c
  3918   000E1A  A4D8               	btfss	status,2,c
  3919   000E1C  EF12  F007         	goto	i2u127_41
  3920   000E20  EF14  F007         	goto	i2u127_40
  3921   000E24                     i2u127_41:
  3922   000E24  EF16  F007         	goto	i2l2000
  3923   000E28                     i2u127_40:
  3924   000E28                     
  3925                           ;main.c: 271:                 BanderaRx = 0;
  3926   000E28  0E00               	movlw	0
  3927   000E2A  6E59               	movwf	_BanderaRx^0,c
  3928   000E2C                     i2l2000:
  3929                           
  3930                           ;main.c: 275:         PIR1bits.RCIF = 0;
  3931   000E2C  9A9E               	bcf	158,5,c	;volatile
  3932   000E2E                     
  3933                           ;main.c: 276:         INTCONbits.GIE_GIEH = 1;
  3934   000E2E  8EF2               	bsf	242,7,c	;volatile
  3935   000E30                     i2l2004:
  3936                           
  3937                           ;main.c: 278:     if (PIR1bits.ADIF == 1) {
  3938   000E30  AC9E               	btfss	158,6,c	;volatile
  3939   000E32  EF1D  F007         	goto	i2u128_41
  3940   000E36  EF1F  F007         	goto	i2u128_40
  3941   000E3A                     i2u128_41:
  3942   000E3A  EF35  F007         	goto	i2l141
  3943   000E3E                     i2u128_40:
  3944   000E3E                     
  3945                           ;main.c: 279:         INTCONbits.GIE_GIEH = 0;
  3946   000E3E  9EF2               	bcf	242,7,c	;volatile
  3947                           
  3948                           ;main.c: 281:         ByteSup = ADRESH;
  3949   000E40  CFC4 F057          	movff	4036,_ByteSup	;volatile
  3950                           
  3951                           ;main.c: 282:         ByteInf = ADRESL;
  3952   000E44  CFC3 F067          	movff	4035,_ByteInf	;volatile
  3953                           
  3954                           ;main.c: 283:         ValBIN = ADRESH;
  3955   000E48  CFC4 F064          	movff	4036,_ValBIN	;volatile
  3956   000E4C  0100               	movlb	0	; () banked
  3957   000E4E  6B65               	clrf	(_ValBIN+1)& (0+255),b
  3958   000E50                     
  3959                           ; BSR set to: 0
  3960                           ;main.c: 284:         ValBIN = ValBIN << 8;
  3961   000E50  5164               	movf	_ValBIN& (0+255),w,b
  3962   000E52  6F65               	movwf	(_ValBIN+1)& (0+255),b
  3963   000E54  6B64               	clrf	_ValBIN& (0+255),b
  3964   000E56                     
  3965                           ; BSR set to: 0
  3966                           ;main.c: 285:         ValBIN = ValBIN + ADRESL;
  3967   000E56  50C3               	movf	195,w,c	;volatile
  3968   000E58  2564               	addwf	_ValBIN& (0+255),w,b
  3969   000E5A  6F64               	movwf	_ValBIN& (0+255),b
  3970   000E5C  0E00               	movlw	0
  3971   000E5E  2165               	addwfc	(_ValBIN+1)& (0+255),w,b
  3972   000E60  6F65               	movwf	(_ValBIN+1)& (0+255),b
  3973   000E62                     
  3974                           ; BSR set to: 0
  3975                           ;main.c: 286:         BanderaADC = 1;
  3976   000E62  0E01               	movlw	1
  3977   000E64  6F66               	movwf	_BanderaADC& (0+255),b
  3978   000E66                     
  3979                           ; BSR set to: 0
  3980                           ;main.c: 288:         INTCONbits.GIE_GIEH = 1;
  3981   000E66  8EF2               	bsf	242,7,c	;volatile
  3982   000E68                     
  3983                           ; BSR set to: 0
  3984                           ;main.c: 289:         PIR1bits.ADIF = 0;
  3985   000E68  9C9E               	bcf	158,6,c	;volatile
  3986   000E6A                     i2l141:
  3987   000E6A  C002  FFDA         	movff	??_VectorInterrupcion+1,fsr2h
  3988   000E6E  C001  FFD9         	movff	??_VectorInterrupcion,fsr2l
  3989   000E72  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3990   000E74  0011               	retfie		f
  3991   000E76                     __end_of_VectorInterrupcion:
  3992                           	callstack 0
  3993                           
  3994                           	psect	rparam
  3995   000000                     
  3996                           	psect	temp
  3997   00005D                     btemp:
  3998                           	callstack 0
  3999   00005D                     	ds	1
  4000   000000                     int$flags	set	btemp
  4001   000000                     wtemp8	set	btemp+1
  4002   000000                     ttemp5	set	btemp+1
  4003   000000                     ttemp6	set	btemp+4
  4004   000000                     ttemp7	set	btemp+8
  4005                           
  4006                           	psect	idloc
  4007                           
  4008                           ;Config register IDLOC0 @ 0x200000
  4009                           ;	unspecified, using default values
  4010   200000                     	org	2097152
  4011   200000  FF                 	db	255
  4012                           
  4013                           ;Config register IDLOC1 @ 0x200001
  4014                           ;	unspecified, using default values
  4015   200001                     	org	2097153
  4016   200001  FF                 	db	255
  4017                           
  4018                           ;Config register IDLOC2 @ 0x200002
  4019                           ;	unspecified, using default values
  4020   200002                     	org	2097154
  4021   200002  FF                 	db	255
  4022                           
  4023                           ;Config register IDLOC3 @ 0x200003
  4024                           ;	unspecified, using default values
  4025   200003                     	org	2097155
  4026   200003  FF                 	db	255
  4027                           
  4028                           ;Config register IDLOC4 @ 0x200004
  4029                           ;	unspecified, using default values
  4030   200004                     	org	2097156
  4031   200004  FF                 	db	255
  4032                           
  4033                           ;Config register IDLOC5 @ 0x200005
  4034                           ;	unspecified, using default values
  4035   200005                     	org	2097157
  4036   200005  FF                 	db	255
  4037                           
  4038                           ;Config register IDLOC6 @ 0x200006
  4039                           ;	unspecified, using default values
  4040   200006                     	org	2097158
  4041   200006  FF                 	db	255
  4042                           
  4043                           ;Config register IDLOC7 @ 0x200007
  4044                           ;	unspecified, using default values
  4045   200007                     	org	2097159
  4046   200007  FF                 	db	255
  4047                           
  4048                           	psect	config
  4049                           
  4050                           ;Config register CONFIG1L @ 0x300000
  4051                           ;	PLL Prescaler Selection bits
  4052                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4053                           ;	System Clock Postscaler Selection bits
  4054                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4055                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4056                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4057   300000                     	org	3145728
  4058   300000  00                 	db	0
  4059                           
  4060                           ;Config register CONFIG1H @ 0x300001
  4061                           ;	Oscillator Selection bits
  4062                           ;	FOSC = XT_XT, XT oscillator (XT)
  4063                           ;	Fail-Safe Clock Monitor Enable bit
  4064                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4065                           ;	Internal/External Oscillator Switchover bit
  4066                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4067   300001                     	org	3145729
  4068   300001  00                 	db	0
  4069                           
  4070                           ;Config register CONFIG2L @ 0x300002
  4071                           ;	Power-up Timer Enable bit
  4072                           ;	PWRT = ON, PWRT enabled
  4073                           ;	Brown-out Reset Enable bits
  4074                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4075                           ;	Brown-out Reset Voltage bits
  4076                           ;	BORV = 3, Minimum setting 2.05V
  4077                           ;	USB Voltage Regulator Enable bit
  4078                           ;	VREGEN = OFF, USB voltage regulator disabled
  4079   300002                     	org	3145730
  4080   300002  1E                 	db	30
  4081                           
  4082                           ;Config register CONFIG2H @ 0x300003
  4083                           ;	Watchdog Timer Enable bit
  4084                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4085                           ;	Watchdog Timer Postscale Select bits
  4086                           ;	WDTPS = 32768, 1:32768
  4087   300003                     	org	3145731
  4088   300003  1E                 	db	30
  4089                           
  4090                           ; Padding undefined space
  4091   300004                     	org	3145732
  4092   300004  FF                 	db	255
  4093                           
  4094                           ;Config register CONFIG3H @ 0x300005
  4095                           ;	CCP2 MUX bit
  4096                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4097                           ;	PORTB A/D Enable bit
  4098                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4099                           ;	Low-Power Timer 1 Oscillator Enable bit
  4100                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4101                           ;	MCLR Pin Enable bit
  4102                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4103   300005                     	org	3145733
  4104   300005  83                 	db	131
  4105                           
  4106                           ;Config register CONFIG4L @ 0x300006
  4107                           ;	Stack Full/Underflow Reset Enable bit
  4108                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4109                           ;	Single-Supply ICSP Enable bit
  4110                           ;	LVP = OFF, Single-Supply ICSP disabled
  4111                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4112                           ;	ICPRT = OFF, ICPORT disabled
  4113                           ;	Extended Instruction Set Enable bit
  4114                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4115                           ;	Background Debugger Enable bit
  4116                           ;	DEBUG = 0x1, unprogrammed default
  4117   300006                     	org	3145734
  4118   300006  81                 	db	129
  4119                           
  4120                           ; Padding undefined space
  4121   300007                     	org	3145735
  4122   300007  FF                 	db	255
  4123                           
  4124                           ;Config register CONFIG5L @ 0x300008
  4125                           ;	Code Protection bit
  4126                           ;	CP0 = ON, Block 0 (000800-001FFFh) is code-protected
  4127                           ;	Code Protection bit
  4128                           ;	CP1 = ON, Block 1 (002000-003FFFh) is code-protected
  4129                           ;	Code Protection bit
  4130                           ;	CP2 = ON, Block 2 (004000-005FFFh) is code-protected
  4131                           ;	Code Protection bit
  4132                           ;	CP3 = ON, Block 3 (006000-007FFFh) is code-protected
  4133   300008                     	org	3145736
  4134   300008  00                 	db	0
  4135                           
  4136                           ;Config register CONFIG5H @ 0x300009
  4137                           ;	Boot Block Code Protection bit
  4138                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4139                           ;	Data EEPROM Code Protection bit
  4140                           ;	CPD = OFF, Data EEPROM is not code-protected
  4141   300009                     	org	3145737
  4142   300009  C0                 	db	192
  4143                           
  4144                           ;Config register CONFIG6L @ 0x30000A
  4145                           ;	Write Protection bit
  4146                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4147                           ;	Write Protection bit
  4148                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4149                           ;	Write Protection bit
  4150                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4151                           ;	Write Protection bit
  4152                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4153   30000A                     	org	3145738
  4154   30000A  0F                 	db	15
  4155                           
  4156                           ;Config register CONFIG6H @ 0x30000B
  4157                           ;	Configuration Register Write Protection bit
  4158                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4159                           ;	Boot Block Write Protection bit
  4160                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4161                           ;	Data EEPROM Write Protection bit
  4162                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4163   30000B                     	org	3145739
  4164   30000B  E0                 	db	224
  4165                           
  4166                           ;Config register CONFIG7L @ 0x30000C
  4167                           ;	Table Read Protection bit
  4168                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4169                           ;	Table Read Protection bit
  4170                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4171                           ;	Table Read Protection bit
  4172                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4173                           ;	Table Read Protection bit
  4174                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4175   30000C                     	org	3145740
  4176   30000C  0F                 	db	15
  4177                           
  4178                           ;Config register CONFIG7H @ 0x30000D
  4179                           ;	Boot Block Table Read Protection bit
  4180                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4181   30000D                     	org	3145741
  4182   30000D  40                 	db	64
  4183                           tosu	equ	0xFFF
  4184                           tosh	equ	0xFFE
  4185                           tosl	equ	0xFFD
  4186                           stkptr	equ	0xFFC
  4187                           pclatu	equ	0xFFB
  4188                           pclath	equ	0xFFA
  4189                           pcl	equ	0xFF9
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           prodh	equ	0xFF4
  4195                           prodl	equ	0xFF3
  4196                           indf0	equ	0xFEF
  4197                           postinc0	equ	0xFEE
  4198                           postdec0	equ	0xFED
  4199                           preinc0	equ	0xFEC
  4200                           plusw0	equ	0xFEB
  4201                           fsr0h	equ	0xFEA
  4202                           fsr0l	equ	0xFE9
  4203                           wreg	equ	0xFE8
  4204                           indf1	equ	0xFE7
  4205                           postinc1	equ	0xFE6
  4206                           postdec1	equ	0xFE5
  4207                           preinc1	equ	0xFE4
  4208                           plusw1	equ	0xFE3
  4209                           fsr1h	equ	0xFE2
  4210                           fsr1l	equ	0xFE1
  4211                           bsr	equ	0xFE0
  4212                           indf2	equ	0xFDF
  4213                           postinc2	equ	0xFDE
  4214                           postdec2	equ	0xFDD
  4215                           preinc2	equ	0xFDC
  4216                           plusw2	equ	0xFDB
  4217                           fsr2h	equ	0xFDA
  4218                           fsr2l	equ	0xFD9
  4219                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        10
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      92
    BANK0           160      2      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1140$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> MensajeTx(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1081$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1081$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 6
		 -> MensajeTx(BANK0[5]), STR_2(CODE[5]), STR_1(CODE[6]), MensajeRx(BANK0[4]), 


Critical Paths under _main in COMRAM

    _lcd_init->_Lcd_Cmd
    _Tx_USART->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_gotoxy->_Lcd_Cmd
    _lcd_clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _VectorInterrupcion in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _VectorInterrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _VectorInterrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _VectorInterrupcion in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _VectorInterrupcion in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _VectorInterrupcion in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _VectorInterrupcion in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _VectorInterrupcion in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _VectorInterrupcion in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8028
                                              0 BANK0      2     2      0
                          _ConfigADC
                          _ConfigPIC
                        _ConfigUSART
                           _Tx_USART
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                              5 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Tx_USART                                             0     0      0    7830
                          _Transmite
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_putc
                     _lcd_write_char
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    16      6    6438
                                             64 COMRAM    20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6085
                                             56 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    5729
                                             42 COMRAM    14     8      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4     643
                                              8 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    3822
                                             29 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2195
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1083
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             6     4      2     572
                                              6 COMRAM     6     4      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       3     3      0     178
                                              3 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1     532
                                              5 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              3 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      88
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Transmite                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigPIC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _VectorInterrupcion                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigADC
   _ConfigPIC
   _ConfigUSART
   _Tx_USART
     _Transmite
     _lcd_clear
       _Lcd_Cmd
         _Lcd_Port
     _lcd_gotoxy
       _Lcd_Cmd
     _lcd_putc
       _lcd_write_char
         _Lcd_Port
     _lcd_write_char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _lcd_init
     _Lcd_Cmd
     _Lcd_Port

 _VectorInterrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      38       5       35.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      5C       1       97.9%
BITBIGSFRll         23      0       0      31        0.0%
BITBIGSFRhhlhhh     21      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhhlhhl      B      0       0      22        0.0%
BITBIGSFRhhlll       9      0       0      26        0.0%
BITBIGSFRhhlhll      7      0       0      23        0.0%
BITBIGSFRlh          7      0       0      30        0.0%
BITBIGSFRhllh        6      0       0      28        0.0%
BITBIGSFRhlll        5      0       0      29        0.0%
BITBIGSFRhhlhll      4      0       0      25        0.0%
BITBIGSFRhhlhll      3      0       0      24        0.0%
BITBIGSFRhlh         1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      94      32        0.0%
DATA                 0      0      94       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 30 22:03:37 2023

                        l91 141C                          l93 1432                          l95 1448  
                        l97 145E                          l99 1460                ___awdiv@sign 0008  
       ___wmul@multiplicand 0005                  _BanderaADC 0066                         l102 16BC  
                       l111 1404                         l105 16E0                         l114 139E  
                       l123 132C                         l117 160E                         l213 1634  
                       l150 1658                         l144 169C                         l153 165E  
                       l162 12AE                         l147 16D2                         l171 09B2  
                       l156 166C                         l174 0872                         l159 167A  
                       l184 090C                         l176 087C                         l177 0886  
                       l186 0914                         l178 0890                         l187 091C  
                       l179 089A                         l444 10C8                         l199 09F6  
                       l457 1178                         l914 11BE                         l924 0AF0  
                       l917 1200                         l926 0AF8                         l942 0FFC  
                       l919 1222                         l927 0B3E                         l960 1506  
                       l938 0C3A                         l946 1004                         l954 0D94  
                       l891 1552                         l964 15CE                         l990 16EC  
                       l967 15D6                         l979 0F3E                         l987 1596  
                       u800 1058                         u801 1054                         u810 1076  
                       u730 0E88                         u811 1072                         u731 0E84  
                       u820 1092                         u740 0E9A                         u900 1188  
                       u821 108E                         u741 0E96                         u901 1184  
                       u830 10B8                         u750 0EC2                         u910 11AA  
                       u831 10B4                         u751 0EBE                         u911 11A6  
                       u840 10DC                         u760 0EF8                         u920 1200  
                       u841 10D8                         u761 0EF4                         u921 11FC  
                       u850 10F6                         u770 1596                         u930 120E  
                       u851 10F2                         u771 1592                         u931 120A  
                       u780 1018                         u860 1110                         u940 15B2  
                       u781 1014                         u861 110C                         u941 15AE  
                       u790 1032                         u870 112E                         u950 0AB8  
                       u791 102E                         u871 112A                         u951 0AB2  
                       u880 1144                         u960 0ABA                         u881 1140  
                       u890 1168                         u970 0ACC                         u891 1164  
                       u971 0AC8                         u980 0AE4                         u981 0AE0  
                       u990 0B10                         u991 0B0C                         _abs 1598  
                       _pad 117A                         _var 0091                ___awmod@sign 0008  
                       wreg 0FE8                 lcd_gotoxy@a 0007                 lcd_gotoxy@b 0006  
               lcd_gotoxy@y 0009                 lcd_gotoxy@z 0008                        ?_abs 0009  
                      l2200 0854                        l2202 0868                        l2210 08EE  
                      l2220 0924                        l2212 0900                        l2204 086C  
                      l2230 0980                        l2214 0904                        l2222 0956  
                      l2206 08A4                        l1600 103A                        l2240 09AE  
                      l2232 0982                        l2224 0968                        l2216 0906  
                      l2208 08AC                        l1610 1068                        l1602 103E  
                      l2250 09E6                        l2234 0984                        l2226 097A  
                      l1620 109C                        l1612 1076                        l1604 1046  
                      l1700 0B00                        l2252 09F8                        l2260 0A2E  
                      l2244 09C2                        l2228 097E                        l2236 098A  
                      l1622 10A2                        l1614 107C                        l1606 1058  
                      l1710 0B3A                        l1702 0B10                        l2270 0A78  
                      l2262 0A3E                        l2254 0A0A                        l2246 09D4  
                      l2238 099C                        l2350 08C0                        l2190 0828  
                      l1616 1092                        l1608 1060                        l1624 10A8  
                      l1640 10E8                        l1632 10CA                        l1560 0E76  
                      l1720 0B8C                        l1712 0B46                        l1704 0B16  
                      l2264 0A4E                        l2256 0A0E                        l2248 09DE  
                      l2272 0A7C                        l2352 0938                        l2192 082C  
                      l2184 0812                        l1810 16AA                        l1626 10B8  
                      l1618 109A                        l1650 1120                        l1642 10F6  
                      l1634 10CE                        l1570 0EF8                        l1562 0E88  
                      l1730 0BF4                        l1722 0B92                        l1714 0B4E  
                      l1706 0B26                        l2266 0A52                        l2258 0A14  
                      l2274 0A92                        l2194 0830                        l2186 0822  
                      l1812 16BA                        l1804 16A0                        l1820 15F0  
                      l1628 10C0                        l1652 112E                        l1660 1158  
                      l1644 10FE                        l1636 10DC                        l1564 0E9A  
                      l1580 1576                        l1732 0C04                        l1716 0B54  
                      l1724 0BAE                        l1708 0B32                        l1740 0F40  
                      l1900 137A                        l2276 0A9C                        l2268 0A66  
                      l2196 0840                        l2188 0824                        l1806 16A2  
                      l1830 1604                        l1822 15F2                        l1814 15DA  
                      l1590 100A                        l1662 1168                        l1654 1144  
                      l1646 1110                        l1638 10E4                        l1566 0EA4  
                      l1574 1554                        l1670 1188                        l1734 0C0A  
                      l1726 0BC8                        l1718 0B86                        l1582 1610  
                      l1750 0FD4                        l1742 0F48                        l1910 1398  
                      l1902 1380                        l2198 0850                        l1920 16CA  
                      l1912 167C                        l1760 1434                        l1752 1408  
                      l1808 16A8                        l1832 160C                        l1824 15FA  
                      l1816 15E6                        l1592 1018                        l1664 1170  
                      l1656 114C                        l1648 1118                        l1568 0EC2  
                      l1576 1560                        l1680 11DE                        l1672 119C  
                      l1736 0C1A                        l1728 0BDA                        l1584 162C  
                      l1744 0F6C                        l1840 14FE                        l1904 1386  
                      l1922 16CC                        l1914 168C                        l1930 1646  
                      l1762 1442                        l1754 1416                        l1850 13C4  
                      l1826 15FC                        l1818 15E8                        l1594 1020  
                      l1658 1152                        l1578 1572                        l1682 11E2  
                      l1674 11AA                        l1690 0AA8                        l1746 0FA6  
                      l1770 0C60                        l1834 14BA                        l1906 138C  
                      l1924 16CE                        l1916 168E                        l1940 1650  
                      l1932 1648                        l1764 144A                        l1756 141E  
                      l1844 16D4                        l1860 13FE                        l1852 13CA  
                      l1828 1602                        l1596 1024                        l1588 1006  
                      l1684 120E                        l1676 11B6                        l1668 117A  
                      l1692 0ABC                        l1748 0FC6                        l1780 0CAC  
                      l1772 0C6E                        l1836 14C6                        l1908 1392  
                      l1926 16D0                        l1918 16BE                        l1942 1652  
                      l1934 164A                        l1870 165A                        l1766 1458  
                      l1758 142C                        l1854 13D4                        l1846 13A2  
                      l1862 12B0                        l1598 1032                        l1686 1598  
                      l1678 11CA                        l1694 0ACC                        l1790 0D42  
                      l1782 0CB6                        l1774 0C7C                        l1838 14E2  
                      l1950 1234                        l1936 164C                        l1928 1636  
                      l1856 13E6                        l1848 13B2                        l1864 12BC  
                      l1688 15B2                        l1696 0AD4                        l1784 0CC6  
                      l1776 0C80                        l1768 0C3C                        l1880 1544  
                      l1872 1508                        l1960 125E                        l1952 1238  
                      l1944 1224                        l1938 164E                        l1858 13F8  
                      l1866 12EC                        l1698 0AE4                        l1794 0D5A  
                      l1786 0CE2                        l1778 0C9C                        l1874 1518  
                      l1970 12A2                        l1962 126A                        l1954 1244  
                      l1946 1228                        l1890 134A                        l1868 12F0  
                      l1788 0CFE                        l1876 1520                        l1964 1270  
                      l1956 1248                        l1948 122C                        l1892 135A  
                      l1884 132E                        l1798 0D6C                        l1878 1528  
                      l1966 127A                        l1958 1252                        l1894 1360  
                      l1886 1334                        ?_pad 0013                        l1968 1286  
                      l1896 136E                        l1888 1344                        l1898 1374  
                      STR_1 0801                        STR_2 0807                        STR_3 080C  
                      u1000 0B26                        u1001 0B22                        u1010 0BC8  
                      u1011 0BC4                        u1100 1458                        u1020 0BDA  
                      u1101 1454                        u1021 0BD6                        u1030 0BF4  
                      u1110 0C60                        u1031 0BF0                        u1111 0C5C  
                      u1200 132C                        u1040 0C04                        u1120 0CAC  
                      u1201 1328                        u1041 0C00                        u1121 0CA8  
                      u1210 166C                        u1050 0F6C                        u1130 0CE2  
                      u1211 1668                        u1051 0F68                        u1131 0CDE  
                      u1220 167A                        u1060 0FFC                        u1140 0CFE  
                      u1221 1676                        u1061 0FF8                        u1141 0CFA  
                      u1070 1416                        u1150 14FE                        u1071 1412  
                      u1151 14FA                        u1080 142C                        u1160 13B2  
                      u1081 1428                        u1161 13AE                        u1090 1442  
                      u1170 13E6                        u1091 143E                        u1171 13E2  
                      u1180 12E8                        u1500 097A                        u1501 0976  
                      u1190 131C                        u1510 099C                        u1511 0998  
                      u1600 0A8E                        u1520 09AE                        u1601 0A8A  
                      u1521 09AA                        u1530 09C2                        u1450 0840  
                      u1187 12DE                        u1531 09BE                        u1451 083C  
                      u1540 09D4                        u1460 0850                        u1197 1312  
                      u1541 09D0                        u1461 084C                        u1550 0A0A  
                      u1470 0868                        u1551 0A06                        u1471 0864  
                      u1560 0A3E                        u1480 0900                        u1561 0A3A  
                      u1617 0A20                        u1481 08FC                        u1570 0A4E  
                      u1490 0968                        u1627 133A                        u1571 0A4A  
                      u1491 0964                        u1580 0A66                        u1637 1350  
                      u1581 0A62                        u1590 0A78                        u1647 1366  
                      u1591 0A74                        u1657 122E                        u1667 123E  
                      u1677 15F4                        u1687 1606                        u1697 16B0  
           lcd_write_char@a 0006             lcd_write_char@y 0005      __end_of_lcd_write_char 1610  
                      abs@a 0009                        _dbuf 0068                        _main 0812  
                      _dtoa 0AA8                        _prec 0062                        pad@i 001A  
                      pad@p 0017                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      pad@w 001C                        fsr2l 0FD9                        btemp 005D  
                      prodh 0FF4                        prodl 0FF3                        start 000E  
       __end_of_ConfigUSART 165A             __end_of_Lcd_Cmd 16BE                ___param_bank 0000  
                     ??_abs 000B                       ??_pad 0019                       ?_main 0001  
                     ?_dtoa 001E             __end_of___awdiv 10CA             __end_of___awmod 117A  
                     _CMCON 0FB4             ___awdiv@divisor 0005                       i2l141 0E6A  
                     i2l134 0DB0             ___awdiv@counter 0007                       _RCREG 0FAE  
                     _RCSTA 0FAB                vfpfcnvrt@fmt 002D                       _SPBRG 0FAF  
                     _PORTD 0F83                       _TRISA 0F92                       _TRISB 0F93  
                     _TRISC 0F94                       _TRISD 0F95                       _TRISE 0F96  
                     _TXREG 0FAD                       _TXSTA 0FAC                       _FinRx 0058  
                     _flags 0055         read_prec_or_width@c 000F         read_prec_or_width@n 0010  
                     _fputc 0E76                       _fputs 1554                       pad@fp 0013  
                     _width 0060                       _putch 16EC                       dtoa@d 0020  
                     dtoa@i 0028                       dtoa@p 0024                       dtoa@s 002A  
                     dtoa@w 0026                       tablat 0FF5             ?_lcd_write_char 0001  
                     ttemp5 005E                       ttemp6 0061                       ttemp7 0065  
                     status 0FD8                       wtemp8 005E             __end_of_sprintf 1554  
          __end_of_Lcd_Port 1462             __initialization 1462                __end_of_main 0AA8  
              __end_of_dtoa 0C3C                      ??_main 0096                      ??_dtoa 0022  
             __activetblptr 0002            __end_of_Tx_USART 12B0  __end_of_VectorInterrupcion 0E76  
__end_of_read_prec_or_width 1006                      _ADCON0 0FC2                      _ADCON1 0FC1  
                    _ADCON2 0FC0                      ?_fputc 0003                      ?_fputs 000C  
                    _ADRESH 0FC4                      _ADRESL 0FC3            ___awdiv@dividend 0003  
                    ?_putch 0001                      i2l2000 0E2C                      i2l2010 0E56  
                    i2l2002 0E2E                      i2l2012 0E62                      i2l2004 0E30  
                    i2l2014 0E66                      i2l2006 0E3E                      i2l2016 0E68  
                    i2l2008 0E50                 _ConfigUSART 1636                      i2l1980 0DBE  
                    i2l1990 0DF4                      i2l1982 0DC0                      i2l1984 0DD0  
                    i2l1992 0E04                      i2l1976 0DA0                      i2l1994 0E14  
                    i2l1986 0DE0                      i2l1978 0DAE                      i2l1996 0E16  
                    i2l1988 0DE2                      i2l1998 0E28                   ??_Lcd_Cmd 0004  
               _BufferLleno 005A                      _ValBIN 0064                vfprintf@cfmt 003F  
          __end_of_lcd_init 13A0            __end_of_lcd_putc 132E                      ___wmul 1610  
                 ??___awdiv 0007                   ??___awmod 0007        read_prec_or_width@ap 000B  
                    clear_0 149A                      clear_1 14A6            ___awdiv@quotient 0009  
           ___awmod@divisor 0005                      isa$std 0001             ___awmod@counter 0007  
                    pad@buf 0015                      dtoa@fp 001E                      fputc@c 0003  
                    fputs@c 0010                      fputs@i 0011                __pdataCOMRAM 005C  
                    fputs@s 000C                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 0001  
          __end_of_vfprintf 1508                   ??_sprintf 0047                  __accesstop 0060  
   __end_of__initialization 14AC               ___rparam_used 0001           __end_of_ConfigADC 16D4  
         __end_of_ConfigPIC 169E              __pcstackCOMRAM 0001                __pidataBANK0 16E2  
             __end_of_fputc 0F40               __end_of_fputs 1598               __end_of_putch 16EE  
            lcd_gotoxy@temp 000A                   ?_Lcd_Port 0001                     ??_fputc 0007  
                   ??_fputs 0010                     ??_putch 0003                  __pbssBANK0 0060  
                 ?_Tx_USART 0001                     ?___wmul 0003           __end_of_Transmite 167C  
                   _BAUDCON 0FB8                 _Instrumento 0056                  _lcd_gotoxy 13A0  
          ??_lcd_write_char 0004                  ??_Lcd_Port 0003                   ?_lcd_init 0001  
                 ?_lcd_putc 0007          lcd_write_char@temp 0004                     _Lcd_Cmd 169E  
                   _ByteInf 0067                     _ByteSup 0057                     __Hparam 0000  
                   _TxUSART 005B                     __Lparam 0000                  ??_Tx_USART 0055  
         __end_of_lcd_clear 16E2                     ___awdiv 1006                     ___awmod 10CA  
                 ?_vfprintf 0039                __psmallconst 0800                     __pcinit 1462  
                   __ramtop 0800                     __ptext0 0812                     __ptext1 132E  
                   __ptext2 1224                     __ptext3 1508                     __ptext4 14BA  
                   __ptext5 0C3C                     __ptext6 0F40                     __ptext7 1610  
                   __ptext8 0AA8                     __ptext9 117A       read_prec_or_width@fmt 0009  
          ___awmod@dividend 0003                     _sprintf 1508                  ??_lcd_init 0006  
            __pintcode_body 0D96                  ??_lcd_putc 0009        end_of_initialization 14AC  
              ?_ConfigUSART 0001                     fputc@fp 0005               __Lmediumconst 0000  
                   int_func 0D96                     fputs@fp 000E          _VectorInterrupcion 0008  
        _read_prec_or_width 0F40           __end_of_vfpfcnvrt 0D96         ?_VectorInterrupcion 0001  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0009  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 0033                   Lcd_Port@a 0003                  ??_vfprintf 003F  
               ?_lcd_gotoxy 0006        ??_VectorInterrupcion 0001        ??_read_prec_or_width 000D  
                 _BanderaRx 0059                   _TXSTAbits 0FAC                   _ConfigADC 16BE  
                 _ConfigPIC 167C                 vfpfcnvrt@ap 002F                 vfpfcnvrt@cp 0037  
               vfpfcnvrt@fp 002B              __end_of___wmul 1636               __pidataCOMRAM 16EE  
       start_initialization 1462                 __end_of_abs 15D8                 __end_of_pad 1224  
                 _MensajeRx 0092                   _MensajeTx 0088                 vfprintf@fmt 003B  
                  ??___wmul 0007                  ?_ConfigADC 0001                 __pdataBANK0 008D  
                ?_ConfigPIC 0001                   _Transmite 165A                 __pbssCOMRAM 0055  
             __pcstackBANK0 0096                    ?_Lcd_Cmd 0001                   _dtoa$1162 0022  
                 __pintcode 0008                    ?___awdiv 0003                    ?___awmod 0003  
                 _lcd_clear 16D4                  ?_Transmite 0001                 __smallconst 0800  
           _MensajeSobrante 008D                    ?_sprintf 0041              ___wmul@product 0007  
                  _LATCbits 0F8B                    _LATDbits 0F8C                    _IPR1bits 0F9F  
                  _PIE1bits 0F9D                    i2u123_40 0DAE                    i2u123_41 0DAA  
                  i2u124_40 0DBE                    i2u124_41 0DBA                    i2u125_40 0DD0  
                  i2u125_41 0DCC                    i2u126_40 0DF4                    i2u126_41 0DF0  
                  i2u127_40 0E28                    i2u127_41 0E24                    i2u128_40 0E3E  
                  i2u128_41 0E3A                    Lcd_Cmd@a 0005                    _PIR1bits 0F9E  
                  _PIR2bits 0FA1                    _RCONbits 0FD0                 ??_ConfigADC 0003  
               ??_ConfigPIC 0003                  ?_lcd_clear 0001                   _vfpfcnvrt 0C3C  
                _ADCON0bits 0FC2           ___wmul@multiplier 0003                   lcd_putc@a 0007  
                 lcd_putc@i 000B                ??_lcd_gotoxy 0007                    _Lcd_Port 1406  
                 copy_data0 1476                    __Hrparam 0000                  vfprintf@ap 003D  
                  __Lrparam 0000                    _Tx_USART 1224                  vfprintf@fp 0039  
        __end_of_lcd_gotoxy 1406                  ?_vfpfcnvrt 002B                 ??_Transmite 0003  
                sprintf@fmt 0043                    __ptext10 1554                    __ptext11 0E76  
                  __ptext20 169E                    __ptext12 16EC                    __ptext21 1406  
                  __ptext13 1598                    __ptext22 165A                    __ptext14 10CA  
                  __ptext23 1636                    __ptext15 1006                    __ptext24 167C  
                  __ptext16 12B0                    __ptext25 16BE                    __ptext17 15D8  
                  __ptext18 13A0                    __ptext19 16D4                    _lcd_init 132E  
                  _lcd_putc 12B0                    isa$xinst 0000                    int$flags 005D  
                  _vfprintf 14BA                 ??_lcd_clear 0006                  _INTCONbits 0FF2  
                  intlevel2 0000                   sprintf@ap 0047              _Num_Caracteres 005C  
               ??_vfpfcnvrt 0031                    sprintf@f 0049                    sprintf@s 0041  
             ??_ConfigUSART 0003              _lcd_write_char 15D8  
